{"version":3,"sources":["-","../../mol.ts","../../mol.jam.js","../../ambient/ambient.ts","../../../node/node.node.ts","../../owning/owning.ts","../../fail/fail.ts","../../fail/hidden/hidden.ts","../../type/writable/writable.js","../../object2/object2.ts","../../deprecated/deprecated.ts","../../tree/tree.ts","../../log3/log3.ts","../../log3/log3.node.ts","../../wrapper/wrapper.ts","../../after/tick/tick.ts","../../compare/any/any.ts","../../conform/conform.ts","../../array/trim/trim.ts","../../dev/format/format.ts","../../fiber/fiber.ts","../../object/object.ts","../../atom2/atom2.ts","../../atom2/autorun/autorun.ts","../../mem/force/force.ts","../../mem/mem.ts","../../type/param/param.js","../../type/result/result.js","../../dict/dict.ts","../../mem/key/key.ts","../../const/const.ts","../../charset/decode/decode.ts","../../charset/encode/encode.ts","../../compare/array/array.ts","../../file/file.ts","../../file/file.node.ts","../../exec/exec.node.ts","../../dom/context/context.ts","../../dom/context/context.node.ts","../../state/local/local.ts","../../locale/locale.ts","../../window/window.node.ts","../../defer/defer.ts","../../view/selection/selection.ts","../../dom/qname/qname.ts","../../dom/render/attributes/attributes.ts","../../fail/catch/catch.ts","../../dom/render/styles/styles.ts","../../dom/render/fields/fields.ts","../../dom/render/children/children.ts","../../func/name/name.ts","../../type/keys/extract/extract.js","../../type/pick/pick.js","../../style/attach/attach.ts","../../decor/decor.ts","../../style/unit/unit.ts","../../style/func/func.ts","../../theme/theme.ts","../../theme/-css/theme.css.ts","../../skin/-css/skin.css.ts","../../view/view/view.ts","../../view/view/-css/view.css.ts","../../view/tree/test/-view.tree/simple.view.tree.ts","../../view/tree/test/-view.tree/binding_right.view.tree.ts","../../view/tree/test/-view.tree/binding.view.tree.ts","../../view/tree/test/-view.tree/attributes.view.tree.ts","../../view/tree/test/-view.tree/subcomponent.view.tree.ts","../../view/tree/tree.ts","../../graph/graph.ts","../../sourcemap/sourcemap.ts","../../base64/encode/encode.ts","../../base64/encode/encode.node.ts","../../diff/path/path.ts","../../error/mix/mix.ts","../build.node.ts","../../server/server.node.ts","../../compare/deep/deep.ts","../server/server.node.ts","../../plugin/plugin.ts"],"names":[],"mappings":"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","file":"node.esm.js","sourcesContent":[null,"Error.stackTraceLimit = Infinity;\n\ndeclare namespace $ {}\nexport = $\nmodule.exports\n",null,"namespace $ {\n\n\texport namespace $$ { export let $$ : typeof $ }\n\n\texport const $mol_ambient_ref : unique symbol = Symbol( '$mol_ambient_ref' )\n\n\texport type $mol_ambient_context = ( typeof globalThis ) & ( typeof $.$$ ) & ( typeof $ )\n\n\texport function $mol_ambient( this : $mol_ambient_context | void , overrides : Partial< $mol_ambient_context > ) : $mol_ambient_context {\n\t\treturn Object.setPrototypeOf( overrides , this || $ )\n\t}\n\n}\n","interface $node {\n\t[key:string]: any\n}\n\nvar $node = new Proxy( {} as any , { get( target , name : string , wrapper ) {\n\n\tconst path = require( 'path' ) as typeof import( 'path' )\n\tconst fs = require( 'fs' ) as typeof import( 'fs' )\n\tconst mod = require( 'module' ) as typeof import( 'module' )\n\n\tif( mod.builtinModules.indexOf( name ) >= 0 ) return require( name )\n\n\tlet dir = path.resolve( '.' )\n\tconst suffix = `./node_modules/${ name }`\n\n\tconst $$ = ( $ as any )\n\t\n\twhile( !fs.existsSync( path.join( dir , suffix ) ) ) {\n\n\t\tconst parent = path.resolve( dir , '..' )\n\n\t\tif( parent === dir ) {\n\n\t\t\t$$.$mol_exec( '.' , 'npm' , 'install' , name )\n\t\t\t\n\t\t\ttry {\n\t\t\t\t$$.$mol_exec( '.' , 'npm' , 'install' , '@types/' + name )\n\t\t\t} catch {}\n\n\t\t\tbreak\n\n\t\t} else {\n\n\t\t\tdir = parent\n\n\t\t}\n\n\t}\n\t\n\treturn require( name )\n\n} } ) as $node\n","namespace $ {\n\n\texport const $mol_owning_map = new WeakMap< any , any >()\n\n\texport function $mol_owning_allow< Having >(\n\t\thaving : Having ,\n\t) : having is Having & {\n\t\tdestructor() : void\n\t} {\n\t\ttry {\n\t\t\tif( !having ) return false\n\t\t\tif( typeof having !== 'object' ) return false\n\t\t\tif( typeof having['destructor'] !== 'function' ) return false\n\t\t\treturn true\n\t\t} catch {\n\t\t\treturn false\n\t\t}\n\t}\n\n\texport function $mol_owning_get< Having , Owner extends object >( having : Having , Owner? : { new() : Owner } ) : Owner | null {\n\t\n\t\tif( !$mol_owning_allow( having ) ) return null\n\n\t\twhile( true ) {\n\n\t\t\tconst owner = $mol_owning_map.get( having )\n\t\t\tif( !owner ) return owner\n\t\t\tif( !Owner ) return owner\n\t\t\t\n\t\t\tif( owner instanceof Owner ) return owner\n\n\t\t\thaving = owner\n\t\t}\n\n\t}\n\t\n\texport function $mol_owning_check< Owner , Having >(\n\t\towner : Owner ,\n\t\thaving : Having ,\n\t) : having is Having & { destructor() : void } {\n\t\tif( !$mol_owning_allow( having ) ) return false\n\t\tif( $mol_owning_map.get( having ) !== owner ) return false\n\t\treturn true\n\t}\n\t\n\texport function $mol_owning_catch< Owner , Having >(\n\t\towner : Owner ,\n\t\thaving : Having ,\n\t) {\n\t\tif( !$mol_owning_allow( having ) ) return false\n\t\tif( $mol_owning_map.get( having ) ) return false\n\n\t\t$mol_owning_map.set( having , owner )\n\t\treturn true\n\t}\n\n}\n","namespace $ {\n\n\texport function $mol_fail( error : any ) : never {\n\t\tthrow error\n\t}\n\n}\n","namespace $ {\n\n\texport function $mol_fail_hidden( error : any ) : never {\n\t\tthrow error /// Use 'Never Pause Here' breakpoint in DevTools or simply blackbox this script\n\t}\n\n}\n",null,"namespace $ {\n\n\texport class $mol_object2 {\n\t\t\n\t\tstatic $ = $ as $mol_ambient_context\n\t\t\n\t\t[ $mol_ambient_ref ] = null as any as $mol_ambient_context\n\t\tget $() {\n\t\t\tif( this[ $mol_ambient_ref ] ) return this[ $mol_ambient_ref ]\n\t\t\tconst owner = $mol_owning_get( this ) as any\n\t\t\treturn this[ $mol_ambient_ref ] = owner?.$ || $mol_object2.$ as $mol_ambient_context\n\t\t}\n\t\tset $( next : $mol_ambient_context ) {\n\t\t\tif( this[ $mol_ambient_ref ] ) $mol_fail_hidden( new Error( 'Context already defined' ) )\n\t\t\tthis[ $mol_ambient_ref ] = next\n\t\t}\n\n\t\tconstructor( init? : ( obj : any )=> void ) {\n\t\t\tif( init ) init( this )\n\t\t}\n\n\t\tpublic static create< Instance >(\n\t\t\tthis : new( init? : ( instance : any )=> void )=> Instance ,\n\t\t\tinit? : ( instance : $mol_type_writable<Instance> )=> void\n\t\t) : Instance {\n\t\t\treturn new this( init )\n\t\t}\n\t\t\n\t\tstatic toString() { return this[ Symbol.toStringTag ] || this.name }\n\n\t\tdestructor() { }\n\n\t\ttoString() {\n\t\t\treturn this[ Symbol.toStringTag ] || this.constructor.name + '()'\n\t\t}\n\t\t\n\t\ttoJSON() {\n\t\t\treturn this.toString()\n\t\t}\n\n\t}\n}\n","namespace $ {\n\t\n\texport function $mol_deprecated( message : string ) {\n\t\treturn <\n\t\t\tMethod extends ( this : Host , ... args : readonly any[] )=> any ,\n\t\t\tHost extends {\n\t\t\t\t[key in Field] : Method\n\t\t\t} & {\n\t\t\t\t$ : $mol_ambient_context\n\t\t\t},\n\t\t\tField extends keyof Host ,\n\t\t>(\n\t\t\thost : Host ,\n\t\t\tfield : Field ,\n\t\t\tdescr : TypedPropertyDescriptor< Method >\n\t\t)=> {\n\n\t\t\tconst value = descr.value!\n\t\t\tlet warned = false\n\t\t\t\n\t\t\tdescr.value = function $mol_deprecated_wrapper( this : Host , ... args : Parameters< Method > ) : ReturnType< Method >  {\n\n\t\t\t\tif( !warned ) {\n\t\t\t\t\tthis.$.$mol_log3_warn({\n\t\t\t\t\t\tplace: `${ host.constructor.name }::${ field }`,\n\t\t\t\t\t\tmessage: `Deprecated` ,\n\t\t\t\t\t\thint: message ,\n\t\t\t\t\t})\n\t\t\t\t\twarned = true\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn value.call( this , ... args )\n\t\t\t\n\t\t\t} as any\n\n\t\t}\n\t}\n\t\n}\n","namespace $ {\n\n\texport const $mol_tree_convert : unique symbol = Symbol( '$mol_tree_convert' )\n\texport type $mol_tree_path = Array< string | number | null >\n\n\texport type $mol_tree_hack = ( input : $mol_tree , context : $mol_tree_context )=> readonly $mol_tree[]\n\texport type $mol_tree_context = Record< string , $mol_tree_hack >\n\texport type $mol_tree_library = Record< string , $mol_tree_context >\n\t\n\t/**\n\t * Abstract Syntax Tree with human readable serialization.\n\t * @see https://github.com/nin-jin/tree.d\n\t */\n\texport class $mol_tree extends $mol_object2 {\n\t\t\n\t\treadonly type : string\n\t\treadonly data : string\n\t\treadonly sub : readonly $mol_tree[]\n\t\treadonly baseUri : string\n\t\treadonly row : number\n\t\treadonly col : number\n\t\treadonly length : number\n\t\t\n\t\tconstructor( config : Partial<$mol_tree> = {} ) {\n\n\t\t\tsuper()\n\n\t\t\tthis.type = config.type || ''\n\t\t\t\n\t\t\tif( config.value !== undefined ) {\n\n\t\t\t\tvar sub = $mol_tree.values( config.value )\n\t\t\t\t\n\t\t\t\tif( config.type || sub.length > 1 ) {\n\n\t\t\t\t\tthis.sub = [ ... sub , ...( config.sub || [] ) ]\n\t\t\t\t\tthis.data = config.data || ''\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.data = sub[ 0 ].data\n\t\t\t\t\tthis.sub = config.sub || []\n\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tthis.data = config.data || ''\n\t\t\t\tthis.sub = config.sub || []\n\n\t\t\t}\n\t\t\t\n\t\t\tthis.baseUri = config.baseUri || ''\n\t\t\tthis.row = config.row || 0\n\t\t\tthis.col = config.col || 0\n\t\t\tthis.length = config.length || 0\n\n\t\t}\n\t\t\n\t\tstatic values( str : string , baseUri? : string ) {\n\n\t\t\treturn str.split( '\\n' ).map( ( data , index ) => new $mol_tree( {\n\t\t\t\tdata : data ,\n\t\t\t\tbaseUri : baseUri ,\n\t\t\t\trow : index + 1 ,\n\t\t\t\tlength : data.length ,\n\t\t\t} ) )\n\n\t\t}\n\t\t\n\t\t/** Cloning node with overrides. */\n\t\tclone( config : Partial<$mol_tree> = {} ) {\n\n\t\t\treturn new $mol_tree({\n\t\t\t\ttype : ( 'type' in config ) ? config.type : this.type ,\n\t\t\t\tdata : ( 'data' in config ) ? config.data : this.data ,\n\t\t\t\tsub : ( 'sub' in config ) ? config.sub : this.sub ,\n\t\t\t\tbaseUri : ( 'baseUri' in config ) ? config.baseUri : this.baseUri ,\n\t\t\t\trow : ( 'row' in config ) ? config.row : this.row ,\n\t\t\t\tcol : ( 'col' in config ) ? config.col : this.col ,\n\t\t\t\tlength : ( 'length' in config ) ? config.length : this.length ,\n\t\t\t\tvalue : config.value\n\t\t\t})\n\n\t\t}\n\t\t\n\t\t/** Makes new derived node. */\n\t\tmake( config : Partial<$mol_tree> ) {\n\n\t\t\treturn new $mol_tree({\n\t\t\t\tbaseUri : this.baseUri ,\n\t\t\t\trow : this.row ,\n\t\t\t\tcol : this.col ,\n\t\t\t\tlength : this.length ,\n\t\t\t\t... config ,\n\t\t\t})\n\n\t\t}\n\t\t\n\t\t/** Makes new derived data node. */\n\t\tmake_data( value : string , sub? : readonly $mol_tree[] ) {\n\t\t\treturn this.make({ value , sub })\n\t\t}\n\t\t\n\t\t/** Makes new derived structural node. */\n\t\tmake_struct( type : string , sub? : readonly $mol_tree[] ) {\n\t\t\treturn this.make({ type , sub })\n\t\t}\n\t\t\n\t\t/** Parses tree format to AST. */\n\t\tstatic fromString( str : string , baseUri? : string ) {\n\t\t\t\n\t\t\tvar root = new $mol_tree( { baseUri : baseUri } )\n\t\t\tvar stack = [ root ]\n\t\t\t\n\t\t\tvar row = 0\n\t\t\tvar prefix = str.replace( /^\\n?(\\t*)[\\s\\S]*/ , '$1' )\n\t\t\tvar lines = str.replace( new RegExp( '^\\\\t{0,' + prefix.length + '}' , 'mg' ) , '' ).split( '\\n' )\n\n\t\t\tlines.forEach( line => {\n\n\t\t\t\t++row\n\t\t\t\t\n\t\t\t\tvar chunks = /^(\\t*)((?:[^\\n\\t\\\\ ]+ *)*)(\\\\[^\\n]*)?(.*?)(?:$|\\n)/m.exec( line )\n\t\t\t\tif( !chunks || chunks[4] ) return this.$.$mol_fail( new Error( `Syntax error at ${baseUri}:${row}\\n${line}` ) )\n\t\t\t\t\n\t\t\t\tvar indent = chunks[ 1 ]\n\t\t\t\tvar path = chunks[ 2 ]\n\t\t\t\tvar data = chunks[ 3 ]\n\t\t\t\t\n\t\t\t\tvar deep = indent.length\n\t\t\t\tvar types = path ? path.replace( / $/ , '' ).split( / +/ ) : []\n\t\t\t\t\n\t\t\t\tif( stack.length <= deep ) return this.$.$mol_fail( new Error( `Too many tabs at ${baseUri}:${row}\\n${line}` ) )\n\t\t\t\t\n\t\t\t\tstack.length = deep + 1\n\t\t\t\tvar parent = stack[ deep ];\n\t\t\t\t\n\t\t\t\tlet col = deep\n\t\t\t\ttypes.forEach( type => {\n\t\t\t\t\tif( !type ) return this.$.$mol_fail( new Error( `Unexpected space symbol ${baseUri}:${row}\\n${line}` ) )\n\t\t\t\t\tvar next = new $mol_tree({ type , baseUri , row , col , length : type.length })\n\t\t\t\t\tconst parent_sub = parent.sub as $mol_tree[]\n\t\t\t\t\tparent_sub.push( next )\t\n\t\t\t\t\tparent = next\n\t\t\t\t\tcol += type.length + 1\n\t\t\t\t} )\n\t\t\t\t\n\t\t\t\tif( data ) {\n\t\t\t\t\tvar next = new $mol_tree({ data : data.substring( 1 ) , baseUri , row , col , length : data.length })\n\t\t\t\t\tconst parent_sub = parent.sub as $mol_tree[]\n\t\t\t\t\tparent_sub.push( next )\n\t\t\t\t\tparent = next\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tstack.push( parent )\n\t\t\t\t\n\t\t\t} )\n\t\t\t\n\t\t\treturn root\n\t\t}\n\t\t\n\t\t/**\n\t\t * Parses json.tree lang to AST.\n\t\t * @todo Move to $mol_tree_json_from\n\t\t */\n\t\tstatic fromJSON( json : any , baseUri = '' ) : $mol_tree {\n\n\t\t\tswitch( true ) {\n\n\t\t\t\tcase typeof json === 'boolean' :\n\t\t\t\tcase typeof json === 'number' :\n\t\t\t\tcase json === null :\n\n\t\t\t\t\treturn new $mol_tree({\n\t\t\t\t\t\ttype : String( json ) ,\n\t\t\t\t\t\tbaseUri : baseUri\n\t\t\t\t\t})\n\t\t\t\t\n\t\t\t\tcase typeof json === 'string' :\n\n\t\t\t\t\treturn new $mol_tree({\n\t\t\t\t\t\tvalue : json ,\n\t\t\t\t\t\tbaseUri : baseUri\n\t\t\t\t\t})\n\n\t\t\t\tcase Array.isArray( json ) :\n\n\t\t\t\t\treturn new $mol_tree({\n\t\t\t\t\t\ttype : \"/\" ,\n\t\t\t\t\t\tsub : ( json as any[] ).map( json => $mol_tree.fromJSON( json , baseUri ) )\n\t\t\t\t\t})\n\n\t\t\t\tcase json instanceof Date :\n\n\t\t\t\t\treturn new $mol_tree({\n\t\t\t\t\t\tvalue : json.toISOString() ,\n\t\t\t\t\t\tbaseUri : baseUri\n\t\t\t\t\t})\n\t\t\t\t\n\t\t\t\tdefault :\n\n\t\t\t\t\tif( typeof json[ $mol_tree_convert ] === 'function' ) {\n\t\t\t\t\t\treturn json[ $mol_tree_convert ]()\n\t\t\t\t\t}\n\n\t\t\t\t\tif( typeof json.toJSON === 'function' ) {\n\t\t\t\t\t\treturn $mol_tree.fromJSON( json.toJSON() )\n\t\t\t\t\t}\n\n\t\t\t\t\tif( json instanceof Error ) {\n\t\t\t\t\t\tconst { name , message , stack } = json\n\t\t\t\t\t\tjson = { ... json , name , message ,  stack }\n\t\t\t\t\t}\n\n\t\t\t\t\tvar sub : $mol_tree[] = []\n\t\t\t\t\t\n\t\t\t\t\tfor( var key in json ) {\n\n\t\t\t\t\t\tif( json[ key ] === undefined ) continue\n\n\t\t\t\t\t\tconst subsub = $mol_tree.fromJSON( json[ key ] , baseUri )\n\t\t\t\t\t\t\n\t\t\t\t\t\tif( /^[^\\n\\t\\\\ ]+$/.test( key ) ) {\n\n\t\t\t\t\t\t\tvar child = new $mol_tree({\n\t\t\t\t\t\t\t\ttype : key ,\n\t\t\t\t\t\t\t\tbaseUri : baseUri ,\n\t\t\t\t\t\t\t\tsub : [ subsub ] ,\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar child = new $mol_tree({\n\t\t\t\t\t\t\t\tvalue : key ,\n\t\t\t\t\t\t\t\tbaseUri : baseUri ,\n\t\t\t\t\t\t\t\tsub : [ subsub ] ,\n\t\t\t\t\t\t\t} )\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsub.push( child )\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn new $mol_tree({\n\t\t\t\t\t\ttype : \"*\" ,\n\t\t\t\t\t\tsub : sub ,\n\t\t\t\t\t\tbaseUri : baseUri\n\t\t\t\t\t})\n\t\t\t\t\n\t\t\t}\n\n\t\t}\n\t\t\n\t\tget uri() {\n\t\t\treturn this.baseUri + '#' + this.row + ':' + this.col\n\t\t}\n\t\t\n\t\t/** Serializas to tree format. */\n\t\ttoString( prefix = '' ) : string {\n\t\t\tvar output = ''\n\t\t\t\n\t\t\tif( this.type.length ) {\n\t\t\t\tif( !prefix.length ) {\n\t\t\t\t\tprefix = \"\\t\";\n\t\t\t\t}\n\t\t\t\toutput += this.type\n\t\t\t\tif( this.sub.length == 1 ) {\n\t\t\t\t\treturn output + ' ' + this.sub[ 0 ].toString( prefix )\n\t\t\t\t}\n\t\t\t\toutput += \"\\n\"\n\t\t\t} else if( this.data.length || prefix.length ) {\n\t\t\t\toutput += \"\\\\\" + this.data + \"\\n\"\n\t\t\t}\n\n\t\t\tfor( var child of this.sub ) {\n\t\t\t\toutput += prefix\n\t\t\t\toutput += child.toString( prefix + \"\\t\" )\n\t\t\t}\n\t\t\t\n\t\t\treturn output\n\t\t}\n\t\t\n\t\t/**\n\t\t * Serializes AST to json.tree lang.\n\t\t * @todo Move to $mol_tree_json_to\n\t\t */\n\t\ttoJSON() : any {\n\t\t\tif( !this.type ) return this.value\n\t\t\t\n\t\t\tif( this.type === 'true' ) return true\n\t\t\tif( this.type === 'false' ) return false\n\t\t\tif( this.type === 'null' ) return null\n\t\t\t\n\t\t\tif( this.type === '*' ) {\n\t\t\t\tvar obj = {}\n\t\t\t\tfor( var child of this.sub ) {\n\t\t\t\t\tif( child.type === '-' ) continue\n\t\t\t\t\tvar key = child.type || child.clone({ sub : child.sub.slice( 0 , child.sub.length - 1 ) }).value\n\t\t\t\t\tvar val = child.sub[ child.sub.length - 1 ].toJSON()\n\t\t\t\t\tif( val !== undefined ) ( obj as any )[ key ] = val\n\t\t\t\t}\n\t\t\t\treturn obj\n\t\t\t}\n\t\t\t\n\t\t\tif( this.type === '/' ) {\n\t\t\t\tvar res : any[] = []\n\t\t\t\tthis.sub.forEach(\n\t\t\t\t\tchild => {\n\t\t\t\t\t\tif( child.type === '-' ) return\n\t\t\t\t\t\tvar val = child.toJSON()\n\t\t\t\t\t\tif( val !== undefined ) res.push( val )\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\treturn res\n\t\t\t}\n\t\t\t\n\t\t\tif( this.type === 'time' ) {\n\t\t\t\treturn new Date( this.value )\n\t\t\t}\n\t\t\t\n\t\t\tif( String( Number( this.type ) ) == this.type.trim() ) return Number( this.type )\n\t\t\t\n\t\t\tthrow new Error( `Unknown type (${this.type}) at ${this.uri}` )\n\t\t}\n\t\t\n\t\tget value() {\n\t\t\tvar values : string[] = []\n\t\t\tfor( var child of this.sub ) {\n\t\t\t\tif( child.type ) continue\n\t\t\t\tvalues.push( child.value )\n\t\t\t}\n\t\t\treturn this.data + values.join( \"\\n\" )\n\t\t}\n\t\t\n\t\t/** Makes new tree with node overrided by path. */\n\t\tinsert( value : $mol_tree , ...path : $mol_tree_path ) : $mol_tree {\n\t\t\tif( path.length === 0 ) return value\n\t\t\t\n\t\t\tconst type = path[0]\n\t\t\tif( typeof type === 'string' ) {\n\n\t\t\t\tlet replaced = false\n\t\t\t\tconst sub = this.sub.map( ( item , index )=> {\n\t\t\t\t\tif( item.type !== type ) return item\n\t\t\t\t\treplaced = true\n\t\t\t\t\treturn item.insert( value , ... path.slice( 1 ) )\n\t\t\t\t} )\n\t\t\t\t\n\t\t\t\tif( !replaced ) sub.push( new $mol_tree({ type }).insert( value , ... path.slice( 1 ) ) )\n\t\t\t\t\n\t\t\t\treturn this.clone({ sub })\n\n\t\t\t} else if( typeof type === 'number' ) {\n\t\t\t\t\n\t\t\t\tconst sub = this.sub.slice()\n\t\t\t\tsub[ type ] = ( sub[ type ] || new $mol_tree ).insert( value , ... path.slice( 1 ) )\n\t\t\t\t\n\t\t\t\treturn this.clone({ sub })\n\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\treturn this.clone({ sub : ( ( this.sub.length === 0 ) ? [ new $mol_tree() ] : this.sub ).map( item => item.insert( value , ... path.slice( 1 ) ) ) })\n\n\t\t\t}\n\t\t}\n\n\t\t/** Query nodes by path. */\n\t\tselect( ...path : $mol_tree_path ) {\n\t\t\tvar next = [ this as $mol_tree ]\n\t\t\tfor( var type of path ) {\n\t\t\t\tif( !next.length ) break\n\t\t\t\tvar prev = next\n\t\t\t\tnext = []\n\n\t\t\t\tfor( var item of prev ) {\n\n\t\t\t\t\tswitch( typeof( type ) ) {\n\n\t\t\t\t\t\tcase 'string' :\n\t\t\t\t\t\t\tfor( var child of item.sub ) {\n\t\t\t\t\t\t\t\tif( !type || ( child.type == type ) ) {\n\t\t\t\t\t\t\t\t\tnext.push( child )\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase 'number' :\n\t\t\t\t\t\t\tif( type < item.sub.length ) next.push( item.sub[ type ] )\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t\tdefault : next.push( ... item.sub )\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn new $mol_tree( { sub : next } )\n\t\t}\n\t\t\n\t\t/** Filter subnodes by path or value. */\n\t\tfilter( path : string[] , value? : string ) {\n\t\t\tvar sub = this.sub.filter(\n\t\t\t\tfunction( item ) {\n\t\t\t\t\t\n\t\t\t\t\tvar found = item.select( ...path )\n\t\t\t\t\t\n\t\t\t\t\tif( value == null ) {\n\t\t\t\t\t\treturn Boolean( found.sub.length )\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn found.sub.some( child => child.value == value )\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\t\t\t\n\t\t\treturn new $mol_tree( { sub : sub } )\n\t\t}\n\n\t\t@ $mol_deprecated( 'Use $mol_tree:hack' )\n\t\ttransform( visit : ( stack : $mol_tree[] , sub : ()=> $mol_tree[] )=> $mol_tree | null , stack : $mol_tree[] = [] ) : $mol_tree | null {\n\t\t\tconst sub_stack = [ this , ...stack ]\n\t\t\treturn visit( sub_stack , ()=> this.sub.map( node => node.transform( visit , sub_stack ) ).filter( n => n ) as $mol_tree[] )\n\t\t}\n\n\t\t/** Transform tree through context with transformers */\n\t\thack( context : $mol_tree_context ) : $mol_tree {\n\t\t\t\n\t\t\tconst sub = ( [] as $mol_tree[] ).concat( ... this.sub.map( child => {\n\n\t\t\t\tconst handle = context[ child.type ] || context[ '' ]\n\t\t\t\tif( !handle ) $mol_fail( child.error( 'Handler not defined' ) )\n\t\t\t\t\n\t\t\t\treturn handle( child , context )\n\n\t\t\t} ) )\n\n\t\t\treturn this.clone({ sub })\n\t\t}\n\n\t\t/** Makes Error with node coordinates. */\n\t\terror( message : string ) {\n\t\t\treturn new Error( `${message}:\\n${ this } ${this.baseUri}:${this.row}:${this.col}` )\n\t\t}\n\n\t}\n\t\n}\n","namespace $ {\n\n\t/** Logger event data */\n\texport type $mol_log3_event< Fields > = {\n\t\t[ key in string ] : unknown\n\t} & {\n\t\t\n\t\t/** Time of event creation */\n\t\ttime? : string\n\n\t\t/** Place of event creation */\n\t\tplace : unknown\n\n\t\t/** Short description of event */\n\t\tmessage : string\n\n\t} & Fields\n\n\t/** Logger function */\n\texport type $mol_log3_logger< Fields , Res = void > = (\n\t\tthis : $mol_ambient_context ,\n\t\tevent : $mol_log3_event< Fields > ,\n\t)=> Res\n\n\t/** Log begin of some task */\n\texport declare let $mol_log3_come : $mol_log3_logger<{}>\n\t\n\t/** Log end of some task */\n\texport declare let $mol_log3_done : $mol_log3_logger<{}>\n\t\n\t/** Log error */\n\texport declare let $mol_log3_fail : $mol_log3_logger<{}>\n\t\n\t/** Log warning message */\n\texport declare let $mol_log3_warn : $mol_log3_logger<{ hint : string }>\n\t\n\t/** Log some generic event */\n\texport declare let $mol_log3_rise : $mol_log3_logger<{}>\n\n\t/** Log begin of log group, returns func to close group */\n\texport declare let $mol_log3_area : $mol_log3_logger< {} , ()=> void >\n\n\t/** Log begin of collapsed group only when som logged inside, returns func to close group */\n\texport function $mol_log3_area_lazy(\n\t\tthis : $mol_ambient_context ,\n\t\tevent : $mol_log3_event<{}> ,\n\t) {\n\n\t\tconst self = this\n\t\tconst stack = self.$mol_log3_stack\n\n\t\tconst deep = stack.length\n\t\tlet logged = false\n\n\t\tstack.push( ()=> {\n\t\t\tlogged = true\n\t\t\tself.$mol_log3_area.call( self , event )\n\t\t} )\n\n\t\treturn ()=> {\n\t\t\tif( logged ) self.console.groupEnd()\n\t\t\tif( stack.length > deep ) stack.length = deep\n\t\t}\n\n\t}\n\n\texport let $mol_log3_stack = [] as ( ()=> void )[]\n\n}\n","namespace $ {\n\n\texport function $mol_log3_node_make(\n\t\tlevel : keyof Console ,\n\t\toutput : 'stdout' | 'stderr',\n\t\ttype : string ,\n\t\tcolor: keyof typeof $node.colorette ,\n\t) {\n\n\t\treturn function $mol_log3_logger(\n\t\t\tthis : $mol_ambient_context ,\n\t\t\tevent : $mol_log3_event<{}> ,\n\t\t) {\n\n\t\t\tif( !event.time ) event = { time : new Date().toISOString() , ... event }\n\n\t\t\tconst tree = this.$mol_tree.fromJSON( event ).clone({ type })\n\t\t\tlet str = tree.toString()\n\n\t\t\tif( process[output].isTTY ) {\n\t\t\t\tstr = $node.colorette[ color + 'Bright' ]( str )\n\t\t\t}\n\n\t\t\tthis.console[ level ]( str )\n\t\n\t\t\tconst self = this\n\t\t\treturn ()=> self.console.groupEnd()\n\n\t\t}\n\n\t}\n\n\t$.$mol_log3_come = $mol_log3_node_make( 'info' , 'stdout' , 'come' , 'blue' )\n\t$.$mol_log3_done = $mol_log3_node_make( 'info' , 'stdout' , 'done' , 'green' )\n\t$.$mol_log3_fail = $mol_log3_node_make( 'error' , 'stderr' , 'fail' , 'red' )\n\t$.$mol_log3_warn = $mol_log3_node_make( 'warn' , 'stderr' , 'warn' , 'yellow' )\n\t$.$mol_log3_rise = $mol_log3_node_make( 'log' , 'stdout' , 'rise' , 'magenta' )\n\t$.$mol_log3_area = $mol_log3_node_make( 'log' , 'stdout' , 'area' , 'cyan' )\n\n}\n","namespace $ {\n\n\texport class $mol_wrapper extends $mol_object2 {\n\n\t\tstatic wrap : ( task : ( ... ags : any[] )=> any )=> ( ... ags : any[] )=> any\n\t\t\n\t\tstatic run< Result >( task : ()=> Result ) : Result {\n\t\t\treturn this.func( task )()\n\t\t}\n\t\n\t\tstatic func< Args extends any[] , Result , Host = void >(\n\t\t\tfunc : ( this : Host , ... args : Args )=> Result\n\t\t) : ( this : Host , ... args : Args )=> Result {\n\t\t\treturn this.wrap( func )\n\t\t}\n\n\t\tstatic get class() {\n\n\t\t\treturn < Class extends new ( ... args : any[] )=> any >(\n\t\t\t\tClass : Class\n\t\t\t) => {\n\n\t\t\t\ttype Args = ConstructorParameters< Class >\n\t\t\t\ttype Result = InstanceType< Class >\n\n\t\t\t\tconst construct = ( target : new ( ... args : Args )=> Result , args : Args )=> new Class( ... args )\n\n\t\t\t\tconst handler = {\n\t\t\t\t\tconstruct : this.func( construct )\n\t\t\t\t}\n\n\t\t\t\thandler[ Symbol.toStringTag ] = Class.name + '#'\n\n\t\t\t\treturn new Proxy( Class , handler )\n\t\t\t\t\n\t\t\t}\n\n\t\t}\n\n\t\tstatic get method() {\n\t\t\t\n\t\t\treturn <\n\t\t\t\tHost ,\n\t\t\t\tField extends keyof Host ,\n\t\t\t\tArgs extends any[] ,\n\t\t\t\tResult ,\n\t\t\t>(\n\t\t\t\tobj : Host ,\n\t\t\t\tname : Field ,\n\t\t\t\tdescr : TypedPropertyDescriptor< ( this : Host , ... args : Args )=> Result >\n\t\t\t) => {\n\t\t\t\tdescr.value = this.func( descr.value! )\n\t\t\t\treturn descr\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t\tstatic get field() {\n\t\t\t\n\t\t\treturn <\n\t\t\t\tHost ,\n\t\t\t\tField extends keyof Host ,\n\t\t\t\tArgs extends any[] ,\n\t\t\t\tResult ,\n\t\t\t>(\n\t\t\t\tobj : Host ,\n\t\t\t\tname : Field ,\n\t\t\t\tdescr : TypedPropertyDescriptor< Result >\n\t\t\t) => {\n\t\t\t\tdescr.get = descr.set = this.func( descr.get! )\n\t\t\t\treturn descr\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t}\n\n}\n","namespace $ {\n\n\texport class $mol_after_tick extends $mol_object2 {\n\n\t\tpromise : any\n\t\tcancelled = false\n\n\t\tconstructor(\n\t\t\tpublic task : ()=> void ,\n\t\t) {\n\t\t\tsuper()\n\t\t\tthis.promise = Promise.resolve().then( ()=> {\n\t\t\t\tif( this.cancelled ) return\n\t\t\t\ttask()\n\t\t\t} )\n\t\t}\n\n\t\tdestructor() {\n\t\t\tthis.cancelled = true\n\t\t}\n\n\t}\n\t\n}\n","namespace $ {\n\n\texport function $mol_compare_any( a : any , b : any ) {\n\t\t\n\t\tif( a === b ) return true\n\t\t\n\t\tif( !Number.isNaN( a ) ) return false\n\t\tif( !Number.isNaN( b ) ) return false\n\n\t\treturn true\n\t}\n\n}\n","namespace $ {\n\n\tconst cache = new WeakMap< any , boolean >()\n\n\texport const $mol_conform_stack = [] as any[]\n\n\texport function $mol_conform< Target , Source >( target : Target , source : Source ) : Target {\n\n\t\tif( $mol_compare_any( target , source ) ) return source as any\n\n\t\tif( !target || typeof target !== 'object' ) return target\n\t\tif( !source || typeof source !== 'object' ) return target\n\n\t\tif( target instanceof Error ) return target\n\t\tif( source instanceof Error ) return target\n\t\t\n\t\tif( target['constructor'] !== source['constructor'] ) return target\n\n\t\tif( cache.get( target ) ) return target\n\t\tcache.set( target , true )\n\t\t\n\t\tconst conform = $mol_conform_handlers.get( target['constructor'] )\n\t\tif( !conform ) return target\n\n\t\tif( $mol_conform_stack.indexOf( target ) !== -1 ) return target\n\n\t\t$mol_conform_stack.push( target )\n\n\t\ttry { return conform( target , source ) }\n\t\tfinally { $mol_conform_stack.pop() }\n\n\t}\n\n\texport const $mol_conform_handlers = new WeakMap< Object , ( target : any , source : any )=> any >()\n\n\texport function $mol_conform_handler< Class >(\n\t\tcl : { new( ... args : any[] ) : Class } ,\n\t\thandler : ( target : Class , source : Class )=> Class ,\n\t) {\n\t\t$mol_conform_handlers.set( cl , handler )\n\t}\n\n\texport function $mol_conform_array<\n\t\tValue ,\n\t\tList extends {\n\t\t\t[ index : number ] : Value\n\t\t\tlength : number\n\t\t} ,\n\t>( target : List , source : List ) {\n\t\t\n\t\tif( source.length !== target.length ) return target\n\t\t\n\t\tfor( let i = 0 ; i < target.length ; ++i ) {\n\t\t\tif( !$mol_compare_any( source[i] , target[i] ) ) return target\n\t\t}\n\n\t\treturn source\n\t}\n\n\t$mol_conform_handler( Array , $mol_conform_array )\n\t$mol_conform_handler( Uint8Array , $mol_conform_array )\n\t$mol_conform_handler( Uint16Array , $mol_conform_array )\n\t$mol_conform_handler( Uint32Array , $mol_conform_array )\n\n\t$mol_conform_handler( Object , ( target , source )=> {\n\n\t\tlet count = 0\n\t\tlet equal = true\n\n\t\tfor( let key in target ) {\n\n\t\t\tconst conformed = $mol_conform( target[key] , source[key] )\n\t\t\t\n\t\t\tif( conformed !== target[key] ) {\n\t\t\t\ttry { target[key] = conformed } catch( error ) {}\n\t\t\t\tif( !$mol_compare_any( conformed , target[key] ) ) equal = false\n\t\t\t}\n\t\t\t\n\t\t\tif( !$mol_compare_any( conformed , source[key] ) ) equal = false\n\t\t\t\n\t\t\t++ count\n\t\t}\n\n\t\tfor( let key in source ) if( -- count < 0 ) break\n\n\t\treturn ( equal && count === 0 ) ? source : target\n\t} )\n\n\t$mol_conform_handler( Date , ( target , source )=> {\n\t\tif( target.getTime() === source.getTime() ) return source\n\t\treturn target \n\t} )\n\n\t$mol_conform_handler( RegExp , ( target , source )=> {\n\t\tif( target.toString() === source.toString() ) return source\n\t\treturn target\n\t} )\n\n}\n","namespace $ {\n\n\texport function $mol_array_trim< Item >( array : Item[] ) {\n\n\t\tlet last = array.length\n\t\twhile( last > 0 ) {\n\t\t\t\n\t\t\t-- last\n\t\t\tconst value = array[ last ]\n\t\t\t\n\t\t\tif( value === undefined ) array.pop()\n\t\t\telse break\n\t\t}\n\n\t\treturn array\n\t}\n\n}\n","namespace $ {\n\n\t// https://docs.google.com/document/d/1FTascZXT9cxfetuPRT2eXPQKXui4nWFivUnS_335T3U/preview#\n\t$['devtoolsFormatters'] = $['devtoolsFormatters'] || []\n\n\texport function $mol_dev_format_register( config : {\n\t\theader : ( val : any , config : any )=> any\n\t\thasBody : ( val : any , config : any )=> false\n\t} | {\n\t\theader : ( val : any , config : any )=> any\n\t\thasBody : ( val : any , config : any )=> boolean\n\t\tbody : ( val : any , config : any )=> any\n\t} ) {\n\t\t$['devtoolsFormatters'].push( config )\n\t}\n\n\texport let $mol_dev_format_head = Symbol( '$mol_dev_format_head' )\n\texport let $mol_dev_format_body = Symbol( '$mol_dev_format_body' )\n\n\t$mol_dev_format_register({\n\n\t\theader : ( val : any , config = false ) => {\n\t\t\t\n\t\t\tif( config ) return null\n\n\t\t\tif( !val ) return null\n\t\t\t\n\t\t\tif( $mol_dev_format_head in val ) {\n\t\t\t\treturn val[ $mol_dev_format_head ]()\n\t\t\t}\n\n\t\t\treturn null\n\t\t\t\n\t\t} ,\n\t\t\n\t\thasBody : val => val[ $mol_dev_format_body ] ,\n\n\t\tbody : val => val[ $mol_dev_format_body ]() ,\n\n\t})\n\n\texport function $mol_dev_format_native( obj : any ) {\n\t\t\n\t\tif( typeof obj === 'undefined' ) return $mol_dev_format_shade( 'undefined' )\n\t\tif( typeof obj !== 'object' ) return obj\n\n\t\treturn [\n\t\t\t'object' ,\n\t\t\t{\n\t\t\t\tobject : obj ,\n\t\t\t\tconfig : true ,\n\t\t\t} ,\n\t\t]\n\n\t}\n\n\texport function $mol_dev_format_auto( obj : any ) {\n\t\t\n\t\tif( obj == null ) return $mol_dev_format_shade( String( obj ) )\n\n\t\tif( typeof obj === 'object' && $mol_dev_format_head in obj ) {\n\t\t\treturn obj[ $mol_dev_format_head ]()\n\t\t}\n\n\t\treturn [\n\t\t\t'object' ,\n\t\t\t{\n\t\t\t\tobject : obj ,\n\t\t\t\tconfig : false ,\n\t\t\t} ,\n\t\t]\n\n\t}\n\n\texport function $mol_dev_format_element( element : string , style : object , ...content : any[] ) {\n\t\t\t\n\t\tconst styles = [] as string[]\n\t\t\n\t\tfor( let key in style ) styles.push( `${ key } : ${ style[key] }` )\n\t\t\n\t\treturn [\n\t\t\telement ,\n\t\t\t{\n\t\t\t\tstyle : styles.join( ' ; ' ) ,\n\t\t\t} ,\n\t\t\t... content ,\n\t\t]\n\n\t}\n\n\texport function $mol_dev_format_span( style : object , ...content : any[] ) {\n\t\treturn $mol_dev_format_element(\n\t\t\t'span' ,\n\t\t\t{\n\t\t\t\t'vertical-align' : '8%',\n\t\t\t\t... style ,\n\t\t\t} ,\n\t\t\t... content ,\n\t\t)\n\t}\n\n\texport let $mol_dev_format_div = $mol_dev_format_element.bind( null , 'div' )\n\texport let $mol_dev_format_ol = $mol_dev_format_element.bind( null , 'ol' )\n\texport let $mol_dev_format_li = $mol_dev_format_element.bind( null , 'li' )\n\texport let $mol_dev_format_table = $mol_dev_format_element.bind( null , 'table' )\n\texport let $mol_dev_format_tr = $mol_dev_format_element.bind( null , 'tr' )\n\texport let $mol_dev_format_td = $mol_dev_format_element.bind( null , 'td' )\n\n\texport let $mol_dev_format_accent = $mol_dev_format_span.bind( null , {\n\t\t'color' : 'magenta' ,\n\t} )\n\n\texport let $mol_dev_format_strong = $mol_dev_format_span.bind( null , {\n\t\t'font-weight' : 'bold' ,\n\t} )\n\n\texport let $mol_dev_format_string = $mol_dev_format_span.bind( null , {\n\t\t'color' : 'green',\n\t} )\n\n\texport let $mol_dev_format_shade = $mol_dev_format_span.bind( null , {\n\t\t'color' : 'gray',\n\t} )\n\n\texport let $mol_dev_format_indent = $mol_dev_format_div.bind( null , {\n\t\t'margin-left': '13px'\n\t} )\n\n}\n","namespace $ {\n\n\texport const enum $mol_fiber_status {\n\t\tpersist = -3 ,\n\t\tactual = -2 ,\n\t\tdoubt = -1 ,\n\t\tobsolete = 0 ,\n\t}\n\n\texport function $mol_fiber_defer< Value = void >( calculate : ()=> Value ) {\n\t\t\n\t\tconst fiber = new $mol_fiber\n\t\t\n\t\tfiber.calculate = calculate\n\t\tfiber[ Symbol.toStringTag ] = calculate.name\n\t\t\n\t\tfiber.schedule()\n\t\t\n\t\treturn fiber\n\t}\n\n\texport function $mol_fiber_func<\n\t\tThis ,\n\t\tArgs extends any[] ,\n\t\tResult ,\n\t>( calculate : ( this : This , ... args : Args )=> Result ) {\n\t\t$mol_ambient({}).$mol_log3_warn({\n\t\t\tplace: '$mol_fiber_func',\n\t\t\tmessage: 'Deprecated' ,\n\t\t\thint: 'Use $mol_fiber.func instead',\n\t\t})\n\t\treturn $mol_fiber.func( calculate )\n\t}\n\n\texport function $mol_fiber_root<\n\t\tCalculate extends ( this : This , ... args : any[] )=> Result ,\n\t\tResult = void ,\n\t\tThis = void ,\n\t>( calculate : Calculate ) {\n\t\t\n\t\tconst wrapper = function( ... args : any[] ) {\n\t\t\tconst fiber = new $mol_fiber< Result >()\n\t\t\tfiber.calculate = calculate.bind( this , ... args )\n\t\t\tfiber[ Symbol.toStringTag ] = wrapper[ Symbol.toStringTag ]\n\t\t\treturn fiber.wake()\n\t\t} as Calculate\n\t\t\n\t\twrapper[ Symbol.toStringTag ] = calculate.name\n\t\t\n\t\treturn wrapper\n\t}\n\n\texport function $mol_fiber_method< Host , Value >(\n\t\tobj : Host ,\n\t\tname : keyof Host ,\n\t\tdescr : TypedPropertyDescriptor< ( this : Host , ... args : any[] )=> Value >\n\t) {\n\t\t$mol_ambient({}).$mol_log3_warn({\n\t\t\tplace: '$mol_fiber_method',\n\t\t\tmessage: 'Deprecated' ,\n\t\t\thint: 'Use $mol_fiber.method instead',\n\t\t})\n\t\treturn $mol_fiber.method( obj , name , descr )\n\t}\n\n\texport function $mol_fiber_async< Args extends any[] , Value >( task : ( ... args : Args )=> Value ) {\n\n\t\treturn ( ... args : Args )=> new Promise< Value >( $mol_fiber_root( ( done , fail )=> {\n\n\t\t\ttry {\n\n\t\t\t\tdone( task( ... args ) )\n\n\t\t\t} catch( error ) {\n\n\t\t\t\tif( 'then' in error ) return $mol_fail_hidden( error )\n\n\t\t\t\tfail( error )\n\n\t\t\t}\n\n\t\t} ) )\n\n\t}\n\n\texport function $mol_fiber_sync< Args extends any[] , Value = void , This = void >(\n\t\trequest : ( this : This , ... args : Args )=> PromiseLike< Value >\n\t) : ( ... args : Args )=> Value {\n\n\t\treturn function $mol_fiber_sync_wrapper( this : This , ... args : Args ) {\n\n\t\t\tconst slave = $mol_fiber.current\n\n\t\t\tlet master = slave && slave.master\n\t\t\tif( !master || master.constructor !== $mol_fiber ) {\n\t\t\t\tmaster = new $mol_fiber\n\t\t\t\tmaster.cursor = $mol_fiber_status.persist\n\t\t\t\tmaster.error = ( request.call( this , ... args ) as PromiseLike< Value > ).then(\n\t\t\t\t\t( next : Value )=> master!.push( next ) ,\n\t\t\t\t\t( error : Error )=> master!.fail( error ) ,\n\t\t\t\t)\n\t\t\t\tconst prefix = slave ? `${ slave }/${ slave.cursor / 2 }:` : '/'\n\t\t\t\tmaster[ Symbol.toStringTag ] = prefix + ( request.name || $mol_fiber_sync.name )\n\t\t\t}\n\n\t\t\treturn master.get()\n\n\t\t}\n\n\t}\n\n\texport async function $mol_fiber_warp() {\n\t\tconst deadline = $mol_fiber.deadline\n\t\ttry {\n\t\t\t$mol_fiber.deadline = Number.POSITIVE_INFINITY\n\t\t\twhile( $mol_fiber.queue.length ) await $mol_fiber.tick()\n\t\t\treturn Promise.resolve()\n\t\t} finally {\n\t\t\t$mol_fiber.deadline = deadline\n\t\t}\n\t}\n\n\texport function $mol_fiber_fence( func : ()=> any ) {\n\t\tconst prev = $mol_fiber.current\n\t\ttry {\n\t\t\t$mol_fiber.current = null\n\t\t\treturn func()\n\t\t} finally {\n\t\t\t$mol_fiber.current = prev\n\t\t}\n\t}\n\n\texport function $mol_fiber_unlimit< Result >( task : ()=> Result ) {\n\t\t\n\t\tconst deadline = $mol_fiber.deadline\n\t\t\n\t\ttry {\n\n\t\t\t$mol_fiber.deadline = Number.POSITIVE_INFINITY\n\t\t\t\n\t\t\treturn task()\n\n\t\t} finally {\n\n\t\t\t$mol_fiber.deadline = deadline\n\n\t\t}\n\n\t}\n\n\texport class $mol_fiber_solid extends $mol_wrapper {\n\n\t\tstatic func< This , Args extends any[] , Result >( task : ( this : This , ... args : Args )=> Result ) {\n\n\t\t\tfunction wrapped( this : This , ... args : Args ) {\n\n\t\t\t\tconst deadline = $mol_fiber.deadline\n\n\t\t\t\ttry {\n\n\t\t\t\t\t$mol_fiber.deadline = Number.POSITIVE_INFINITY\n\t\t\t\t\t\n\t\t\t\t\treturn task.call( this , ... args ) as Result\n\n\t\t\t\t} catch( error ) {\n\n\t\t\t\t\tif( 'then' in error ) $mol_fail( new Error( 'Solid fiber can not be suspended.' ) )\n\t\t\t\t\treturn $mol_fail_hidden( error )\n\n\t\t\t\t} finally {\n\n\t\t\t\t\t$mol_fiber.deadline = deadline\n\n\t\t\t\t}\n\t\t\n\t\t\t}\n\n\t\t\treturn $mol_fiber.func( wrapped )\n\n\t\t}\n\n\t}\n\n\texport class $mol_fiber< Value = any > extends $mol_wrapper {\n\n\t\tstatic logs = false\n\n\t\tstatic wrap< Func extends ( ... args : any[] )=> any >( task : Func ) {\n\t\t\t\n\t\t\treturn function $mol_fiber_wrapper( this : ThisParameterType< Func > , ... args : Parameters< Func > ) {\n\n\t\t\t\tconst slave = $mol_fiber.current\n\n\t\t\t\tlet master = slave && slave.master\n\t\t\t\tif( !master || master.constructor !== $mol_fiber ) {\n\t\t\t\t\tmaster = new $mol_fiber\n\t\t\t\t\tmaster.calculate = task.bind( this , ... args )\n\t\t\t\t\tconst prefix = slave ? `${ slave }/${ slave.cursor / 2 }:` : '/'\n\t\t\t\t\tmaster[ Symbol.toStringTag ] = `${ prefix }${ task.name }`\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn master.get()\n\n\t\t\t}\n\n\t\t}\n\n\t\tstatic quant = 16\n\t\tstatic deadline = 0\n\t\tstatic liveline = 0\n\n\t\tstatic current = null as null | $mol_fiber\n\t\t\n\t\tstatic scheduled = null as null | $mol_after_tick\n\t\tstatic queue = [] as ( ()=> PromiseLike< any > )[]\n\t\t\n\t\tstatic async tick() {\n\t\n\t\t\twhile( $mol_fiber.queue.length > 0 ) {\n\n\t\t\t\tconst now = Date.now()\n\n\t\t\t\tif( now >= $mol_fiber.deadline ) {\n\t\t\t\t\t$mol_fiber.schedule()\n\t\t\t\t\t$mol_fiber.liveline = now\n\t\t\t\t\treturn \n\t\t\t\t}\n\n\t\t\t\tconst task = $mol_fiber.queue.shift()!\n\t\t\t\tawait task()\n\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t\tstatic schedule() {\n\n\t\t\tif( !$mol_fiber.scheduled ) {\n\n\t\t\t\t$mol_fiber.scheduled = new $mol_after_tick( async ()=> {\n\t\t\t\t\t\n\t\t\t\t\tconst now = Date.now()\n\t\t\t\t\tlet quant = $mol_fiber.quant\n\t\t\t\t\t\n\t\t\t\t\tif( $mol_fiber.liveline ) {\n\t\t\t\t\t\tquant = Math.max( quant , Math.floor( ( now - $mol_fiber.liveline ) / 2 ) )\n\t\t\t\t\t\t$mol_fiber.liveline = 0\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t$mol_fiber.deadline = now + quant\n\t\t\t\t\t$mol_fiber.scheduled = null\n\t\t\t\t\t\n\t\t\t\t\tawait $mol_fiber.tick()\n\n\t\t\t\t} )\n\n\t\t\t}\n\n\t\t\tconst promise : Promise< any > = new this.$.Promise( done => this.queue.push( ()=> ( done() , promise ) ) )\n\t\t\treturn promise\n\n\t\t}\n\n\t\tvalue = undefined as unknown as Value\n\t\terror = null as null | Error | PromiseLike< Value >\n\t\tcursor = $mol_fiber_status.obsolete\n\t\tmasters = [] as ( $mol_fiber | number | undefined )[]\n\t\tcalculate! : ()=> Value\n\t\t\n\t\tschedule() {\n\t\t\t$mol_fiber.schedule().then( ()=> this.wake() )\n\t\t}\n\n\t\twake() {\n\n\t\t\tconst unscoupe = this.$.$mol_log3_area_lazy({\n\t\t\t\tplace : this ,\n\t\t\t\tmessage : 'Wake'\n\t\t\t})\n\t\t\t\n\t\t\ttry {\n\t\t\t\tif( this.cursor > $mol_fiber_status.actual ) return this.get()\n\t\t\t} catch( error ) {\n\t\t\t\tif( 'then' in error ) return\n\t\t\t\t$mol_fail_hidden( error )\n\t\t\t} finally {\n\t\t\t\tunscoupe()\n\t\t\t}\n\n\t\t}\n\n\t\tpush( value : Value ) {\n\t\t\t\n\t\t\tvalue = this.$.$mol_conform( value , this.value )\n\t\t\t\n\t\t\tif( this.error || !Object.is( this.value , value ) ) {\n\t\t\n\t\t\t\tif( $mol_fiber.logs ) this.$.$mol_log3_done({\n\t\t\t\t\tplace : this ,\n\t\t\t\t\tmessage : 'Changed',\n\t\t\t\t\tnext : value , \n\t\t\t\t\tvalue : this.value ,\n\t\t\t\t\terror : this.error ,\n\t\t\t\t})\n\t\t\t\t\n\t\t\t\tthis.obsolete_slaves()\n\t\t\t\t\n\t\t\t\tthis.forget()\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\tif( $mol_fiber.logs ) this.$.$mol_log3_done({\n\t\t\t\t\tplace : this , \n\t\t\t\t\tmessage : 'Same value' ,\n\t\t\t\t\tvalue ,\n\t\t\t\t})\n\t\t\t}\n\t\t\t\n\t\t\tthis.error = null\n\t\t\tthis.value = value\n\t\t\t\n\t\t\tthis.complete()\n\n\t\t\treturn value\n\t\t}\n\n\t\tfail( error : Error ) : Error {\n\t\t\t\n\t\t\tthis.complete()\t\n\t\t\t\n\t\t\tif( $mol_fiber.logs ) this.$.$mol_log3_fail({\n\t\t\t\tplace : this , \n\t\t\t\tmessage : error.message ,\n\t\t\t})\n\t\t\t\n\t\t\tthis.error = error\n\n\t\t\tthis.obsolete_slaves()\n\n\t\t\treturn error\n\t\t}\n\n\t\twait( promise : PromiseLike< Value > ) : PromiseLike< Value > {\n\t\t\tthis.error = promise\n\t\t\tif( $mol_fiber.logs ) this.$.$mol_log3_warn({\n\t\t\t\tplace : this ,\n\t\t\t\tmessage : `Wait` ,\n\t\t\t\thint : `Don't panic, it's normal` , \n\t\t\t\tpromise ,\n\t\t\t})\n\t\t\tthis.cursor = $mol_fiber_status.obsolete\n\t\t\treturn promise\n\t\t}\n\n\t\tcomplete() {\n\n\t\t\tif( this.cursor <= $mol_fiber_status.actual ) return\n\n\t\t\tfor( let index = 0 ; index < this.masters.length ; index += 2  ) {\n\t\t\t\tthis.complete_master( index )\n\t\t\t}\n\t\t\t\n\t\t\tthis.cursor = $mol_fiber_status.actual\n\t\t}\n\t\t\n\t\tcomplete_master( master_index : number ) {\n\t\t\tthis.disobey( master_index )\n\t\t}\n\n\t\tpull() {\n\t\t\t\n\t\t\tif( $mol_fiber.logs ) this.$.$mol_log3_come({\n\t\t\t\tplace : this ,\n\t\t\t\tmessage : 'Pull' ,\n\t\t\t})\n\n\t\t\tthis.push( this.calculate() )\n\n\t\t}\n\n\t\tupdate() {\n\n\t\t\tconst slave = $mol_fiber.current\n\t\t\t\n\t\t\ttry {\n\t\t\t\t\t\n\t\t\t\t// this.limit()\n\t\t\t\t\n\t\t\t\t$mol_fiber.current = this\n\n\t\t\t\tthis.pull()\n\n\t\t\t} catch( error ) {\n\n\t\t\t\tif( 'then' in error ) {\n\t\t\t\t\t\n\t\t\t\t\tif( !slave ) {\n\t\t\t\t\t\tconst listener = ()=> this.wake()\n\t\t\t\t\t\terror = error.then( listener , listener )\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.wait( error )\n\n\t\t\t\t} else {\n\t\t\t\t\tthis.fail( error )\n\t\t\t\t}\n\n\t\t\t} finally {\n\t\t\t\t$mol_fiber.current = slave\n\t\t\t}\n\n\t\t}\n\n\t\tget() {\n\n\t\t\tif( this.cursor > $mol_fiber_status.obsolete ) {\n\t\t\t\tthis.$.$mol_fail( new Error( `Cyclic dependency at ${ this }` ) )\n\t\t\t}\n\t\t\t\n\t\t\tconst slave = $mol_fiber.current\n\t\t\tif( slave ) slave.master = this\n\t\t\t\n\t\t\tif( this.cursor > $mol_fiber_status.actual ) this.update()\n\n\t\t\tif( this.error ) return this.$.$mol_fail_hidden( this.error )\n\t\t\t\n\t\t\treturn this.value\n\n\t\t}\n\n\t\tlimit() {\n\n\t\t\tif( !$mol_fiber.deadline ) return\n\t\t\tif( !$mol_fiber.current ) return\n\n\t\t\tif( Date.now() < $mol_fiber.deadline ) return\n\n\t\t\tthis.$.$mol_fail_hidden( $mol_fiber.schedule() )\n\t\t}\n\n\t\tget master() {\n\t\t\treturn this.masters[ this.cursor ] as $mol_fiber\n\t\t}\n\t\tset master( next : $mol_fiber ) {\n\n\t\t\tif( this.cursor === $mol_fiber_status.doubt ) return\n\t\t\t\n\t\t\tconst cursor = this.cursor\n\t\t\tconst prev = this.masters[ this.cursor ]\n\t\t\t\n\t\t\tif( prev !== next ) {\n\t\t\t\tif( prev ) this.rescue( prev as $mol_fiber , cursor )\n\t\t\t\tthis.masters[ cursor ] = next\n\t\t\t\tthis.masters[ cursor + 1 ] = this.obey( next , cursor )\n\t\t\t}\n\t\t\t\n\t\t\tthis.cursor = cursor + 2\n\t\t}\n\n\t\trescue( master : $mol_fiber , master_index : number ) {}\n\n\t\tobey( master : $mol_fiber , master_index : number ) { return -1 }\n\t\tlead( slave : $mol_fiber , master_index : number ) { return -1 }\n\n\t\tdislead( slave_index : number ) {\n\t\t\tthis.destructor()\n\t\t}\n\n\t\tdisobey( master_index : number ) {\n\t\t\t\n\t\t\tconst master = this.masters[ master_index ] as $mol_fiber\n\t\t\tif( !master ) return\n\n\t\t\tmaster.dislead( this.masters[ master_index + 1 ] as number )\n\t\t\t\n\t\t\tthis.masters[ master_index ] = undefined\n\t\t\tthis.masters[ master_index + 1 ] = undefined\n\n\t\t\tthis.$.$mol_array_trim( this.masters )\n\n\t\t}\n\n\t\tobsolete_slaves() { }\n\n\t\tobsolete( master_index : number ) { }\n\n\t\tforget() {\n\t\t\tthis.value = undefined as unknown as Value\n\t\t}\n\n\t\tabort() {\n\t\t\tthis.forget()\n\t\t\treturn true\n\t\t}\n\n\t\tdestructor() {\n\t\t\tif( !this.abort() ) return\n\t\t\t\n\t\t\tif( $mol_fiber.logs ) this.$.$mol_log3_done({\n\t\t\t\tplace : this , \n\t\t\t\tmessage : 'Destructed' ,\n\t\t\t})\n\n\t\t\tthis.complete()\n\t\t}\n\n\t\t[ $mol_dev_format_head ]() {\n\t\t\treturn $mol_dev_format_native( this )\n\t\t}\n\n\t}\n\n}\n","namespace $ {\n\n\texport namespace $$ { let $ }\n\n\texport const $mol_object_field = Symbol( '$mol_object_field' )\n\t\n\texport class $mol_object extends $mol_object2 {\n\t\t\n\t\tpublic static make< Instance >( this : { new() : Instance } , config : Partial< Instance > ) : Instance {\n\t\t\treturn super.create( obj => {\n\t\t\t\tfor( let key in config ) ( obj as any )[ key ] = config[ key ]!\n\t\t\t} ) as any\n\t\t}\n\t\t\n\t}\n\n}\n","namespace $ {\n\n\texport function $mol_atom2_value< Value >( task : ()=> Value ) : Value | undefined {\n\t\tconst cached = $mol_atom2.cached\n\t\ttry {\n\t\t\t$mol_atom2.cached = true\n\t\t\treturn task()\n\t\t} finally {\n\t\t\t$mol_atom2.cached = cached\n\t\t}\n\t}\n\n\texport class $mol_atom2< Value = any > extends $mol_fiber< Value > {\n\n\t\tstatic logs = false\n\n\t\tstatic get current() {\n\t\t\tconst atom = $mol_fiber.current\n\t\t\tif( atom instanceof $mol_atom2 ) return atom\n\t\t\treturn null\n\t\t}\n\n\t\tstatic cached = false\n\n\t\tstatic reap_task = null as null | $mol_fiber\n\t\tstatic reap_queue = [] as $mol_atom2[]\n\n\t\tstatic reap( atom : $mol_atom2 ) {\n\n\t\t\tthis.reap_queue.push( atom )\n\n\t\t\tif( this.reap_task ) return\n\n\t\t\tthis.reap_task = $mol_fiber_defer( ()=> {\n\t\t\t\tthis.reap_task = null\n\t\t\t\t\n\t\t\t\twhile( true ) {\n\t\t\t\t\t\n\t\t\t\t\tconst atom = this.reap_queue.pop()\n\t\t\t\t\tif( !atom ) break\n\t\t\t\t\t\n\t\t\t\t\tif( !atom.alone ) continue\n\t\t\t\t\t\n\t\t\t\t\tatom.destructor()\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} )\n\n\t\t}\n\n\t\tslaves = [] as ( $mol_fiber | number | undefined )[]\n\t\t\n\t\trescue( master : $mol_atom2 , cursor : number ) {\n\n\t\t\tif(!( master instanceof $mol_atom2 )) return\n\t\t\t\n\t\t\tconst master_index = this.masters.length\n\t\t\tconst slave_index = this.masters[ cursor + 1 ] as number + 1\n\t\t\t\n\t\t\tmaster.slaves[ slave_index ] = master_index\n\t\t\tthis.masters.push( master , this.masters[ cursor + 1 ] )\n\t\t\t\n\t\t}\n\n\t\tget() {\n\n\t\t\tif( $mol_atom2.cached ) return this.value\n\t\t\t\n\t\t\tconst value = super.get()\n\t\t\tif( value === undefined ) $mol_fail( new Error( `Not defined: ${ this }` ) )\n\t\t\t\n\t\t\treturn value\n\t\t}\n\n\t\tpull() {\n\t\t\t\n\t\t\tif( this.cursor === $mol_fiber_status.obsolete ) return super.pull()\n\n\t\t\tif( $mol_atom2.logs ) this.$.$mol_log3_come({\n\t\t\t\tplace : this ,\n\t\t\t\tmessage: 'Check doubt masters' ,\n\t\t\t})\n\t\t\t\n\t\t\tconst masters = this.masters\n\n\t\t\tfor( let index = 0 ; index < masters.length ; index += 2 ) {\n\n\t\t\t\tconst master = masters[ index ] as $mol_atom2\n\t\t\t\tif( !master ) continue\n\n\t\t\t\ttry {\n\t\t\t\t\tmaster.get()\n\t\t\t\t} catch( error ) {\n\t\t\t\t\tif( 'then' in error ) $mol_fail_hidden( error )\n\t\t\t\t\tthis.cursor = $mol_fiber_status.obsolete\n\t\t\t\t}\n\n\t\t\t\tif( this.cursor as $mol_fiber_status !== $mol_fiber_status.obsolete ) continue\n\n\t\t\t\tif( $mol_atom2.logs ) this.$.$mol_log3_done({\n\t\t\t\t\tplace : this ,\n\t\t\t\t\tmessage : 'Obsoleted while checking' ,\n\t\t\t\t})\n\n\t\t\t\treturn super.pull()\n\t\t\t}\n\n\t\t\tif( $mol_atom2.logs ) this.$.$mol_log3_done({\n\t\t\t\tplace : this ,\n\t\t\t\tmessage : 'Masters not changed' ,\n\t\t\t})\n\n\t\t\tthis.cursor = $mol_fiber_status.actual\n\n\t\t}\n\t\t\n\t\t_value = undefined as unknown as Value\n\t\tget value() { return this._value }\n\t\tset value( next : Value ) {\n\n\t\t\tconst prev = this._value\n\n\t\t\tif( prev && this.$.$mol_owning_check( this , prev ) ) prev.destructor()\n\n\t\t\tif( next && this.$.$mol_owning_catch( this , next ) ) {\n\t\t\t\ttry{ next[ Symbol.toStringTag ] = this[ Symbol.toStringTag ] } catch {}\n\t\t\t\tnext[ $mol_object_field ] = this[ $mol_object_field ]\n\t\t\t}\n\n\t\t\tthis._value = next\n\t\t}\n\n\t\t_error = null as null | Error | PromiseLike< Value >\n\t\tget error() { return this._error }\n\t\tset error( next : null | Error | PromiseLike< Value > ) {\n\n\t\t\tconst prev = this._error\n\n\t\t\tif( prev && this.$.$mol_owning_check( this , prev ) ) prev.destructor()\n\n\t\t\tif( next && this.$.$mol_owning_catch( this , next ) ) {\n\t\t\t\tnext[ Symbol.toStringTag ] = this[ Symbol.toStringTag ]\n\t\t\t\tnext[ $mol_object_field ] = this[ $mol_object_field ]\n\t\t\t}\n\n\t\t\tthis._error = next\n\t\t}\n\n\t\tput( next : Value ) {\n\t\t\tthis.cursor = this.masters.length\n\t\t\tnext = this.push( next )\n\t\t\tthis.cursor = $mol_fiber_status.persist\n\t\t\treturn next\n\t\t}\n\n\t\tcomplete_master( master_index : number ) {\n\t\t\tif( this.masters[ master_index ] instanceof $mol_atom2 ) {\n\t\t\t\tif( master_index >= this.cursor ) this.disobey( master_index )\n\t\t\t} else {\n\t\t\t\tthis.disobey( master_index )\n\t\t\t}\n\t\t}\n\n\t\tobey( master : $mol_fiber , master_index : number ) : number {\n\t\t\treturn master.lead( this , master_index )\n\t\t}\n\n\t\tlead( slave : $mol_fiber , master_index : number ) {\n\t\t\t\n\t\t\tif( $mol_atom2.logs ) this.$.$mol_log3_rise({\n\t\t\t\tplace : this ,\n\t\t\t\tmessage : 'Leads' ,\n\t\t\t\tslave ,\n\t\t\t})\n\t\t\t\n\t\t\tconst slave_index = this.slaves.length\n\t\t\tthis.slaves[ slave_index ] = slave\n\t\t\tthis.slaves[ slave_index + 1 ] = master_index\n\t\t\t\n\t\t\treturn slave_index\n\t\t}\n\n\t\tdislead( slave_index : number ) {\n\n\t\t\tif( slave_index < 0 ) return // slave is fiber\n\n\t\t\tif( $mol_atom2.logs ) this.$.$mol_log3_rise({\n\t\t\t\tplace : this ,\n\t\t\t\tmessage : 'Disleads' ,\n\t\t\t\tslave : this.slaves[ slave_index ] ,\n\t\t\t})\n\n\t\t\tthis.slaves[ slave_index ] = undefined\n\t\t\tthis.slaves[ slave_index + 1 ] = undefined\n\n\t\t\t$mol_array_trim( this.slaves )\n\n\t\t\tif( this.cursor > $mol_fiber_status.persist && this.alone ) $mol_atom2.reap( this )\n\t\t}\n\n\t\tobsolete( master_index = -1 ) {\n\n\t\t\tif( this.cursor > $mol_fiber_status.obsolete ) {\n\t\t\t\tif( master_index >= this.cursor - 2 ) return\n\n\t\t\t\tconst path = [] as $mol_atom2[]\n\t\t\t\tlet current = this as $mol_atom2\n\t\t\t\t\n\t\t\t\tcollect : while( current ) {\n\t\t\t\t\tpath.push( current )\n\t\t\t\t\tcurrent = current.masters[ current.cursor - 2 ] as $mol_atom2\n\t\t\t\t}\n\n\t\t\t\tthis.$.$mol_fail( new Error( `Obsoleted while calculation \\n\\n${ path.join( '\\n' ) }\\n` ) )\n\t\t\t}\n\t\t\t\n\t\t\tif( this.cursor === $mol_fiber_status.obsolete ) return\n\t\t\t\n\t\t\tif( $mol_atom2.logs ) this.$.$mol_log3_rise({\n\t\t\t\tplace : this ,\n\t\t\t\tmessage : 'Obsoleted' ,\n\t\t\t})\n\n\t\t\tif( this.cursor !== $mol_fiber_status.doubt ) this.doubt_slaves()\n\t\t\t\n\t\t\tthis.cursor = $mol_fiber_status.obsolete\n\t\t\t\n\t\t}\n\n\t\tdoubt( master_index = -1 ) {\n\t\t\t\n\t\t\tif( this.cursor > $mol_fiber_status.obsolete ) {\n\t\t\t\tif( master_index >= this.cursor - 2 ) return\n\n\t\t\t\tconst path = [] as $mol_atom2[]\n\t\t\t\tlet current = this as $mol_atom2\n\t\t\t\t\n\t\t\t\tcollect : while( current ) {\n\t\t\t\t\tpath.push( current )\n\t\t\t\t\tcurrent = current.masters[ current.cursor - 2 ] as $mol_atom2\n\t\t\t\t}\n\n\t\t\t\tthis.$.$mol_fail( new Error( `Doubted while calculation \\n\\n${ path.join( '\\n' ) }\\n` ) )\n\t\t\t}\n\t\t\t\n\t\t\tif( this.cursor >= $mol_fiber_status.doubt ) return\n\t\t\t\t\n\t\t\tif( $mol_atom2.logs ) this.$.$mol_log3_rise({\n\t\t\t\tplace : this ,\n\t\t\t\tmessage : 'Doubted' ,\n\t\t\t})\n\n\t\t\tthis.cursor = $mol_fiber_status.doubt\n\t\t\t\n\t\t\tthis.doubt_slaves()\n\n\t\t}\n\n\t\tobsolete_slaves() {\n\t\t\tfor( let index = 0 ; index < this.slaves.length ; index += 2 ) {\n\t\t\t\tconst slave = this.slaves[ index ] as $mol_atom2\n\t\t\t\tif( slave ) slave.obsolete( this.slaves[ index + 1 ] as number )\n\t\t\t}\n\t\t}\n\n\t\tdoubt_slaves() {\n\t\t\tfor( let index = 0 ; index < this.slaves.length ; index += 2 ) {\n\t\t\t\tconst slave = this.slaves[ index ] as $mol_atom2\n\t\t\t\tif( slave ) slave.doubt( this.slaves[ index + 1 ] as number )\n\t\t\t}\n\t\t}\n\n\t\tget fresh() {\n\t\t\treturn ()=> {\n\t\t\t\tif( this.cursor !== $mol_fiber_status.actual ) return\n\n\t\t\t\tthis.cursor = $mol_fiber_status.obsolete\n\t\t\t\t$mol_fiber_solid.run( ()=> this.update() )\n\t\t\t}\n\t\t}\n\n\t\tget alone() {\n\t\t\treturn this.slaves.length === 0\n\t\t}\n\t\t\n\t\tget derived() {\n\t\t\t\n\t\t\tfor( let index = 0 ; index < this.masters.length ; index += 2 ) {\n\t\t\t\tif( this.masters[ index ] ) return true\n\t\t\t}\n\n\t\t\treturn false\n\t\t}\n\n\t\tdestructor() {\n\n\t\t\tif( !this.abort() ) return\n\t\t\t\n\t\t\tif( $mol_atom2.logs ) this.$.$mol_log3_rise({\n\t\t\t\tplace : this ,\n\t\t\t\tmessage : 'Destructed'\n\t\t\t} )\n\n\t\t\tthis.cursor = $mol_fiber_status.persist\n\n\t\t\tfor( let index = 0 ; index < this.masters.length ; index += 2 ) {\n\t\t\t\tthis.complete_master( index )\n\t\t\t}\n\n\t\t}\n\t\t\n\t}\n\n}\n","namespace $ {\n\n\texport function $mol_atom2_autorun( calculate : ()=> any ) {\n\t\t\n\t\treturn $mol_atom2.create( atom => {\n\t\t\tatom.calculate = calculate\n\t\t\tatom.obsolete_slaves = atom.schedule\n\t\t\tatom.doubt_slaves = atom.schedule\n\t\t\tatom[ Symbol.toStringTag ] = calculate[ Symbol.toStringTag ] || calculate.name || '$mol_atom2_autorun'\n\t\t\tatom.schedule()\n\t\t} )\n\n\t}\n\n}\n","namespace $ {\n\n\texport class $mol_mem_force extends Object {\n\t\tconstructor(){ super() }\n\t\t$mol_mem_force = true\n\t\tstatic $mol_mem_force = true\n\t\tstatic toString() { return this.name }\n\t}\n\n\texport class $mol_mem_force_cache extends $mol_mem_force {}\n\texport class $mol_mem_force_update extends $mol_mem_force {}\n\texport class $mol_mem_force_fail extends $mol_mem_force_cache {}\n\n}\n","namespace $ {\n\n\texport let $mol_mem_cached = $mol_atom2_value\n\n\texport function $mol_mem_persist() {\n\n\t\tconst atom = $mol_atom2.current\n\t\tif( !atom ) return\n\t\t\n\t\tif( atom.hasOwnProperty( 'destructor' ) ) return\n\t\t\n\t\tatom.destructor = ()=> {}\n\t\t\n\t}\n\n\texport function $mol_mem<\n\t\tHost extends object ,\n\t\tField extends keyof Host ,\n\t\tValue ,\n\t>(\n\t\tproto : Host ,\n\t\tname : Field ,\n\t\tdescr? : TypedPropertyDescriptor< ( next? : Value , force? : $mol_mem_force )=> Value >\n\t) : any {\n\n\t\tconst orig = descr!.value!\n\t\t\n\t\tconst store = new WeakMap< Host , $mol_atom2< Value > >()\n\n\t\tObject.defineProperty( proto , name + \"()\" , {\n\t\t\tget : function() {\n\t\t\t\treturn store.get( this )\n\t\t\t}\n\t\t} )\n\n\t\tconst get_cache = ( host : Host )=> {\n\t\t\t\n\t\t\tlet cache = store.get( host )!\n\t\t\tif( cache ) return cache\n\n\t\t\tlet cache2 = new $mol_atom2\n\t\t\tcache2.calculate = orig.bind( host )\n\t\t\tcache2[ Symbol.toStringTag ] = `${ host }.${ name }()`\n\t\t\tcache2.abort = ()=> {\n\t\t\t\tstore.delete( host )\n\t\t\t\tcache2.forget()\n\t\t\t\treturn true\n\t\t\t}\n\t\t\t$mol_owning_catch( host , cache2 )\n\t\t\tcache2[ $mol_object_field ] = name\n\t\t\tstore.set( host , cache2 )\n\n\t\t\treturn cache2\n\t\t}\n\n\t\tfunction value( this : Host , next? : Value , force? : $mol_mem_force ) {\n\t\t\t\t\n\t\t\tif( next === undefined ) {\n\t\t\t\t\n\t\t\t\tconst cache = get_cache( this )\n\t\t\t\tif( force === $mol_mem_force_cache ) return cache.obsolete( Number.NaN )\n\t\t\t\t\n\t\t\t\tif( $mol_atom2.current ) return cache.get()\n\t\t\t\telse return $mol_fiber.run( ()=> cache.get() )\n\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\treturn $mol_fiber.run( ()=> {\n\t\t\t\tif( force === $mol_mem_force_fail ) return get_cache( this ).fail( next as any )\n\t\t\t\tif( force !== $mol_mem_force_cache ) next = orig.call( this , next )\n\t\t\t\treturn get_cache( this ).put( next )\n\t\t\t} )\n\t\t\t\n\t\t}\n\t\t\n\t\treturn {\n\t\t\t... descr || {} ,\n\t\t\tvalue : Object.assign( value , { orig } )\n\t\t}\n\n\t}\n\t\n}\n",null,null,"namespace $ {\n\n\texport function $mol_dict_key( value : any ) {\n\t\t\n\t\tif( !value ) return value\n\t\tif( typeof value !== 'object' ) return value\n\n\t\tif( Array.isArray( value ) ) return value.join( ' , ' )\n\t\tif( Object.getPrototypeOf( Object.getPrototypeOf( value ) ) === null ) return JSON.stringify( value )\n\t\t\n\t\treturn value\n\t}\n\t\n\texport class $mol_dict< Key , Value > extends Map< Key , Value > {\n\n\t\tget( key : Key ) {\n\t\t\treturn super.get( $mol_dict_key( key ) )\n\t\t}\n\n\t\thas( key : Key ) {\n\t\t\treturn super.has( $mol_dict_key( key ) )\n\t\t}\n\n\t\tset( key : Key , value : Value ) {\n\t\t\treturn super.set( $mol_dict_key( key ) , value )\n\t\t}\n\n\t\tdelete( key : Key ) {\n\t\t\treturn super.delete( $mol_dict_key( key ) )\n\t\t}\n\n\t\tforEach( back : ( value : Value , key : Key , dict : Map< Key , Value > ) => void , context? : any ) {\n\t\t\treturn super.forEach( ( val , key , dict )=> {\n\t\t\t\tif( typeof key === 'string' ) key = JSON.parse( key )\n\t\t\t\treturn back.call( this , val , key , dict )\n\t\t\t} , context )\n\t\t}\n\n\t\t[Symbol.iterator]() {\n\t\t\tconst iterator = super[ Symbol.iterator ]()\n\t\t\t\n\t\t\treturn {\n\t\t\t\t[Symbol.iterator]() {\n\t\t\t\t\treturn this\n\t\t\t\t},\n\t\t\t\tnext() {\n\t\t\t\t\tconst iteration = iterator.next()\n\n\t\t\t\t\tif( !iteration.done ) {\n\t\t\t\t\t\tconst key = iteration.value[0]\n\t\t\t\t\t\tif( typeof key === 'string' ) iteration.value[0] = JSON.parse( key )\n\t\t\t\t\t}\n\n\t\t\t\t\treturn iteration\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n}\n","namespace $ {\n\n\texport function $mol_mem_key<\n\t\tHost extends object ,\n\t\tField extends keyof Host ,\n\t\tProp extends Extract< Host[ Field ] , ( id : Key , next? : Value )=> Value >,\n\t\tKey extends $mol_type_param< Prop , 0 >,\n\t\tValue extends $mol_type_result< Prop > ,\n\t>(\n\t\tproto : Host ,\n\t\tname : Field ,\n\t\tdescr? : TypedPropertyDescriptor< Prop >\n\t) : any {\n\n\t\tconst value = descr!.value!\n\t\t\n\t\tconst store = new WeakMap< Host , Map< Key , $mol_atom2<Value> > >()\n\n\t\tObject.defineProperty( proto , name + \"()\" , {\n\t\t\tget : function() {\n\t\t\t\treturn store.get( this )\n\t\t\t}\n\t\t} )\n\n\t\tconst get_cache = ( host : Host , key : Key )=> {\n\t\t\t\n\t\t\tlet dict = store.get( host )!\n\t\t\tif( !dict ) store.set( host , dict = new $mol_dict )\n\t\t\t\n\t\t\tlet cache = dict.get( key )\n\t\t\tif( cache ) return cache\n\n\t\t\tlet cache2 = new $mol_atom2\n\t\t\tcache2[ Symbol.toStringTag ] = `${ host }.${ name }(${$mol_dict_key(key)})`\n\t\t\tcache2.calculate = value.bind( host , key )\n\t\t\tcache2.abort = ()=> {\n\t\t\t\tdict.delete( key )\n\t\t\t\tif( dict.size === 0 ) store.delete( host )\n\t\t\t\tcache2.forget()\n\t\t\t\treturn true\n\t\t\t}\n\t\t\t$mol_owning_catch( host , cache2 )\n\t\t\tcache2[ $mol_object_field ] = name\n\t\t\tdict.set( key , cache2 )\n\n\t\t\treturn cache2\n\t\t}\n\t\t\n\t\treturn {\n\t\t\t\n\t\t\tvalue( key : Key , next? : Value , force? : $mol_mem_force ) {\n\t\t\t\t\n\t\t\t\tif( next === undefined ) {\n\t\t\t\t\t\n\t\t\t\t\tconst cache = get_cache( this , key )\n\t\t\t\t\tif( force === $mol_mem_force_cache ) return cache.obsolete()\n\n\t\t\t\t\tif( $mol_atom2.current ) return cache.get()\n\t\t\t\t\telse return $mol_fiber.run( ()=> cache.get() )\n\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn $mol_fiber.run( ()=> {\n\t\t\t\t\t\n\t\t\t\t\tif( force === $mol_mem_force_fail ) return get_cache( this , key ).fail( next as any )\n\t\t\t\t\tif( force !== $mol_mem_force_cache ) next = value.call( this , key , next )\n\t\t\t\t\treturn get_cache( this , key ).put( next )\n\t\t\t\t\t\n\t\t\t\t} )\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n","namespace $ { \n\texport function $mol_const< Value >( value : Value ) {\n\t\tvar getter = <{ () : Value , '()' : Value }> ( () => value )\n\t\tgetter['()'] = value\n\t\tgetter[ Symbol.toStringTag ] = value\n\t\treturn getter\n\t}\n}\n","namespace $ {\n\tconst TextDecoder = globalThis.TextDecoder ?? $node.util.TextDecoder\n\n\t// @see https://developer.mozilla.org/en-US/docs/Web/API/TextDecoder/encoding\n\texport type $mol_charset_encoding = 'utf8' | 'ibm866' | 'iso-8859-2' | 'iso-8859-3' | 'iso-8859-4' | 'iso-8859-5' | 'iso-8859-6'\n\t\t| 'iso-8859-7' | 'iso-8859-8' | 'iso-8859-8i' | 'iso-8859-10' | 'iso-8859-13' | 'iso-8859-14' | 'iso-8859-15' | 'iso-8859-16'\n\t\t| 'koi8-r' | 'koi8-u' | 'koi8-r' | 'macintosh' | 'windows-874' | 'windows-1250' | 'windows-1251' | 'windows-1252' | 'windows-1253'\n\t\t| 'windows-1254'| 'windows-1255'| 'windows-1256'| 'windows-1257'| 'windows-1258' | 'x-mac-cyrillic' | 'gbk'\n\t\t| 'gb18030' | 'hz-gb-2312' | 'big5' | 'euc-jp' | 'iso-2022-jp' | 'shift-jis' | 'euc-kr' | 'iso-2022-kr'\n\n\texport function $mol_charset_decode(value: Uint8Array, code: $mol_charset_encoding = 'utf8') {\n\t\treturn new TextDecoder(code).decode(value)\n\t}\n\n}\n","namespace $ {\n\tconst TextEncoder = globalThis.TextEncoder ?? $node.util.TextEncoder\n\n\tconst encoder = new TextEncoder()\n\n\texport function $mol_charset_encode(value: string) {\n\t\treturn encoder.encode(value)\n\t}\n\n}\n","namespace $ {\n    export function $mol_compare_array<Value extends ArrayLike<unknown>>(a: Value, b: Value): boolean {\n\t\tif (a === b) return true\n\t\tif (Object.getPrototypeOf(a) !== Object.getPrototypeOf(b)) return false\n\t\tif (a.length !== b.length) return false\n\n\t\tfor (let i = 0; i < a.length; i++)\n\t\t\tif (a[i] !== b[i]) return false\n\n\t\treturn true\n\t}\n}\n","namespace $ {\n\n\texport type $mol_file_type = 'file' | 'dir' | 'link'\n\n\texport interface $mol_file_stat {\n\t\ttype: $mol_file_type\n\t\tsize: number\n\t\tatime: Date\n\t\tmtime: Date\n\t\tctime: Date\n\t}\n\n\texport class $mol_file_not_found extends Error {}\n\n\texport abstract class $mol_file extends $mol_object {\t\t\n\t\t@ $mol_mem_key\n\t\tstatic absolute( path : string ): $mol_file {\n\t\t\tthrow new Error( 'Not implemented yet' )\n\t\t}\n\n\t\tstatic relative( path : string ) : $mol_file {\n\t\t\tthrow new Error( 'Not implemented yet' )\n\t\t}\n\t\t\n\t\tpath() {\n\t\t\treturn '.'\n\t\t}\n\t\t\n\t\tparent() {\n\t\t\treturn this.resolve( '..' )\n\t\t}\n\n\t\tabstract stat( next? : $mol_file_stat, force? : $mol_mem_force ): $mol_file_stat\n\n\t\treset(): void {\n\t\t\ttry {\n\t\t\t\tthis.stat(undefined, $mol_mem_force_cache)\n\t\t\t} catch (error) {\n\t\t\t\tif (error instanceof $mol_file_not_found) return\n\t\t\t\treturn $mol_fail_hidden(error)\n\t\t\t}\n\t\t}\n\t\t\n\t\tversion() {\n\t\t\treturn this.stat().mtime.getTime().toString( 36 ).toUpperCase()\n\t\t}\n\n\t\tabstract ensure(next?: boolean): boolean\n\n\t\tabstract watcher(): {\n\t\t\tdestructor(): void\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\texists( next? : boolean , force? : $mol_mem_force ) {\n\t\t\tlet exists = true\n\t\t\ttry {\n\t\t\t\tthis.stat()\n\t\t\t} catch (error) {\n\t\t\t\tif (error instanceof $mol_file_not_found) exists = false\n\t\t\t\telse return $mol_fail_hidden(error)\n\t\t\t}\n\n\t\t\tif( next === undefined ) return exists\n\t\t\tif( next === exists ) return exists\n\n\t\t\tif( next ) this.parent().exists( true )\n\t\t\tthis.ensure(next)\n\t\t\tthis.reset()\n\t\t\t\n\t\t\treturn next\n\t\t}\n\t\t\n\t\ttype() {\n\t\t\treturn this.stat().type\n\t\t}\n\t\t\n\t\tname() {\n\t\t\treturn this.path().replace( /^.*\\//, '' )\n\t\t}\n\t\t\n\t\text() {\n\t\t\tconst match = /((?:\\.\\w+)+)$/.exec( this.path() )\n\t\t\treturn match ? match[ 1 ].substring( 1 ) : ''\n\t\t}\n\n\t\tabstract buffer( next? : Uint8Array , force? : $mol_mem_force ): Uint8Array\n\n\t\ttext(next?: string, force?: $mol_mem_force) {\n\t\t\treturn $mol_charset_decode(this.buffer(next === undefined ? undefined : $mol_charset_encode(next), force))\n\t\t}\n\n\t\tfail(error: Error) {\n\t\t\tthis.buffer(error as any, $mol_mem_force_fail)\n\t\t\tthis.stat(error as any, $mol_mem_force_fail)\n\t\t}\n\n\t\tbuffer_cached(buffer: Uint8Array) {\n\t\t\tconst ctime = new Date()\n\t\t\tconst stat: $mol_file_stat = {\n\t\t\t\ttype: 'file',\n\t\t\t\tsize: buffer.length,\n\t\t\t\tctime,\n\t\t\t\tatime: ctime,\n\t\t\t\tmtime: ctime\n\t\t\t}\n\n\t\t\tthis.buffer(buffer, $mol_mem_force_cache)\n\t\t\tthis.stat(stat , $mol_mem_force_cache)\n\t\t}\n\n\t\ttext_cached(content: string) {\n\t\t\tthis.buffer_cached($mol_charset_encode(content))\n\t\t}\n\t\t\n\t\tabstract sub(): $mol_file[]\n\n\t\tabstract resolve(path: string): $mol_file\n\n\t\tabstract relate( base?: $mol_file ): string\n\t\t\n\t\tabstract append( next : Uint8Array | string ): void\n\t\t\n\t\tfind(\n\t\t\tinclude? : RegExp ,\n\t\t\texclude? : RegExp\n\t\t) {\n\t\t\tconst found = [] as $mol_file[]\n\t\t\tconst sub = this.sub()\n\n\t\t\tfor (const child of sub) {\n\t\t\t\tconst child_path = child.path()\n\n\t\t\t\tif( exclude && child_path.match( exclude ) ) continue\n\n\t\t\t\tif( !include || child_path.match( include ) ) found.push( child )\n\n\t\t\t\tif( child.type() === 'dir' ) {\n\t\t\t\t\tconst sub_child = child.find( include , exclude )\n\t\t\t\t\tfor (const child of sub_child) found.push(child)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn found\n\t\t}\n\t\t\n\t}\n}\n","namespace $ {\n\n\tfunction stat_convert(stat: ReturnType<typeof $node.fs.statSync>): $mol_file_stat {\n\t\tlet type: $mol_file_type | undefined\n\t\tif (stat.isDirectory()) type = 'dir'\n\t\tif (stat.isFile()) type = 'file'\n\t\tif (stat.isSymbolicLink()) type = 'link'\n\n\t\tif (! type) return $mol_fail( new Error(`Unsupported file type`) )\n\n\t\treturn {\n\t\t\ttype, \n\t\t\tsize: Number(stat.size),\n\t\t\tatime: stat.atime,\n\t\t\tmtime: stat.mtime,\n\t\t\tctime: stat.ctime\n\t\t}\n\t}\n\n\tfunction buffer_normalize(buf: Buffer): Uint8Array {\n\t\treturn new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength)\n\t}\n\n\texport class $mol_file_node extends $mol_file {\n\t\t@ $mol_mem_key\n\t\tstatic absolute( path : string ) {\n\t\t\treturn this.make({\n\t\t\t\tpath : $mol_const( path )\n\t\t\t})\n\t\t}\n\n\t\tstatic relative( path : string ) {\n\t\t\treturn this.absolute( $node.path.resolve( path ).replace( /\\\\/g , '/' ) )\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\twatcher() {\n\t\t\tconst watcher = $node.chokidar.watch( this.path() , {\n\t\t\t\tpersistent : true ,\n\t\t\t\tignored : /(^\\.|___$)/ ,\n\t\t\t\tdepth :  0 ,\n\t\t\t\tignoreInitial : true ,\n\t\t\t\tawaitWriteFinish: {\n\t\t\t\t\tstabilityThreshold: 100,\n\t\t\t\t},\n\t\t\t} )\n\n\t\t\tconst handler = ( type : string , path : string )=> $mol_fiber_unlimit( ()=> {\n\t\t\t\t\n\t\t\t\tconst file = $mol_file.relative( path.replace( /\\\\/g , '/' ) )\n\n\t\t\t\tif( type === 'change' ) {\n\n\t\t\t\t\tconst cached = $mol_mem_cached( ()=> file.buffer() )\n\t\t\t\t\tconst actual = buffer_normalize($node.fs.readFileSync( file.path() ))\n\n\t\t\t\t\tif( cached && $mol_compare_array( cached , actual ) ) return\n\n\t\t\t\t\tthis.$.$mol_log3_rise({\n\t\t\t\t\t\tplace: `$mol_file:watcher`,\n\t\t\t\t\t\tmessage: type ,\n\t\t\t\t\t\tpath: file.relate() ,\n\t\t\t\t\t})\n\n\t\t\t\t\tfile.reset()\n\t\t\t\t\tfile.buffer( actual , $mol_mem_force_cache )\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.$.$mol_log3_rise({\n\t\t\t\t\t\tplace: `${this}.watcher()`,\n\t\t\t\t\t\tmessage: type ,\n\t\t\t\t\t\tpath: file.relate() ,\n\t\t\t\t\t})\n\t\t\t\t\t\n\t\t\t\t\tfile.reset()\n\t\t\t\t\tfile.parent().reset()\n\t\t\t\t\t\n\t\t\t\t}\n\n\t\t\t} )\n\n\t\t\twatcher.on( 'all' , handler )\n\n\t\t\twatcher.on( 'error' , ( error : Error )=> {\n\t\t\t\tthis.stat( error as any , $mol_mem_force_fail )\n\t\t\t} )\n\t\t\t\n\t\t\treturn {\n\t\t\t\tdestructor() {\n\t\t\t\t\twatcher.removeAllListeners()\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t@ $mol_mem\n\t\tstat( next? : $mol_file_stat, force? : $mol_mem_force ) {\n\t\t\tlet stat = next\n\n\t\t\ttry {\n\t\t\t\tstat = next ?? stat_convert($node.fs.statSync( this.path() ))\n\t\t\t} catch (error) {\n\t\t\t\tif (error.code === 'ENOENT') error = new $mol_file_not_found(`File not found: ${this.path()}`)\n\n\t\t\t\treturn $mol_fail_hidden(error)\n\t\t\t}\n\n\t\t\tthis.parent().watcher()\n\t\t\t\n\t\t\treturn stat\n\t\t}\n\n\t\tensure(next?: boolean) {\n\t\t\tif (next) $node.fs.mkdirSync( this.path() )\n\t\t\telse $node.fs.unlinkSync( this.path() )\n\n\t\t\treturn true\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tbuffer( next? : Uint8Array , force? : $mol_mem_force ) {\n\t\t\tif( next === undefined ) {\n\t\t\t\tthis.stat()\n\n\t\t\t\treturn buffer_normalize($node.fs.readFileSync( this.path() ))\n\t\t\t}\n\t\t\t\n\t\t\tthis.parent().exists( true )\n\n\t\t\t$node.fs.writeFileSync( this.path() , next )\n\t\t\t\n\t\t\treturn next\n\t\t}\n\n\t\t@ $mol_mem\n\t\tsub() : $mol_file[] {\n\t\t\tif (! this.exists() ) return []\n\t\t\tif ( this.type() !== 'dir') return []\n\n\t\t\treturn $node.fs.readdirSync( this.path() )\n\t\t\t\t.filter( name => !/^\\.+$/.test( name ) )\n\t\t\t\t.map( name => this.resolve( name ) )\n\t\t}\n\t\t\n\t\tresolve( path : string ) {\n\t\t\treturn ( this.constructor as typeof $mol_file ).relative( $node.path.join( this.path() , path ) )\n\t\t}\n\t\t\n\t\trelate( base = ( this.constructor as typeof $mol_file ).relative( '.' )) {\n\t\t\treturn $node.path.relative( base.path() , this.path() ).replace( /\\\\/g , '/' )\n\t\t}\n\t\t\n\t\tappend( next : Uint8Array | string ) {\n\t\t\t$node.fs.appendFileSync( this.path() , next )\n\t\t}\t\t\n\t}\n\n\t$.$mol_file = $mol_file_node\n}\n","namespace $ {\n\texport function $mol_exec(\n\t\tthis : $mol_ambient_context ,\n\t\tdir : string ,\n\t\tcommand : string ,\n\t\t...args : string[]\n\t) {\n\n\t\tlet [ app , ... args0 ] = command.split( ' ' )\n\t\targs = [ ... args0 , ... args ]\n\n\t\tthis.$mol_log3_come({\n\t\t\tplace: '$mol_exec' ,\n\t\t\tdir: $node.path.relative( '' , dir ) ,\n\t\t\tmessage: 'Run',\n\t\t\tcommand: `${app} ${ args.join(' ') }` ,\n\t\t})\n\n\t\tvar res = $node['child_process'].spawnSync(\n\t\t\tapp ,\n\t\t\targs,\n\t\t\t{\n\t\t\t\tcwd : $node.path.resolve( dir ) ,\n\t\t\t\tshell : true ,\n\t\t\t}\n\t\t)\n\t\t\n\t\tif( res.status || res.error ) return $mol_fail( res.error || new Error( res.stderr.toString() ) )\n\t\tif( !res.stdout ) res.stdout = new Buffer('')\n\n\t\treturn res\n\t}\n}\n","namespace $ {\n\t\n\texport var $mol_dom_context : typeof globalThis\n\t\n}\n","namespace $ {\n\t\n\t$mol_dom_context = new $node.jsdom.JSDOM( '' , { url : 'https://localhost/' } ).window as any\n\t\n}\n","namespace $ {\n\t\n\texport class $mol_state_local< Value > extends $mol_object {\n\t\t\n\t\tstatic 'native()' : Pick< Storage , 'getItem'|'setItem'|'removeItem' >\n\t\tstatic native() {\n\t\t\tif( this['native()'] ) return this['native()']\n\n\t\t\tcheck : try {\n\t\t\t\tconst native = $mol_dom_context.localStorage\n\t\t\t\tif( !native ) break check\n\t\t\t\t\n\t\t\t\tnative.setItem( '' , '' )\n\t\t\t\tnative.removeItem( '' )\n\t\t\t\treturn this['native()'] = native\n\t\t\t} catch( error ) {\n\t\t\t\tconsole.warn( error )\n\t\t\t}\n\n\t\t\treturn this['native()'] = {\n\t\t\t\tgetItem( key : string ) {\n\t\t\t\t\treturn this[ ':' + key ]\n\t\t\t\t} ,\n\t\t\t\tsetItem( key : string , value : string ) {\n\t\t\t\t\tthis[ ':' + key ] = value\n\t\t\t\t} ,\n\t\t\t\tremoveItem( key : string ) {\n\t\t\t\t\tthis[ ':' + key ] = void 0\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t\t@ $mol_mem_key\n\t\tstatic value< Value >( key : string , next? : Value , force? : $mol_mem_force ) : Value | null {\n\t\t\tif( next === void 0 ) return JSON.parse( this.native().getItem( key ) || 'null' )\n\t\t\t\n\t\t\tif( next === null ) this.native().removeItem( key )\n\t\t\telse this.native().setItem( key , JSON.stringify( next ) )\n\t\t\t\n\t\t\treturn next\n\t\t}\n\t\t\n\t\tprefix() { return '' }\n\t\t\n\t\tvalue( key : string , next? : Value ) {\n\t\t\treturn $mol_state_local.value( this.prefix() + '.' + key , next )\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\t\n\texport interface $mol_locale_dict {\n\t\t[ key : string ] : string\n\t}\n\t\n\texport class $mol_locale extends $mol_object {\n\t\t\n\t\t@ $mol_mem\n\t\tstatic lang_default() {\n\t\t\treturn 'en'\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tstatic lang( next? : string ) {\n\t\t\treturn $mol_state_local.value( 'locale' , next ) || $mol_dom_context.navigator.language.replace( /-.*/ , '' ) || this.lang_default()\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tstatic source( lang : string ) {\n\t\t\treturn JSON.parse( $mol_file.relative( `web.locale=${ lang }.json` ).text().toString() )\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tstatic texts( lang : string , next? : $mol_locale_dict ) : $mol_locale_dict {\n\t\t\tif( next ) return next\n\t\t\t\n\t\t\ttry {\n\t\t\t\treturn this.source( lang ).valueOf()\n\t\t\t} catch( error ) {\n\t\t\t\tif( 'then' in error ) $mol_fail_hidden( error )\n\t\t\t\tconst def = this.lang_default()\n\t\t\t\tif( lang === def ) throw error\n\t\t\t\treturn this.source( def )\n\t\t\t}\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tstatic text( key : string ) {\n\n\t\t\tfor( let lang of [ this.lang() , 'en' ] ) {\n\t\t\t\t\n\t\t\t\tconst text = this.texts( lang )[ key ]\n\t\t\t\tif( text ) return text\n\n\t\t\t\tconsole.warn( `Not translated to \"${ lang }\": ${ key }` )\n\t\t\t}\n\t\t\t\t\t\t\n\t\t\treturn `<${ key }>`\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\t\n\texport class $mol_window extends $mol_object {\n\t\t\n\t\tstatic size( next? : {\n\t\t\twidth : number\n\t\t\theight: number\n\t\t} ) {\n\t\t\treturn next || {\n\t\t\t\twidth : 1024 ,\n\t\t\t\theight : 768 ,\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\t\n\texport class $mol_defer extends $mol_object {\n\t\t\n\t\tconstructor( public run : ()=> void ) {\n\t\t\tsuper()\n\t\t\t$mol_defer.add( this )\n\t\t}\n\t\t\n\t\tdestructor() {\n\t\t\t$mol_defer.drop( this )\n\t\t}\n\t\t\n\t\tstatic all : $mol_defer[] = []\n\t\tstatic timer = null as any\n\t\t\n\t\tstatic scheduleNative : ( handler : ()=> void ) => any = ( typeof requestAnimationFrame == 'function' )\n\t\t\t? handler => requestAnimationFrame( handler )\n\t\t\t: handler => setTimeout( handler , 16 )\n\t\t\n\t\tstatic schedule() {\n\t\t\tif( this.timer ) return\n\t\t\t\n\t\t\tthis.timer = this.scheduleNative( ()=> {\n\t\t\t\tthis.timer = null\n\t\t\t\tthis.run()\n\t\t\t} )\n\t\t}\n\t\t\n\t\tstatic unschedule() {\n\t\t\tif( !this.timer ) return\n\t\t\t\n\t\t\tcancelAnimationFrame( this.timer )\n\t\t\tthis.timer = null\n\t\t}\n\t\t\n\t\tstatic add( defer : $mol_defer ) {\n\t\t\tthis.all.push( defer )\n\t\t\tthis.schedule()\n\t\t}\n\t\t\n\t\tstatic drop( defer : $mol_defer ) {\n\t\t\tvar index = this.all.indexOf( defer )\n\t\t\tif( index >= 0 ) this.all.splice( index , 1 )\n\t\t}\n\t\t\n\t\tstatic run() {\n\t\t\tif( this.all.length === 0 ) return\n\t\t\tthis.schedule()\n\t\t\tfor( var defer : $mol_defer | undefined ; defer = this.all.shift() ; ) defer.run()\n\t\t\t//this.unschedule()\n\t\t}\n\t\t\n\t}\n\n}\n","namespace $ {\n\t\n\texport class $mol_view_selection extends $mol_object {\n\t\t\n\t\t@ $mol_mem\n\t\tstatic focused( next? : Element[] ) : Element[] {\n\t\t\tif( next === undefined ) return [] as Element[]\n\t\t\t\n\t\t\tconst parents : Element[] = []\n\t\t\tlet element = next[ 0 ] as HTMLElement\n\t\t\t\n\t\t\twhile( element ) {\n\t\t\t\tparents.push( element )\n\t\t\t\telement = element.parentNode as HTMLElement\n\t\t\t}\n\n\t\t\tnew $mol_defer( ()=> {\n\n\t\t\t\tconst element = $mol_mem_cached( ()=> this.focused() )![0] as HTMLElement\n\t\t\t\t\n\t\t\t\tif( element ) element.focus()\n\t\t\t\telse $mol_dom_context.blur()\n\n\t\t\t} )\n\n\t\t\treturn parents\n\t\t}\n\t\t\n\t\tstatic focus( event : FocusEvent ) {\n\t\t\tthis.focused( [ event.target as Element ] )\n\n\t\t}\n\t\t\n\t\tstatic blur( event : FocusEvent ) {\n\t\t\tconst elements = $mol_mem_cached( ()=> this.focused() )\n\t\t\tif( elements && elements[0] === event.target ) this.focused( [] )\n\t\t}\n\t}\n\t\n}\n","namespace $ {\n\n\texport function $mol_dom_qname( name : string ) {\n\t\treturn name.replace( /\\W/ , '' ).replace( /^(?=\\d+)/ , '_' )\n\t}\n\n}\n","namespace $ {\n\t\n\texport function $mol_dom_render_attributes (\n\t\tel : Element ,\n\t\tattrs : { [ key : string ] : string|number|boolean|null }\n\t) {\n\n\t\tfor( let name in attrs ) {\n\n\t\t\tlet val = attrs[ name ] as any\n\n\t\t\tif( val === null || val === false ) {\n\n\t\t\t\tif( !el.hasAttribute( name ) ) continue\n\t\t\t\t\n\t\t\t\tel.removeAttribute( name )\n\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tconst  str = String( val )\n\t\t\t\tif( el.getAttribute( name ) === str ) continue\n\t\t\t\t\n\t\t\t\tel.setAttribute( name , str )\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n","namespace $ {\n\n\tconst cacthed = new WeakMap< any , boolean >()\n\n\texport function $mol_fail_catch( error : object ) {\n\t\t\n\t\tif( cacthed.get( error ) ) return false\n\t\t\n\t\tcacthed.set( error , true )\n\t\treturn true\n\t\t\n\t}\n\n}\n","namespace $ {\n\t\n\texport function $mol_dom_render_styles (\n\t\tel : Element ,\n\t\tstyles : { [ key : string ] : string|number }\n\t) {\n\t\tfor( let name in styles ) {\n\t\t\tlet val = styles[ name ]\n\t\t\t\n\t\t\tconst style = ( el as HTMLElement ).style as any\n\t\t\tconst cur = style[ name ]\n\t\t\t\n\t\t\tif( typeof val === 'number' ) {\n\t\t\t\tif( parseFloat( cur ) == val ) continue\n\t\t\t\tstyle[ name ] = `${ val }px`\n\t\t\t}\n\t\t\t\n\t\t\tif( cur !== val ) style[ name ] = val\n\t\t}\n\t}\n\n}\n","namespace $ {\n\t\n\texport function $mol_dom_render_fields (\n\t\tel : Element ,\n\t\tfields : { [ key : string ] : any }\n\t) {\n\t\tfor( let key in fields ) {\n\t\t\t\n\t\t\tconst val : any = fields[ key ]\n\t\t\t\n\t\t\tif( val === undefined ) continue\n\t\t\t// if( el[ key ] === val ) continue\n\t\t\t\n\t\t\tel[ key ] = val\n\t\t}\n\t}\n\n}\n","namespace $ {\n\n\texport function $mol_dom_render_children (\n\t\tel : Element ,\n\t\tchildNodes : NodeList | Array< Node | string | null >\n\t) {\n\t\tconst node_set = new Set< Node | string | null >( childNodes )\n\t\t\n\t\tlet nextNode : Node | null = el.firstChild\n\t\tfor( let view of childNodes ) {\n\n\t\t\tif( view == null ) continue\n\n\t\t\tif( view instanceof $mol_dom_context.Node ) {\n\t\t\t\t\n\t\t\t\twhile( true ) {\n\t\t\t\t\tif( !nextNode ) {\n\t\t\t\t\t\tel.appendChild( view )\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tif( nextNode == view ) {\n\t\t\t\t\t\tnextNode = nextNode.nextSibling\n\t\t\t\t\t\tbreak\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif( node_set.has( nextNode ) ) {\n\t\t\t\t\t\t\tel.insertBefore( view , nextNode )\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst nn = nextNode.nextSibling\n\t\t\t\t\t\t\tel.removeChild( nextNode )\n\t\t\t\t\t\t\tnextNode = nn\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\tif( nextNode && nextNode.nodeName === '#text' ) {\n\t\t\t\t\tconst str = String( view )\n\t\t\t\t\tif( nextNode.nodeValue !== str ) nextNode.nodeValue = str\n\t\t\t\t\tnextNode = nextNode.nextSibling\n\t\t\t\t} else {\n\t\t\t\t\tconst textNode = $mol_dom_context.document.createTextNode( String( view ) )\n\t\t\t\t\tel.insertBefore( textNode , nextNode )\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\twhile( nextNode ) {\n\t\t\tconst currNode = nextNode\n\t\t\tnextNode = currNode.nextSibling\n\t\t\tel.removeChild( currNode )\n\t\t}\n\t}\n\n}\n","namespace $ {\n\t\n\texport function $mol_func_name( func : Function ) : string {\n\t\t\n\t\tlet name = func.name\n\t\tif( name?.length > 1 ) return name\n\n\t\tfor( let key in $ ) {\n\t\t\ttry {\n\t\t\t\tif( $[ key ] !== func ) continue\n\t\t\t\tname = key\n\t\t\t\tObject.defineProperty( func , 'name' , { value : name } )\n\t\t\t\tbreak\n\t\t\t} catch {}\n\t\t}\n\n\t\treturn name\n\t}\n\n\texport function $mol_func_name_from< Target extends Function >( target : Target , source : Function ) {\n\t\tObject.defineProperty( target , 'name' , { value : source.name } )\n\t\treturn target\n\t}\n\n}\n",null,null,"namespace $ {\n\n\tlet all = [] as string[]\n\tlet el : HTMLStyleElement | null = null\n\tlet timer : $mol_after_tick | null = null\n\n\texport function $mol_style_attach(\n\t\tid : string ,\n\t\ttext : string ,\n\t) {\n\n\t\tall.push( `/* ${ id } */\\n\\n${ text }`)\n\n\t\tif( timer ) return el!\n\t\t\n\t\tconst doc = $mol_dom_context.document\n\t\tif( !doc ) return null\n\n\t\tel = doc.createElement('style')\n\t\tel.id = `$mol_style_attach`\n\t\tdoc.head.appendChild( el )\n\n\t\ttimer = new $mol_after_tick( ()=> {\n\t\t\tel!.innerHTML = '\\n' + all.join( '\\n\\n' )\n\t\t\tall = []\n\t\t\tel = null\n\t\t\ttimer = null\n\t\t} )\n\n\t\treturn el\n\n\t}\n\n}\n","namespace $ {\n\n\texport class $mol_decor< Value > {\n\t\t\n\t\tconstructor(\n\t\t\treadonly value : Value\n\t\t) {}\n\n\t\tprefix() { return '' }\n\t\tvalueOf() { return this.value }\n\t\tpostfix() { return '' }\n\n\t\ttoString(){\n\t\t\treturn `${ this.prefix() }${ this.valueOf() }${ this.postfix() }`\n\t\t}\n\n\t}\n\n}\n","namespace $ {\n\t\n\texport type $mol_style_unit_length =\n\t| '%'\n\t| 'px' | 'cm' | 'mm' | 'Q' | 'in' | 'pc' | 'pt'\n\t| 'cap' | 'ch' | 'em' | 'rem' | 'ex' | 'ic' | 'lh' | 'rlh'\n\t| 'vh' | 'vw' | 'vi' | 'vb' | 'vmin' | 'vmax'\n\t\n\texport type $mol_style_unit_angle = 'deg' | 'rad' | 'grad' | 'turn'\n\t\n\texport type $mol_style_unit_time = 's' | 'ms'\n\n\texport type $mol_style_unit_any = $mol_style_unit_length | $mol_style_unit_angle | $mol_style_unit_time\n\t\n\texport class $mol_style_unit<\n\t\tLiteral extends $mol_style_unit_any\n\t> extends $mol_decor< number > {\n\n\t\tconstructor(\n\t\t\tvalue : number,\n\t\t\treadonly literal : Literal,\n\t\t) {\n\t\t\tsuper( value )\n\t\t}\n\n\t\tpostfix() {\n\t\t\treturn this.literal\n\t\t}\n\n\t\tstatic per( value : number ) { return new $mol_style_unit( value , '%' ) }\n\t\tstatic px( value : number ) { return new $mol_style_unit( value , 'px' ) }\n\t\tstatic mm( value : number ) { return new $mol_style_unit( value , 'mm' ) }\n\t\tstatic cm( value : number ) { return new $mol_style_unit( value , 'cm' ) }\n\t\tstatic Q( value : number ) { return new $mol_style_unit( value , 'Q' ) }\n\t\tstatic in( value : number ) { return new $mol_style_unit( value , 'in' ) }\n\t\tstatic pc( value : number ) { return new $mol_style_unit( value , 'pc' ) }\n\t\tstatic pt( value : number ) { return new $mol_style_unit( value , 'pt' ) }\n\t\tstatic cap( value : number ) { return new $mol_style_unit( value , 'cap' ) }\n\t\tstatic ch( value : number ) { return new $mol_style_unit( value , 'ch' ) }\n\t\tstatic em( value : number ) { return new $mol_style_unit( value , 'em' ) }\n\t\tstatic rem( value : number ) { return new $mol_style_unit( value , 'rem' ) }\n\t\tstatic ex( value : number ) { return new $mol_style_unit( value , 'ex' ) }\n\t\tstatic ic( value : number ) { return new $mol_style_unit( value , 'ic' ) }\n\t\tstatic lh( value : number ) { return new $mol_style_unit( value , 'lh' ) }\n\t\tstatic rlh( value : number ) { return new $mol_style_unit( value , 'rlh' ) }\n\t\tstatic vh( value : number ) { return new $mol_style_unit( value , 'vh' ) }\n\t\tstatic vw( value : number ) { return new $mol_style_unit( value , 'vw' ) }\n\t\tstatic vi( value : number ) { return new $mol_style_unit( value , 'vi' ) }\n\t\tstatic vb( value : number ) { return new $mol_style_unit( value , 'vb' ) }\n\t\tstatic vmin( value : number ) { return new $mol_style_unit( value , 'vmin' ) }\n\t\tstatic vmax( value : number ) { return new $mol_style_unit( value , 'vmax' ) }\n\t\t\n\t\tstatic deg( value : number ) { return new $mol_style_unit( value , 'deg' ) }\n\t\tstatic rad( value : number ) { return new $mol_style_unit( value , 'rad' ) }\n\t\tstatic grad( value : number ) { return new $mol_style_unit( value , 'grad' ) }\n\t\tstatic turn( value : number ) { return new $mol_style_unit( value , 'turn' ) }\n\n\t\tstatic s( value : number ) { return new $mol_style_unit( value , 's' ) }\n\t\tstatic ms( value : number ) { return new $mol_style_unit( value , 'ms' ) }\n\t\n\t}\n\n}\n","namespace $ {\n\n\texport type $mol_style_func_name =\n\t| 'calc'\n\t| 'hsla'\n\t| 'rgba'\n\t| 'var'\n\t| 'url'\n\n\tconst { per } = $mol_style_unit\n\t\n\texport class $mol_style_func<\n\t\tName extends $mol_style_func_name ,\n\t\tValue = unknown,\n\t> extends $mol_decor< Value > {\n\n\t\tconstructor(\n\t\t\treadonly name : Name,\n\t\t\tvalue : Value,\n\t\t) {\n\t\t\tsuper( value )\n\t\t}\n\n\t\tprefix() { return this.name + '(' }\n\t\tpostfix() { return ')' }\n\n\t\tstatic calc< Value >( value : Value ) {\n\t\t\treturn new $mol_style_func( 'calc' , value )\n\t\t}\n\n\t\tstatic vary< Name extends string >( name : Name ) {\n\t\t\treturn new $mol_style_func( 'var' , name )\n\t\t}\n\n\t\tstatic url< Href extends string >( href : Href ) {\n\t\t\treturn new $mol_style_func( 'url' , JSON.stringify( href ) )\n\t\t}\n\n\t\tstatic hsla(\n\t\t\thue: number,\n\t\t\tsaturation: number,\n\t\t\tlightness: number,\n\t\t\talpha: number,\n\t\t) {\n\t\t\treturn new $mol_style_func(\n\t\t\t\t'hsla',\n\t\t\t\t[ hue , per( saturation ) , per( lightness ) , alpha ],\n\t\t\t)\n\t\t}\n\t\n\t\tstatic rgba(\n\t\t\tred: number,\n\t\t\tgreen: number,\n\t\t\tblue: number,\n\t\t\talpha: number,\n\t\t) {\n\t\t\treturn new $mol_style_func(\n\t\t\t\t'rgba',\n\t\t\t\t[ red , green , blue , alpha ],\n\t\t\t)\n\t\t}\n\t\n\t}\n\n}\n","namespace $ {\n\n\tconst { vary } = $mol_style_func\n\n\texport const $mol_theme = {\n\t\tback: vary('--mol_theme_back'),\n\t\thover: vary('--mol_theme_hover'),\n\t\tcurrent: vary('--mol_theme_current'),\n\t\ttext: vary('--mol_theme_text'),\n\t\tcontrol: vary('--mol_theme_control'),\n\t\tshade: vary('--mol_theme_shade'),\n\t\tline: vary('--mol_theme_line'),\n\t\tfocus: vary('--mol_theme_focus'),\n\t\tfield: vary('--mol_theme_field'),\n\t}\n\n}\n","namespace $ { $mol_style_attach( \"mol/theme/theme.css\",\n \"[mol_theme] {\\n\\tbackground-color: var(--mol_theme_back);\\n\\tcolor: var(--mol_theme_text);\\n\\tfill: var(--mol_theme_text);\\n}\\n\\n@media (prefers-color-scheme: light) {\\n\\t[mol_theme=\\\"$mol_theme_auto\\\"] {\\n\\t\\t--mol_theme_back: hsl( 210 , 50% , 99% );\\n\\t\\t--mol_theme_hover: rgba( 0 , 0 , 0 , .05 );\\n\\t\\t--mol_theme_current: hsl( 210 , 100% , 80% );\\n\\t\\t--mol_theme_text: rgba( 0 , 0 , 0 , .9 );\\n\\t\\t--mol_theme_control: hsla( 210 , 60% , 35% , 1 );\\n\\t\\t--mol_theme_shade: rgba( 0 , 0 , 0 , .5 );\\n\\t\\t--mol_theme_line: rgba( 220 , 220 , 220 , 1 );\\n\\t\\t--mol_theme_focus: hsla( 0 , 60% , 50% , 0.75 );\\n\\t\\t--mol_theme_field: white;\\n\\t}\\n}\\n\\n@media (prefers-color-scheme: dark) {\\n\\t[mol_theme=\\\"$mol_theme_auto\\\"] {\\n\\t\\t--mol_theme_back: hsl( 210 , 50% , 10% );\\n\\t\\t--mol_theme_hover: #333;\\n\\t\\t--mol_theme_current: hsl( 210 , 100% , 20% );\\n\\t\\t--mol_theme_text: rgba( 255 , 255 , 255 , .8 );\\n\\t\\t--mol_theme_control: hsla( 210 , 60% , 70% , 1 );\\n\\t\\t--mol_theme_shade: rgba( 255 , 255 , 255 , .5 );\\n\\t\\t--mol_theme_line: rgba( 50 , 50 , 50 , 1 );\\n\\t\\t--mol_theme_focus: hsl( 15 , 100% , 60% );\\n\\t\\t--mol_theme_field: black;\\n\\t}\\n}\\n\\n[mol_theme=\\\"$mol_theme_light\\\"] , :root {\\n\\t--mol_theme_back: hsl( 210 , 50% , 99% );\\n\\t--mol_theme_hover: rgba( 0 , 0 , 0 , .05 );\\n\\t--mol_theme_current: hsl( 210 , 100% , 80% );\\n\\t--mol_theme_text: rgba( 0 , 0 , 0 , .9 );\\n\\t--mol_theme_control: hsla( 210 , 60% , 35% , 1 );\\n\\t--mol_theme_shade: rgba( 0 , 0 , 0 , .5 );\\n\\t--mol_theme_line: rgba( 220 , 220 , 220 , 1 );\\n\\t--mol_theme_focus: hsla( 0 , 60% , 50% , 0.75 );\\n\\t--mol_theme_field: white;\\n}\\n\\n[mol_theme=\\\"$mol_theme_dark\\\"] {\\n\\t--mol_theme_back: hsl( 210 , 50% , 10% );\\n\\t--mol_theme_hover: #333;\\n\\t--mol_theme_current: hsl( 210 , 100% , 20% );\\n\\t--mol_theme_text: rgba( 255 , 255 , 255 , .8 );\\n\\t--mol_theme_control: hsla( 210 , 60% , 70% , 1 );\\n\\t--mol_theme_shade: rgba( 255 , 255 , 255 , .5 );\\n\\t--mol_theme_line: rgba( 50 , 50 , 50 , 1 );\\n\\t--mol_theme_focus: hsl( 15 , 100% , 60% );\\n\\t--mol_theme_field: black;\\n}\\n\\n[mol_theme=\\\"$mol_theme_base\\\"] {\\n\\t--mol_theme_back: hsla( 210 , 60% , 35% , 1 );\\n\\t--mol_theme_hover: rgba( 0 , 0 , 0 , .05 );\\n\\t--mol_theme_current: hsl( 210 , 100% , 20% );\\n\\t--mol_theme_text: white;\\n\\t--mol_theme_line: white;\\n\\t--mol_theme_control: white;\\n}\\n\\n[mol_theme=\\\"$mol_theme_accent\\\"] {\\n\\t--mol_theme_back: hsl( 15 , 60% , 50% );\\n\\t--mol_theme_hover: hsl( 15 , 60% , 40% );\\n\\t--mol_theme_text: white;\\n\\t--mol_theme_line: rgba( 50 , 50 , 50 , 1 );\\n\\t--mol_theme_control: white;\\n}\\n\"\n) }","namespace $ { $mol_style_attach( \"mol/skin/skin.css\",\n \":root {\\n\\t--mol_skin_font: 1rem/1.5rem \\\"-apple-system\\\", BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif;\\n\\t--mol_skin_font_monospace: Monaco, monospace;\\n}\\n\\n/* Deprecated, use mol_theme instead */\\n:root {\\n\\n\\t--mol_skin_outline: 0 0 0 1px var(--mol_theme_line);\\n\\t\\n\\t--mol_skin_base: #3a8ccb;\\n\\t--mol_skin_base_text: white;\\n\\t\\n\\t--mol_skin_current: var(--mol_skin_base);\\n\\t--mol_skin_current_text: white;\\n\\t--mol_skin_current_line: #1471b8;\\n\\t\\n\\t--mol_skin_button: var(--mol_skin_card);\\n\\t--mol_skin_hover: rgba( 0 , 0 , 0 , .05 );\\n\\t\\n\\t--mol_skin_round: 0px;\\n\\t\\n\\t--mol_skin_focus_line: rgba( 0 , 0 , 0 , .2 );\\n\\t--mol_skin_focus_outline: 0 0 0 1px var(--mol_skin_focus_line);\\n\\t\\n\\t--mol_skin_float: var(--mol_skin_focus_outline);\\n\\n\\t--mol_skin_passive: #eee;\\n\\t--mol_skin_passive_text: rgba( 0 , 0 , 0 , .5 );\\n\\t\\n\\t--mol_skin_light: #fcfcfc;\\n\\t--mol_skin_light_line: rgba( 230 , 230 , 230 , .75 );\\n\\t--mol_skin_light_text: rgba( 0 , 0 , 0 , .9 );\\n\\t--mol_skin_light_hover: #f7f7f7;\\n\\t--mol_skin_light_outline: 0 0 0 1px var(--mol_theme_line);\\n\\n\\t--mol_skin_card: var(--mol_theme_back);\\n\\t--mol_skin_card_text: var(--mol_theme_text);\\n\\t\\n\\t--mol_skin_accent: #dd0e3e;\\n\\t--mol_skin_accent_text: white;\\n\\t--mol_skin_accent_hover: #c50d37;\\n\\n\\t--mol_skin_warn: rgba( 255 , 50 , 50 , 0.75 );\\n\\t--mol_skin_warn_text: white;\\n\\t--mol_skin_warn_hover: color( var(--mol_skin_warn) lightness(-5%) );\\n\\n\\t--mol_skin_good: #96DAA9;\\n\\t--mol_skin_good_text: black;\\n\\n\\t--mol_skin_bad: #CC5252;\\n\\t--mol_skin_bad_text: white;\\n}\\n\"\n) }","namespace $ {\n\n\texport type $mol_view_content = $mol_view|Node|string|number|boolean\n\t\n\texport function $mol_view_visible_width() {\n\t\treturn $mol_window.size().width\n\t}\n\t\n\texport function $mol_view_visible_height() {\n\t\treturn $mol_window.size().height\n\t}\n\t\n\texport function $mol_view_state_key( suffix : string ) {\n\t\treturn suffix\n\t}\n\n\t/// Reactive statefull lazy ViewModel\n\texport class $mol_view extends $mol_object {\n\t\t\n\t\t@ $mol_mem_key\n\t\tstatic Root< This extends typeof $mol_view >( this : This , id: number ) {\n\t\t\treturn new this as InstanceType< This >\n\t\t}\n\n\t\t@ $mol_mem\n\t\tautorun() {\n\t\t\treturn $mol_atom2_autorun( ()=> {\n\t\t\t\tthis.dom_tree()\n\t\t\t\tdocument.title = this.title()\n\t\t\t\treturn this\n\t\t\t} )\n\t\t}\n\n\t\tstatic autobind() {\n\t\t\t\n\t\t\tconst nodes = $mol_dom_context.document.querySelectorAll( '[mol_view_root]' )\n\t\t\t\n\t\t\tfor( let i = nodes.length - 1 ; i >= 0 ; --i ) {\n\n\t\t\t\tconst name = nodes.item( i ).getAttribute( 'mol_view_root' )!\n\t\t\t\t\n\t\t\t\tconst View = $[ name ]\n\t\t\t\tif( !View ) {\n\t\t\t\t\tconsole.error( `Can not attach view. Class not found: ${ name }` )\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconst view = View.Root( i )\n\t\t\t\tview.dom_node( nodes.item( i ) )\n\t\t\t\tview.autorun()\n\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\ttitle() : string {\n\t\t\treturn this.constructor.toString()\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tfocused( next?: boolean ) {\n\t\t\tlet node = this.dom_node()\n\t\t\tconst value = $mol_view_selection.focused( next === undefined ? undefined : ( next ? [ node ] : [] ) )\n\t\t\treturn value.indexOf( node ) !== -1\n\t\t} \n\t\t\n\t\tstate_key( suffix = '' ) {\n\t\t\treturn this.$.$mol_view_state_key( suffix )\n\t\t}\n\t\t\n\t\t/// Name of element that created when element not found in DOM\n\t\tdom_name() {\n\t\t\treturn $mol_dom_qname( this.constructor.toString() ) || 'div'\n\t\t}\n\t\t\n\t\t/// NameSpace of element that created when element not found in DOM\n\t\tdom_name_space() { return 'http://www.w3.org/1999/xhtml' }\n\t\t\n\t\t/// Raw child views\n\t\tsub() {\n\t\t\treturn [] as readonly ($mol_view|Node|string|number|boolean)[]\n\t\t}\n\t\t\n\t\t/// Visible sub views with defined ambient context\n\t\t/// Render all by default\n\t\tsub_visible() {\n\t\t\treturn this.sub()\n\t\t}\n\t\t\n\t\t/// Minimal width that used for lazy rendering\n\t\t@ $mol_mem\n\t\tminimal_width() {\n\t\t\tconst sub = this.sub()\n\t\t\tif( !sub ) return 0\n\t\t\t\n\t\t\tlet min = 0\n\t\t\tsub.forEach( view => {\n\t\t\t\tif( view instanceof $mol_view ) {\n\t\t\t\t\tmin = Math.max( min , view.minimal_width() )\n\t\t\t\t}\n\t\t\t} )\n\t\t\t\n\t\t\treturn min\n\t\t}\n\t\t\n\t\tmaximal_width() {\n\t\t\treturn this.minimal_width()\n\t\t}\n\t\t\n\t\t/// Minimal height that used for lazy rendering\n\t\t@ $mol_mem\n\t\tminimal_height() {\n\t\t\t\n\t\t\tlet min = 0\n\t\t\ttry {\n\t\t\t\tfor( const view of this.sub() ) {\n\n\t\t\t\t\tif( view instanceof $mol_view ) {\n\t\t\t\t\t\tmin = Math.max( min , view.minimal_height() )\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t} \n\t\t\t} catch( error ) {\n\t\t\t\tif( 'then' in error ) $mol_fail_hidden( error )\n\t\t\t}\n\t\t\t\n\t\t\treturn min\n\t\t}\n\n\t\tstatic watchers = new Set< $mol_view >()\n\n\t\t@ $mol_mem\n\t\tview_rect() {\n\t\t\tif( $mol_atom2.current ) this.view_rect_watcher()\n\t\t\treturn this.view_rect_cache()\n\t\t}\n\n\t\t@ $mol_mem\n\t\tview_rect_cache( next = null as ClientRect | null ) {\n\t\t\treturn next\n\t\t}\n\n\t\t@ $mol_mem\n\t\tview_rect_watcher() {\n\t\t\t$mol_view.watchers.add( this )\n\t\t\treturn { destructor : ()=> $mol_view.watchers.delete( this ) }\n\t\t}\n\n\t\tdom_id() {\n\t\t\treturn this.toString()\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tdom_node( next? : Element ) {\n\t\t\t\n\t\t\tconst node = next || $mol_dom_context.document.createElementNS( this.dom_name_space() , this.dom_name() )\n\n\t\t\tconst id = this.dom_id()\n\t\t\tnode.setAttribute( 'id' , id )\n\t\t\tnode.toString = $mol_const( '<#' + id + '>' )\n\n\t\t\t$mol_dom_render_attributes( node , this.attr_static() )\n\t\t\t\n\t\t\tconst events = this.event()\n\t\t\tfor( let event_name in events ) {\n\t\t\t\tnode.addEventListener(\n\t\t\t\t\tevent_name ,\n\t\t\t\t\t$mol_fiber_root( events[ event_name ] ) ,\n\t\t\t\t\t{ passive : false } as any ,\n\t\t\t\t)\n\t\t\t}\n\n\t\t\treturn node\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tdom_tree( next? : Element ) : Element {\n\t\t\tconst node = this.dom_node( next )\n\t\t\t\n\t\t\ttry {\n\n\t\t\t\t$mol_dom_render_attributes( node , { mol_view_error : null } )\n\n\t\t\t\tthis.render()\n\n\t\t\t\tfor( let plugin of this.plugins() ) {\n\t\t\t\t\tif( plugin instanceof $mol_plugin ) {\n\t\t\t\t\t\tplugin.render()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} catch( error ) {\n\t\t\t\t\n\t\t\t\tconst need_catch = $mol_fail_catch( error )\n\n\t\t\t\tif( need_catch ) {\n\t\t\t\t\t$mol_dom_render_attributes( node , { mol_view_error : error.name || error.constructor.name } )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif( error instanceof Promise ) $mol_fail_hidden( error )\n\t\t\t\t\n\t\t\t\tif( need_catch ) {\n\t\t\t\t\ttry { void( ( node as HTMLElement ).innerText = error.message ) } catch( e ) {}\n\t\t\t\t\tconsole.error( error )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\treturn node\n\t\t}\n\n\t\t@ $mol_mem\n\t\tdom_node_actual() {\n\t\t\tconst node = this.dom_node()\n\n\t\t\tconst attr = this.attr()\n\t\t\tconst style = this.style()\n\t\t\tconst fields = this.field()\n\n\t\t\t$mol_dom_render_attributes( node , attr )\n\t\t\t$mol_dom_render_styles( node , style )\n\t\t\t$mol_dom_render_fields( node , fields )\n\n\t\t\treturn node\n\t\t}\n\n\t\trender() {\n\n\t\t\tconst node = this.dom_node_actual()\n\n\t\t\tconst sub = this.sub_visible()\n\t\t\t\n\t\t\tconst nodes = sub.map( child => {\n\t\t\t\tif( child == null ) return null\n\t\t\t\treturn ( child instanceof $mol_view ) ? child.dom_node_actual() : String( child )\n\t\t\t})\n\t\t\t\n\t\t\t$mol_dom_render_children( node , nodes )\n\n\t\t\tfor( const el of sub ) if( el && typeof el === 'object' && 'dom_tree' in el ) el['dom_tree']()\n\n\t\t}\n\n\t\t@ $mol_mem\n\t\tstatic view_classes() {\n\t\t\tconst proto = this.prototype\n\t\t\t\n\t\t\tlet current = proto\n\t\t\tconst classes = [] as ( typeof $mol_view )[]\n\t\t\t\n\t\t\twhile( current ) {\n\t\t\t\tclasses.push( current.constructor as typeof $mol_view )\n\t\t\t\tif(!( current instanceof $mol_view )) break\n\t\t\t\tcurrent = Object.getPrototypeOf( current )\n\t\t\t}\n\t\t\t\n\t\t\treturn classes\n\t\t}\n\t\t\n\t\tview_names_owned() {\n\t\t\tconst names = [] as string[]\n\t\t\tlet owner = $mol_owning_get( this , $mol_view )\n\n\t\t\tif( owner instanceof $mol_view ) {\n\n\t\t\t\tconst suffix = this[ $mol_object_field ]\n\t\t\t\tconst suffix2 = '_' + suffix[0].toLowerCase() + suffix.substring(1)\n\t\t\t\t\n\t\t\t\tfor( let Class of ( owner.constructor as typeof $mol_view ).view_classes() ) {\n\t\t\t\t\tif( suffix in Class.prototype ) names.push( $mol_func_name( Class ) + suffix2 )\n\t\t\t\t\telse break\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfor( let prefix of owner.view_names_owned() ) {\n\t\t\t\t\tnames.push( prefix + suffix2 )\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn names\n\t\t}\n\n\t\t@ $mol_mem\n\t\tview_names() {\n\t\t\tconst names = [] as string[]\n\t\t\t\n\t\t\tfor( let name of this.view_names_owned() ) {\n\t\t\t\tif( names.indexOf( name ) < 0 ) names.push( name )\n\t\t\t}\n\n\t\t\tfor( let Class of ( this.constructor as typeof $mol_view ).view_classes() ) {\n\t\t\t\tconst name = $mol_func_name( Class )\n\t\t\t\tif( !name ) continue\n\t\t\t\tif( names.indexOf( name ) < 0 ) names.push( name )\n\t\t\t}\n\n\t\t\treturn names\n\t\t}\n\t\t\n\t\tattr_static() : { [ key : string ] : string|number|boolean|null } {\n\t\t\tlet attrs : any = {}\n\t\t\t\n\t\t\tfor( let name of this.view_names() ) attrs[ name.replace( /\\$/g , '' ).replace( /^(?=\\d)/ , '_' ).toLowerCase() ] = ''\n\t\t\t\n\t\t\treturn attrs\n\t\t}\n\t\t\n\t\tattr() {\n\t\t\treturn {}\n\t\t}\n\t\t\n\t\tstyle() : { [ key : string ] : string|number } {\n\t\t\treturn {}\n\t\t}\n\t\t\n\t\tfield() : { [ key : string ] : any } {\n\t\t\treturn {}\n\t\t}\n\t\t\n\t\tevent() : { [ key : string ] : ( event : Event )=> void } {\n\t\t\treturn {}\n\t\t}\n\t\t\n\t\t@ $mol_deprecated( 'Use $mol_view::event instead.' )\n\t\tevent_async() : { [ key : string ] : ( event : Event )=> void } {\n\t\t\treturn {}\n\t\t}\n\t\t\n\t\tplugins() {\n\t\t\treturn [] as readonly $mol_view[]\n\t\t}\n\n\t\t[ $mol_dev_format_head ]() {\n\t\t\treturn $mol_dev_format_span( {} ,\n\t\t\t\t$mol_dev_format_native( this ) ,\n\t\t\t\t$mol_dev_format_shade( '/' ) ,\n\t\t\t\t$mol_dev_format_auto( $mol_mem_cached( ()=> this.sub() ) ) ,\n\t\t\t)\n\t\t}\n\n\t}\n\n\texport type $mol_view_all = $mol_type_pick< $mol_ambient_context , typeof $mol_view >\n\n}\n","namespace $ { $mol_style_attach( \"mol/view/view/view.css\",\n \"[mol_view] {\\n\\ttransition-property: background-color, height, width, min-height, min-width, max-width, max-height, transform;\\n\\ttransition-duration: .2s;\\n\\ttransition-timing-function: ease-out;\\n\\t-webkit-appearance: none;\\n\\tword-break: break-word;\\n\\tbox-sizing: border-box;\\n\\tdisplay: flex;\\n}\\n\\n[mol_view] > * {\\n\\tword-break: inherit;\\n}\\n\\n[mol_view_root] {\\n\\tmargin: 0;\\n\\tpadding: 0;\\n\\twidth: 100%;\\n\\theight: 100%;\\n\\tbox-sizing: border-box;\\n\\tfont: var(--mol_skin_font);\\n\\tbackground: var(--mol_theme_back);\\n\\tcolor: var(--mol_theme_text);\\n}\\n\\n[mol_view][mol_view_error]:not([mol_view_error=\\\"Promise\\\"]) {\\n\\tbackground-image: repeating-linear-gradient(\\n\\t\\t135deg,\\n\\t\\trgba(255,220,220,1),\\n\\t\\trgba(255,220,220,1) 11px,\\n\\t\\trgba(255,255,220,1) 10px,\\n\\t\\trgba(255,255,220,1) 20px\\n\\t);\\n\\tbackground-size: 28px 28px;\\n\\tcolor: black;\\n}\\n\\n@keyframes mol_view_wait_move {\\n\\tfrom {\\n\\t\\tbackground-position: 0 0;\\n\\t}\\n\\tto {\\n\\t\\tbackground-position: 200vmax 0;\\n\\t}\\n}\\n\\n@keyframes mol_view_wait_show {\\n\\tto {\\n\\t\\tbackground-image: repeating-linear-gradient(\\n\\t\\t\\t45deg,\\n\\t\\t\\thsla( 0 , 0% , 50% , .1 ) 0% ,\\n\\t\\t\\thsla( 0 , 0% , 50% , 0 ) 5% ,\\n\\t\\t\\thsla( 0 , 0% , 50% , 0 ) 45% ,\\n\\t\\t\\thsla( 0 , 0% , 50% , .1 ) 50% ,\\n\\t\\t\\thsla( 0 , 0% , 50% , 0 ) 55% ,\\n\\t\\t\\thsla( 0 , 0% , 50% , 0 ) 95% ,\\n\\t\\t\\thsla( 0 , 0% , 50% , .1 ) 100%\\n\\t\\t);\\n\\t\\tbackground-size: 200vmax 200vmax;\\n\\t}\\n}\\n\\n[mol_view][mol_view_error=\\\"Promise\\\"] {\\n\\tanimation: mol_view_wait_show .5s .5s linear forwards , mol_view_wait_move 1s linear infinite;\\n}\\n\"\n) }","namespace $ { export class $mol_view_tree_test_simple extends $mol_view {\n\n\t/**\n\t *  ```\n\t *  some 1\n\t *  ```\n\t **/\n\tsome() {\n\t\treturn 1\n\t}\n\n\t/**\n\t *  ```\n\t *  bool true\n\t *  ```\n\t **/\n\tbool() {\n\t\treturn true\n\t}\n\n\t/**\n\t *  ```\n\t *  str \\test\n\t *  ```\n\t **/\n\tstr() {\n\t\treturn \"test\"\n\t}\n\n\t/**\n\t *  ```\n\t *  arr /\n\t *  ```\n\t **/\n\tarr() {\n\t\treturn [  ] as readonly any[]\n\t}\n\n\t/**\n\t *  ```\n\t *  arr_string /string\n\t *  ```\n\t **/\n\tarr_string() {\n\t\treturn [  ] as readonly ( string )[]\n\t}\n\n} }\n\n","namespace $ { export class $mol_view_tree_test_binding_right extends $mol_view {\n\n\touter_width( v? : any ) {\n\t\treturn this.Test().width( v )\n\t}\n\n\t/**\n\t *  ```\n\t *  Test $mol_view_tree_test_binding_right_test width?v => outer_width?v\n\t *  ```\n\t **/\n\t@ $mol_mem\n\tTest() {\n\t\treturn (( obj )=>{\n\t\t\treturn obj\n\t\t})( new this.$.$mol_view_tree_test_binding_right_test(  ) )\n\t}\n\n} }\n\nnamespace $ { export class $mol_view_tree_test_binding_right_test extends $mol_view {\n\n\t/**\n\t *  ```\n\t *  width?val 0\n\t *  ```\n\t **/\n\t@ $mol_mem\n\twidth( val? : any , force? : $mol_mem_force ) {\n\t\treturn ( val !== void 0 ) ? val : 0\n\t}\n\n} }\n\n","namespace $ { export class $mol_view_tree_test_binding extends $mol_view {\n\n\t/**\n\t *  ```\n\t *  value?val <=> task_title_new?val\n\t *  ```\n\t **/\n\t@ $mol_mem\n\tvalue( val? : any , force? : $mol_mem_force ) {\n\t\treturn this.task_title_new( val )\n\t}\n\n\t/**\n\t *  ```\n\t *  task_title_new?val \\123\n\t *  ```\n\t **/\n\t@ $mol_mem\n\ttask_title_new( val? : any , force? : $mol_mem_force ) {\n\t\treturn ( val !== void 0 ) ? val : \"123\"\n\t}\n\n\t/**\n\t *  ```\n\t *  enabled <= head_complete_enabled\n\t *  ```\n\t **/\n\tenabled() {\n\t\treturn this.head_complete_enabled()\n\t}\n\n\t/**\n\t *  ```\n\t *  head_complete_enabled false\n\t *  ```\n\t **/\n\thead_complete_enabled() {\n\t\treturn false\n\t}\n\n} }\n\n","namespace $ { export class $mol_view_tree_test_attributes_super extends $mol_view {\n\n\t/**\n\t *  ```\n\t *  some *\n\t *  \ta 0\n\t *  \tb 2\n\t *  ```\n\t **/\n\tsome() {\n\t\treturn ({\n\t\t\t\"a\" :  0 ,\n\t\t\t\"b\" :  2 ,\n\t\t})\n\t}\n\n} }\n\nnamespace $ { export class $mol_view_tree_test_attributes extends $mol_view_tree_test_attributes_super {\n\n\t/**\n\t *  ```\n\t *  some *\n\t *  \t^\n\t *  \ta 1\n\t *  ```\n\t **/\n\tsome() {\n\t\treturn ({\n\t\t\t...super.some() ,\n\t\t\t\"a\" :  1 ,\n\t\t})\n\t}\n\n} }\n\n","namespace $ { export class $mol_view_tree_test_attributes_subcomponent extends $mol_view {\n\n\t/**\n\t *  ```\n\t *  Page!index $mol_view_tree_test_attributes_subcomponent_page Sub <= page!index\n\t *  ```\n\t **/\n\t@ $mol_mem_key\n\tPage( index : any ) {\n\t\treturn (( obj )=>{\n\t\t\tobj.Sub = () => this.page(index)\n\t\t\treturn obj\n\t\t})( new this.$.$mol_view_tree_test_attributes_subcomponent_page(  ) )\n\t}\n\n\t/**\n\t *  ```\n\t *  page!index null\n\t *  ```\n\t **/\n\tpage( index : any ) {\n\t\treturn null as any\n\t}\n\n} }\n\nnamespace $ { export class $mol_view_tree_test_attributes_subcomponent_page extends $mol_view {\n\n\t/**\n\t *  ```\n\t *  Sub null\n\t *  ```\n\t **/\n\tSub() {\n\t\treturn null as any\n\t}\n\n} }\n\n","namespace $ {\n\n\texport function $mol_view_tree_trim_remarks( def : $mol_tree ) {\n\t\treturn def.transform( ( [ node ] , sub )=> ( node.type === '-' ) ? null : node.clone({ sub : sub() }) )!\n\t}\n\n\texport function $mol_view_tree_classes( defs : $mol_tree ) {\n\t\treturn $mol_view_tree_trim_remarks( defs )\n\t}\n\n\texport function $mol_view_tree_class_name( val : $mol_tree ) {\n\t\treturn val.type\n\t}\n\n\texport function $mol_view_tree_super_name( val : $mol_tree ) {\n\t\tif( val.sub.length != 1 ) throw val.error( 'Wrong sub count' )\n\t\treturn val.sub[0].type\n\t}\n\n\texport function $mol_view_tree_class_props( def : $mol_tree ) {\n\t\tconst props : { [ key : string ] : $mol_tree } = {}\n\t\t\n\t\tconst catch_prop = ( prop : $mol_tree , type = '' )=> {\n\n\t\t\tlet def = prop\n\t\t\t\n\t\t\tif( type === '=>' ) {\n\t\t\t\tif( prop.sub[0] ) throw prop.error( 'Right binding can not have default value' )\n\t\t\t} else {\n\n\t\t\t\tif( prop.sub.length === 0 ) return\n\t\t\t\tif( prop.sub[0].type === '-' ) return\n\t\t\t\t\t\t\n\t\t\t\tprops[ prop.type ] = props[ prop.type ]\n\n\t\t\t\tdef = prop.clone({\n\t\t\t\t\tsub : [ prop.sub[0].transform( ( [ node , ... stack ] , sub )=> {\n\n\t\t\t\t\t\tif( [ '<=' , '<=>' , '=>' ].indexOf( node.type ) === -1 ) return node.clone({ sub : sub() })\n\t\t\t\t\t\t\n\t\t\t\t\t\tcatch_prop( node.sub[0] , node.type )\n\n\t\t\t\t\t\treturn node.clone({\n\t\t\t\t\t\t\tsub : [ node.sub[0].clone({\n\t\t\t\t\t\t\t\tsub : []\n\t\t\t\t\t\t\t}) ]\n\t\t\t\t\t\t})\n\t\t\t\t\t\t\n\t\t\t\t\t} )!]\n\t\t\t\t})\n\n\t\t\t}\n\n\t\t\tif( props[ prop.type ] ) {\n\t\t\t\tif( props[ prop.type ].toString() !== def.toString() ) {\n\t\t\t\t\tthrow def.error( 'Property already defined with another default value' + props[ prop.type ].error('').message + '\\n---' )\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprops[ prop.type ] = def\n\t\t\t}\n\t\t}\n\n\t\tdef.sub[0].sub.map( sub => catch_prop( sub ) )\n\t\t\n\t\treturn def.clone({\n\t\t\ttype : '' ,\n\t\t\tsub : Object.keys( props ).map( name => props[ name ] ) ,\n\t\t})\n\n\t}\n\n\texport function $mol_view_tree_prop_name( prop : $mol_tree ) {\n\t\treturn ( prop.type.match( /^\\w+/ ) || [] )[0] || ''\n\t}\n\n\texport function $mol_view_tree_prop_key( prop : $mol_tree ) {\n\t\treturn ( prop.type.match( /!(\\w+)$/ ) || [] )[1] || ''\n\t}\n\n\texport function $mol_view_tree_prop_next( prop : $mol_tree ) {\n\t\treturn ( prop.type.match( /\\?(\\w+)$/ ) || [] )[1] || ''\n\t}\n\n\texport function $mol_view_tree_prop_value( prop : $mol_tree ) {\n\t\tif( prop.sub.length != 1 ) throw prop.error( `Wrong sub count (${ prop.sub.length })` )\n\t\treturn prop.sub[0]\n\t}\n\n\texport function $mol_view_tree_value_type( val : $mol_tree ) {\n\t\t\n\t\tswitch( val.type ) {\n\t\t\tcase 'true' : return 'bool'\n\t\t\tcase 'false' : return 'bool'\n\t\t\tcase 'null' : return 'null'\n\t\t\tcase '*' : return 'dict'\n\t\t\tcase '@' : return 'locale'\n\t\t\tcase '' : return 'string'\n\t\t\tcase '<=' : return 'get'\n\t\t\tcase '<=>' : return 'bind'\n\t\t\tcase '=>' : return 'put'\n\t\t}\n\n\t\tswitch( val.type[0] ) {\n\t\t\tcase '/' : return 'list'\n\t\t\tcase '$' : return 'object'\n\t\t}\n\n\t\tif( Number( val.type ).toString() == val.type ) return 'number'\n\n\t\tthrow val.error( 'Wrong value' )\n\t}\n\n\texport function $mol_view_tree_compile( tree : $mol_tree) {\n\t\tconst splittedUri = tree.uri.split(/[#\\\\\\/]/);\n\t\tsplittedUri.pop();\n\t\tconst fileName = splittedUri.pop()!;\n\n\t\t// const SourceNode = $node['source-map'].SourceNode\n\t\t// type SourceNode = InstanceType< typeof SourceNode >\n\t\tconst SourceNode = ( row : number , col : number , fileName : string , text : string ) => text\n\t\ttype StringNodeArray = string[] //(string | SourceNode)[];\n\t\t\n\t\tvar content: StringNodeArray = []\n\t\tvar locales : { [ key : string ] : string } = {}\n\t\t\n\t\tfor( let def of $mol_view_tree_classes( tree ).sub ) {\n\t\t\tif( !/^\\$\\w+$/.test( def.type ) ) throw def.error( 'Wrong component name' )\n\t\t\t\n\t\t\tvar parent = def.sub[0]\n\t\t\t\n\t\t\tvar propDefs : { [ key : string ] : $mol_tree } = {}\n\t\t\tvar members : { [ key : string ] : StringNodeArray } = {}\n\t\t\t\n\t\t\tfor( let param of $mol_view_tree_class_props( def ).sub ) { try {\n\t\t\t\tvar needSet = false\n\t\t\t\tvar needReturn = true\n\t\t\t\tvar needCache = false\n\t\n\t\t\t\tif( param.type === '<=>' ) {\n\t\t\t\t\tparam = param.sub[0]\n\t\t\t\t}\n\t\n\t\t\t\tif( param.type === '<=' ) {\n\t\t\t\t\tparam = param.sub[0]\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar propName = /(.*?)(?:\\!(\\w+))?(?:\\?(\\w+))?$/.exec( param.type )!\n\t\t\t\t\n\t\t\t\tif( propName[3] ) {\n\t\t\t\t\tneedSet = true\n\t\t\t\t\tneedCache = true\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconst getValue = ( value : $mol_tree , definition? : boolean ) : StringNodeArray | null=> { try {\n\t\t\t\t\tswitch( true ) {\n\t\t\t\t\t\tcase( value.type === '' ) :\n\t\t\t\t\t\t\treturn [JSON.stringify( value.value )]\n\t\t\t\t\t\tcase( value.type === '@' ) :\n\t\t\t\t\t\t\tconst key = `${ def.type }_${ param.type.replace( /[?!].*/ , '' ) }`\n\t\t\t\t\t\t\tlocales[ key ] = value.value\n\t\t\t\t\t\t\treturn [`this.$.$mol_locale.text( ${ JSON.stringify( key ) } )`]\n\t\t\t\t\t\tcase( value.type === '-' ) :\n\t\t\t\t\t\t\treturn null\n\t\t\t\t\t\tcase( value.type[0] === '/' ) :\n\t\t\t\t\t\t\tconst item_type = value.type.substring( 1 )\n\t\t\t\t\t\t\tvar items : StringNodeArray = []\n\t\t\t\t\t\t\tvalue.sub.forEach( item => {\n\t\t\t\t\t\t\t\tif( item.type === '-' ) return\n\t\t\t\t\t\t\t\tif( item.type === '^' ) {\n\t\t\t\t\t\t\t\t\titems.push( `...super.${ param.type }()` )\n\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvar val = getValue( item )\n\t\t\t\t\t\t\t\tif( val ) items.push( val.join(\"\") )\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\treturn [`[`, items.join(' , '),  `]` , ( item_type ? ` as readonly ( ${ item_type } )[]` : ` as readonly any[]` )]\n\t\t\t\t\t\tcase( value.type[0] === '$' ) :\n\t\t\t\t\t\t\tif( !definition ) throw value.error( 'Objects should be bound' )\n\t\t\t\t\t\t\tneedCache = true\n\t\t\t\t\t\t\tvar overs : StringNodeArray = []\n\t\t\t\t\t\t\tvalue.sub.forEach( over => {\n\t\t\t\t\t\t\t\tif( /^[-\\/]?$/.test( over.type ) ) return ''\n\t\t\t\t\t\t\t\tvar overName = /(.*?)(?:\\!(\\w+))?(?:\\?(\\w+))?$/.exec( over.type )!\n\t\t\t\t\t\t\t\tvar ns = needSet\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif( over.sub[0].type === '=>' ) {\n\t\t\t\t\t\t\t\t\tif( over.sub[0].sub.length === 1 ) {\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tconst [ , own_name , own_key , own_next ] = /(.*?)(?:\\!(\\w+))?(?:\\?(\\w+))?$/.exec( over.sub[0].sub[0].type )!\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tlet own_args : string[] = []\n\t\t\t\t\t\t\t\t\t\tif( own_key ) own_args.push( ` ${own_key} : any ` )\n\t\t\t\t\t\t\t\t\t\tif( own_next ) own_args.push( ` ${own_next}? : any ` )\n\n\t\t\t\t\t\t\t\t\t\tlet [ , their_name , ... their_args ] = /(.*?)(?:\\!(\\w+))?(?:\\?(\\w+))?$/.exec( over.type )!\n\t\t\t\t\t\t\t\t\t\ttheir_args = their_args.filter( Boolean )\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tmembers[ own_name ] = [`\\t${ own_name }(${ own_args.join(',') }) {\\n\\t\\treturn this.${ propName[1] }(${ propName[2] || '' }).${ their_name }( ${ their_args.join(' , ') } )\\n\\t}\\n\\n`]\n\t\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvar v = getValue( over.sub[0] )\n\t\t\t\t\t\t\t\tlet args : string[] = []\n\t\t\t\t\t\t\t\tif( overName[2] ) args.push( ` ${ overName[2] } : any ` )\n\t\t\t\t\t\t\t\tif( overName[3] ) args.push( ` ${ overName[3] }? : any ` )\n\t\t\t\t\t\t\t\tovers.push( ...['\\t\\t\\tobj.' , SourceNode(over.row, over.col, fileName, overName[1]), ' = (', args.join( ',' ), ') => ' , ...(v || []) , '\\n'] )\n\t\t\t\t\t\t\t\tneedSet = ns\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\tconst object_args = value.select( '/' , '' ).sub.map( arg => getValue( arg ) ).join( ' , ' ) as string\n\t\t\t\t\t\t\treturn ['(( obj )=>{\\n', ...overs, '\\t\\t\\treturn obj\\n\\t\\t})( new this.$.', SourceNode(value.row, value.col, fileName, value.type) , '( ' , object_args , ' ) )']\n\t\t\t\t\t\tcase( value.type === '*' ) :\n\t\t\t\t\t\t\t//needReturn = false\n\t\t\t\t\t\t\tvar opts : StringNodeArray = []\n\t\t\t\t\t\t\tvalue.sub.forEach( opt => {\n\t\t\t\t\t\t\t\tif( opt.type === '-' ) return ''\n\t\t\t\t\t\t\t\tif( opt.type === '^' ) {\n\t\t\t\t\t\t\t\t\topts.push( `\\t\\t\\t...super.${ param.type }() ,\\n` )\n\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvar key = /(.*?)(?:\\?(\\w+))?$/.exec( opt.type )!\n\t\t\t\t\t\t\t\tvar ns = needSet\n\t\t\t\t\t\t\t\tvar v = getValue( opt.sub[0] )\n\t\t\t\t\t\t\t\tvar arg = key[2] ? ` ( ${ key[2] }? : any )=> ` : ''\n\t\t\t\t\t\t\t\topts.push( ...['\\t\\t\\t\"', SourceNode(opt.row, opt.col, fileName, key[1]+ '\" : '), arg,' ', ...(v || []) , ' ,\\n'] )\n\t\t\t\t\t\t\t\tneedSet = ns\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\treturn ['({\\n', opts.join( '' ), '\\t\\t})']\n\t\t\t\t\t\tcase( value.type === '<=>' ) :\n\t\t\t\t\t\t\tneedSet = true\n\t\t\t\t\t\t\tif( value.sub.length === 1 ) {\n\t\t\t\t\t\t\t\tvar type = /(.*?)(?:\\!(\\w+))?(?:\\?(\\w+))$/.exec( value.sub[0].type )!\n\t\t\t\t\t\t\t\treturn ['this.' + type[1] + '(' + ( type[2] ? type[2] + ' ,' : '' ) + ' ' + type[3] + ' )']\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tcase( value.type === '<=' ) :\n\t\t\t\t\t\t\tif( value.sub.length === 1 ) {\n\t\t\t\t\t\t\t\tvar type = /(.*?)(?:\\!(\\w+))?(?:\\?(\\w+))?$/.exec( value.sub[0].type )!\n\t\t\t\t\t\t\t\treturn ['this.' + type[1] + '(' + (  type[2] ? type[2] : '' ) + ')']\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tswitch( value.type ) {\n\t\t\t\t\t\tcase 'true' :\n\t\t\t\t\t\tcase 'false' :\n\t\t\t\t\t\t\treturn [value.type]\n\t\t\t\t\t\tcase 'null' :\n\t\t\t\t\t\t\treturn ['null as any']\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif( Number( value.type ).toString() == value.type ) return [value.type]\n\t\t\t\t\t\n\t\t\t\t\tthrow value.error( 'Wrong value' )\n\t\t\t\t} catch ( err ) {\n\t\t\t\t\t// err.message += `\\n${value.baseUri}:${value.row}:${value.col}\\n${ value }`\n\t\t\t\t\tthrow err\n\t\t\t\t} }\n\t\t\t\t\n\t\t\t\tif( param.sub.length > 1 ) throw new Error( 'Too more sub' )\n\t\t\t\tparam.sub.forEach( child => {\n\t\t\t\t\tvar val = getValue( child , true )\n\t\t\t\t\tif( !val ) return\n\t\t\t\t\t\n\t\t\t\t\tpropDefs[ propName[1] ] = param\n\t\t\t\t\t\n\t\t\t\t\tvar args : string[] = []\n\t\t\t\t\tif( propName[2] ) args.push( ` ${ propName[2] } : any ` )\n\t\t\t\t\tif( propName[3] ) args.push( ` ${ propName[3] }? : any , force? : $${''}mol_mem_force ` )\n\t\t\t\t\tif( needSet && param.sub[0].type !== '<=>' ) val = [( needReturn ? `( ${ propName[3] } !== void 0 ) ? ${ propName[3] } : ` : `if( ${ propName[3] } !== void 0 ) return ${ propName[3] }\\n\\t\\t` ) , ...val]\n\t\t\t\t\tif( needReturn ) val = ['return ', ...val]\n\t\t\t\t\tvar decl: StringNodeArray = ['\\t', SourceNode(param.row, param.col, fileName, propName[1]),'(', args.join(',') , ') {\\n\\t\\t' , ...val , '\\n\\t}\\n\\n']\n\t\t\t\t\tif( needCache ) {\n\t\t\t\t\t\tif( propName[2] ) decl = ['\\t@ $' , 'mol_mem_key\\n', ...decl]\n\t\t\t\t\t\telse decl = ['\\t@ $', 'mol_mem\\n', ...decl]\n\t\t\t\t\t}\n\t\t\t\t\tdecl = ['\\t/**\\n\\t *  ```\\n', param.toString().trim().replace( /^/mg , '\\t *  ' ),  '\\n\\t *  ```\\n\\t **/\\n' , ...decl]\n\t\t\t\t\tmembers[ propName[1] ] = decl\n\t\t\t\t} )\n\t\t\t\t\n\t\t\t} catch ( err ) {\n\t\t\t\t// err.message += `\\n${param.baseUri}:${param.row}:${param.col}\\n${ param }`\n\t\t\t\tthrow err\n\t\t\t} }\n\n\t\t\tvar body = Object.keys( members ).reduce( function( acc, name ) {\n\t\t\t\tconst items = members[ name ] ? members[name] : ['\\t' , name ,'() { return null as any }\\n\\t}\\n']\n\t\t\t\treturn [...acc, ...items]\n\t\t\t}, [] as StringNodeArray)\n\t\t\tvar classes: StringNodeArray = [ 'namespace $ { export class ', SourceNode(def.row, def.col, fileName, def.type ), ' extends ', SourceNode(parent.row, parent.col, fileName, parent.type), ' {\\n\\n', ...body, '} }\\n'] \n\t\t\t\n\t\t\tcontent = [...content, ...classes]\n\t\t}\n\n\t\treturn { script : content.join('') , locales }\n\n\t\t// splittedUri.push(`-view.tree`,`${ fileName }.map`)\n\n\t\t// const node = SourceNode(null as any, null as any, fileName, content as any);\n\t\t// node.add(`//@ sourceMappingURL=${splittedUri.join($node.path.sep)}`);\n\t\t// const codeWithSourceMap= node.toStringWithSourceMap();\n\t\t// return { script : codeWithSourceMap.code, locales : locales, map: codeWithSourceMap.map.toString() }\n\t}\n\n}\n","namespace $ {\n\t\n\texport class $mol_graph< Node , Edge > {\n\t\t\n\t\tnodes : { [ id : string ] : Node | undefined } = {}\n\t\t\n\t\tedgesOut : { [ from : string ] : { [ to : string ] : Edge } } = {}\n\t\tedgesIn : { [ to : string ] : { [ from : string ] : Edge } } = {}\n\t\t\n\t\tnodeEnsure( id : string ) {\n\t\t\tif( this.nodes.hasOwnProperty( id ) ) return\n\t\t\tthis.nodes[ id ] = undefined\n\t\t}\n\t\t\n\t\tlinkOut( from : string , to : string , edge : Edge ) {\n\t\t\tif( !this.edgesOut[ from ] ) {\n\t\t\t\tthis.edgesOut[ from ] = {}\n\t\t\t\tthis.nodeEnsure( from )\n\t\t\t}\n\t\t\tthis.edgesOut[ from ][ to ] = edge\n\t\t\tthis.nodeEnsure( to )\n\t\t}\n\t\t\n\t\tlinkIn( to : string , from : string , edge : Edge ) {\n\t\t\tif( !this.edgesIn[ to ] ) {\n\t\t\t\tthis.edgesIn[ to ] = {}\n\t\t\t\tthis.nodeEnsure( to )\n\t\t\t}\n\t\t\tthis.edgesIn[ to ][ from ] = edge\n\t\t\tthis.nodeEnsure( from )\n\t\t}\n\t\t\n\t\tedgeOut( from : string , to : string ) {\n\t\t\treturn this.edgesOut[ from ] && this.edgesOut[ from ][ to ]\n\t\t}\n\t\t\n\t\tedgeIn( to : string , from : string ) {\n\t\t\treturn this.edgesIn[ to ] && this.edgesIn[ to ][ from ]\n\t\t}\n\t\t\n\t\tlink( from : string , to : string , edge : Edge ) {\n\t\t\tthis.linkOut( from , to , edge )\n\t\t\tthis.linkIn( to , from , edge )\n\t\t}\n\t\t\n\t\tunlink( from : string , to : string ) {\n\t\t\tdelete this.edgesIn[ to ][ from ]\n\t\t\tdelete this.edgesOut[ from ][ to ]\n\t\t}\n\t\t\n\t\tcut_cycles( get_weight : ( edge : Edge )=> number ) {\n\t\t\t\n\t\t\tconst checked = [] as string[]\n\t\t\t\n\t\t\tfor( const start in this.nodes ) {\n\t\t\t\t\n\t\t\t\tconst path = [] as string[]\n\t\t\t\t\n\t\t\t\tconst visit = ( from : string ) : number => {\n\n\t\t\t\t\tif( checked.includes( from ) ) return Number.POSITIVE_INFINITY\n\n\t\t\t\t\tconst index = path.lastIndexOf( from )\n\t\t\t\t\tif( index > -1 ) {\n\n\t\t\t\t\t\tconst cycle = path.slice( index )\n\n\t\t\t\t\t\treturn cycle.reduce(\n\t\t\t\t\t\t\t( weight , id , index )=> Math.min(\n\t\t\t\t\t\t\t\tweight ,\n\t\t\t\t\t\t\t\tget_weight( this.edgesOut[ id ][ cycle[ ( index + 1 ) % cycle.length ] ] ) ,\n\t\t\t\t\t\t\t) ,\n\t\t\t\t\t\t\tNumber.POSITIVE_INFINITY ,\n\t\t\t\t\t\t)\n\n\t\t\t\t\t}\n\n\t\t\t\t\tpath.push( from )\n\n\t\t\t\t\ttry {\n\n\t\t\t\t\t\tconst deps = this.edgesOut[ from ]\n\t\t\t\t\t\tfor( const to in deps ) {\n\n\t\t\t\t\t\t\tif( to === from ) {\n\t\t\t\t\t\t\t\tthis.unlink( from , to )\n\t\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst weight_out = get_weight( deps[ to ] )\n\t\t\t\t\t\t\tconst min = visit( to )\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif( weight_out > min ) return min\n\t\t\t\t\t\t\tif( weight_out === min ) this.unlink( from , to )\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tpath.pop()\n\t\t\t\t\t}\n\n\t\t\t\t\tchecked.push( from )\n\n\t\t\t\t\treturn Number.POSITIVE_INFINITY\n\t\t\t\t}\n\n\t\t\t\tvisit( start )\n\n\t\t\t}\n\n\t\t}\n\t\t\n\t\tget sorted() {\n\n\t\t\tconst sorted : string[] = []\n\t\t\t\n\t\t\tconst visit = ( id : string ) => {\n\t\t\t\t\n\t\t\t\tif( sorted.indexOf( id ) !== -1 ) return\n\n\t\t\t\tfor( const dep in this.edgesOut[ id ] ) visit( dep )\n\n\t\t\t\tif( sorted.indexOf( id ) !== -1 ) return\n\n\t\t\t\tsorted.push( id )\n\n\t\t\t}\n\t\t\t\n\t\t\tObject.keys( this.nodes ).forEach( id => visit( id ) )\n\t\t\t\n\t\t\treturn sorted\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\tconst sourcemap_codec = $node['sourcemap-codec']\n\tconst path = $node.path\n\n\ttype SourceMapLine = ReturnType<typeof sourcemap_codec.decode>[0]\n\ttype SourceMapSegment = SourceMapLine[0]\n\n\texport interface $mol_sourcemap_raw {\n\t\tversion: number\n\t\tsources: string[]\n\t\tnames: string[]\n\t\tsourceRoot?: string\n\t\tsourcesContent?: (string|null)[]\n\t\tmappings: string\n\t\tfile: string\n\t}\n\n\texport class $mol_sourcemap_builder {\n\t\tversion: number = 3\n\n\t\tprotected sourceRoot: string\n\n\t\tprotected separator_count: number\n\n\t\tconstructor( readonly file: string, readonly separator = '' ) {\n\t\t\tconst dir = path.dirname(file)\n\t\t\tthis.sourceRoot = dir && dir !== '.' ? (dir + '/') : ''\n\t\t\tthis.separator += '\\n'\n\t\t\tthis.separator_count = separator.split('\\n').length - 2\n\t\t}\n\n\t\tprotected chunks: string[] = []\n\t\tprotected segment_lines: SourceMapLine[] = []\n\t\t\n\t\tprotected sources: string[] = []\n\t\tprotected source_indexes: Map<string, number> = new Map()\n\n\t\tprotected names: string[] = []\n\t\tprotected name_indexes: Map<string, number> = new Map()\n\t\tprotected sourceContent: (null|string)[] = []\n\n\t\tget content() {\n\t\t\treturn this.chunks.join('')\n\t\t}\n\n\t\tget sourcemap(): $mol_sourcemap_raw {\n\t\t\treturn {\n\t\t\t\tversion: this.version,\n\t\t\t\tsources: this.sources,\n\t\t\t\tnames: this.names,\n\t\t\t\tsourceRoot: this.sourceRoot || undefined,\n\t\t\t\tmappings: sourcemap_codec.encode(this.segment_lines),\n\t\t\t\tfile: this.file,\n\t\t\t\tsourcesContent: this.sourceContent,\n\t\t\t}\n\t\t}\n\n\t\ttoJSON() {\n\t\t\treturn this.sourcemap\n\t\t}\n\n\t\ttoString() {\n\t\t\treturn JSON.stringify(this.toJSON())\n\t\t}\n\n\t\tprotected add_chunk(content: string) {\n\t\t\tconst {segment_lines, chunks, separator_count} = this\n\t\t\tif (chunks.length !== 0) {\n\t\t\t\tchunks.push(this.separator)\n\t\t\t\tfor (let i = 0; i < separator_count; i++) segment_lines.push([])\t\n\t\t\t}\n\t\t\tchunks.push(content)\n\t\t}\n\n\t\tprotected add_content(content: string, file?: string) {\n\t\t\tconst {source_indexes, sources, segment_lines} = this\n\t\t\tthis.add_chunk(content)\n\t\t\tlet sourceIndex: number | undefined\n\t\t\tif (file) {\n\t\t\t\tsourceIndex = source_indexes.get(file)\n\t\t\t\tif (sourceIndex === undefined) {\n\t\t\t\t\tsourceIndex = sources.length\n\t\t\t\t\tsources.push(file)\n\t\t\t\t\tsource_indexes.set(file, sourceIndex)\n\t\t\t\t\tthis.sourceContent.push(null)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst linesCount = content.split('\\n').length\n\t\t\tfor (let originalLine = 0; originalLine < linesCount; originalLine++) {\n\t\t\t\tif (!file) segment_lines.push([])\n\t\t\t\telse segment_lines.push([\n\t\t\t\t\t[\n\t\t\t\t\t\t0,\n\t\t\t\t\t\tsourceIndex,\n\t\t\t\t\t\toriginalLine,\n\t\t\t\t\t\t0,\n\t\t\t\t\t] as SourceMapSegment\n\t\t\t\t] as SourceMapLine)\n\t\t\t}\n\t\t}\n\n\t\tadd(content: string, file?: string, raw?: $mol_sourcemap_raw | string) {\n\t\t\tconst {name_indexes, names, source_indexes, sources, segment_lines} = this\n\t\t\tconst bundleSourceRoot = this.sourceRoot\n\t\t\tif (!content) throw new Error(`No content: ${file}, ${raw}`)\n\t\t\tif (typeof raw === 'string') raw = JSON.parse(raw) as $mol_sourcemap_raw\n\t\t\tif (!raw || !raw.mappings || raw.mappings.length === 0) {\n\t\t\t\tthis.add_content(content, file)\n\t\t\t\treturn\n\t\t\t}\n\t\t\tthis.add_chunk(content)\n\n\t\t\tlet sourceRoot = file ? path.dirname(file) : (raw.sourceRoot || '')\n\t\t\tif (sourceRoot === '.') sourceRoot = ''\n\t\t\telse if (sourceRoot) sourceRoot += '/'\n\t\t\tconst lines = sourcemap_codec.decode(raw.mappings)\n\t\t\tfor (let line of lines) {\n\t\t\t\tconst mergedLine: SourceMapLine = []\n\t\t\t\tfor (let segment of line) {\n\t\t\t\t\tconst mergedSegment: SourceMapSegment = [segment[0]] // generatedColumn\n\n\t\t\t\t\tif (segment.length >= 2) {\n\t\t\t\t\t\tconst sourceIndex = segment[1]!\n\t\t\t\t\t\tconst source = bundleSourceRoot + sourceRoot + raw.sources[sourceIndex]\n\t\t\t\t\t\tlet mergedSourceIndex = source_indexes.get(source)\n\t\t\t\t\t\tif (mergedSourceIndex === undefined) {\n\t\t\t\t\t\t\tmergedSourceIndex = sources.length\n\t\t\t\t\t\t\tsource_indexes.set(source, mergedSourceIndex)\n\t\t\t\t\t\t\tsources.push(source)\n\t\t\t\t\t\t\tif (raw.sourcesContent)\n\t\t\t\t\t\t\t\tthis.sourceContent.push(raw.sourcesContent[sourceIndex])\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmergedSegment.push(mergedSourceIndex)\n\t\t\t\t\t}\n\n\t\t\t\t\tif (segment.length >= 3) mergedSegment.push(segment[2]!) // originalLine\n\n\t\t\t\t\tif (segment.length >= 4) mergedSegment.push(segment[3]!) // originalColumn\n\n\t\t\t\t\tif (segment.length >= 5) {\n\t\t\t\t\t\tconst nameIndex = segment[4]!\n\t\t\t\t\t\tconst name = raw.names[nameIndex]\n\t\t\t\t\t\tlet mergedNameIndex = name_indexes.get(name)\n\t\t\t\t\t\tif (mergedNameIndex === undefined) {\n\t\t\t\t\t\t\tmergedNameIndex = names.length\n\t\t\t\t\t\t\tname_indexes.set(name, mergedNameIndex)\n\t\t\t\t\t\t\tnames.push(name)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmergedSegment.push(mergedNameIndex)\n\t\t\t\t\t}\n\n\t\t\t\t\tmergedLine.push(mergedSegment)\n\t\t\t\t}\n\t\t\t\tsegment_lines.push(mergedLine)\n\t\t\t}\n\n\t\t\tconst lineCount = content.split('\\n').length\n\t\t\tfor (let i = lines.length; i < lineCount; i++) segment_lines.push([])\n\t\t}\n\t}\n}\n","namespace $ {\n\texport function $mol_base64_encode(src: string | Uint8Array): string {\n\t\tthrow new Error('Not implemented')\n\t}\n}\n","namespace $ {\n\n\texport function $mol_base64_encode_node(str: string | Uint8Array): string {\n\t\tif (! str) return ''\n\t\tif (Buffer.isBuffer(str)) return str.toString('base64')\n\n\t\treturn Buffer.from(str).toString('base64')\n\t}\n\n\t$.$mol_base64_encode = $mol_base64_encode_node\n}\n","namespace $ {\n\n\texport function $mol_diff_path< Item >( ... paths : Item[][] ) {\n\n\t\tconst limit = Math.min( ... paths.map( path => path.length ) )\n\n\t\tlookup: for( var i = 0 ; i < limit ; ++i ) {\n\n\t\t\tconst first = paths[0][i]\n\n\t\t\tfor( let j = 1 ; j < paths.length ; ++j ) {\n\t\t\t\tif( paths[j][i] !== first ) break lookup\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\tprefix : paths[0].slice( 0 , i ) ,\n\t\t\tsuffix : paths.map( path => path.slice( i ) ) ,\n\t\t}\n\n\t}\n\n}\n","namespace $ {\n\n\texport class $mol_error_mix extends Error {\n\n\t\terrors : Error[]\n\n\t\tconstructor( message : string , ... errors : Error[] ) {\n\n\t\t\tsuper( message )\n\t\t\t\n\t\t\tthis.errors = errors\n\n\t\t\tif( errors.length ) {\n\n\t\t\t\tconst stacks = [ ... errors.map( error => error.message ) , this.stack ]\n\t\t\t\t\n\t\t\t\tconst diff = $mol_diff_path( ... stacks.map( stack => {\n\t\t\t\t\tif( !stack ) return []\n\t\t\t\t\treturn stack.split( '\\n' ).reverse()\n\t\t\t\t} ) )\n\t\t\t\t\n\t\t\t\tconst head = diff.prefix.reverse().join( '\\n' )\n\t\t\t\tconst tails = diff.suffix.map( path => path.reverse().map( line => line.replace( /^(?!\\s+at)/ , '\\tat (.) ' ) ).join( '\\n' ) ).join( '\\n\\tat (.) -----\\n' )\n\n\t\t\t\tthis.stack = `Error: ${ this.constructor.name }\\n\\tat (.) /\"\"\"\\\\\\n${ tails }\\n\\tat (.) \\\\___/\\n${ head }`\n\t\t\t\tthis.message += errors.map( error => '\\n' + error.message ).join( '' )\n\n\t\t\t}\n\n\t\t}\n\n\t\ttoJSON() {\n\t\t\treturn this.message\n\t\t}\n\n\t}\n\n}\n","namespace $ {\n\t\n\texport function $mol_build_start(\n\t\tthis: $mol_ambient_context,\n\t\tpaths : string[],\n\t) {\n\t\tvar build = $mol_build.relative( '.' )\n\t\tif( paths.length > 0 ) {\n\t\t\ttry {\n\t\t\t\tprocess.argv.slice( 2 ).forEach(\n\t\t\t\t\t( path : string )=> {\n\t\t\t\t\t\tpath = build.root().resolve( path ).path()\n\t\t\t\t\t\treturn build.bundleAll( { path } )\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\tprocess.exit(0)\n\t\t\t} catch(error) {\n\t\t\t\tthis.$mol_log3_fail({\n\t\t\t\t\tplace: '$mol_build_start' , \n\t\t\t\t\tmessage: error.message,\n\t\t\t\t})\n\t\t\t\tprocess.exit(1)\n\t\t\t}\n\t\t} else {\n\t\t\t$mol_atom2_autorun(() => build.server().start() )\n\t\t}\n\t}\n\t\n\tsetTimeout( $mol_fiber_root( ()=> $mol_ambient({}).$mol_build_start( process.argv.slice( 2 ) ) as any ) )\n\n\texport class $mol_build extends $mol_object {\n\t\t\n\t\t@ $mol_mem_key\n\t\tstatic root( path : string ) {\n\t\t\treturn this.make({\n\t\t\t\troot : $mol_const( $mol_file.absolute( path ) ) ,\n\t\t\t})\n\t\t}\n\t\t\n\t\tstatic relative( path : string ) {\n\t\t\treturn $mol_build.root( $mol_file.relative( path ).path() )\n\t\t}\n\n\t\t@ $mol_mem\n\t\tserver() {\n\t\t\treturn $mol_build_server.make({\n\t\t\t\tbuild : $mol_const( this ) ,\n\t\t\t})\n\t\t}\n\t\t\n\t\troot() {\n\t\t\treturn $mol_file.relative( '.' )\n\t\t}\n\n\t\t@ $mol_mem_key\n\t\tmetaTreeTranspile( path : string ) {\n\t\t\n\t\t\tconst file = $mol_file.absolute( path )\n\t\t\tconst name = file.name()\n\t\t\t\n\t\t\tconst tree = $mol_tree.fromString( file.text() , file.path() )\n\n\t\t\tlet content = ''\n\t\t\tfor( const step of tree.select( 'build' , '' ).sub ) {\n\n\t\t\t\tconst res = this.$.$mol_exec( file.parent().path() , step.value ).stdout.toString().trim()\n\t\t\t\tif( step.type ) content += `let ${ step.type } = ${ JSON.stringify( res ) }`\n\n\t\t\t}\n\n\t\t\tif( !content ) return []\n\n\t\t\tconst script = file.parent().resolve( `-meta.tree/${ name }.ts` )\n\t\t\tscript.text( content )\n\t\t\treturn [ script ]\n\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tviewTreeTranspile( path : string ) {\n\n\t\t\tconst file = $mol_file.absolute( path )\n\t\t\tconst name = file.name()\n\n\t\t\tconst script = file.parent().resolve( `-view.tree/${ name }.ts` )\n\t\t\tconst sourceMap = file.parent().resolve( `-view.tree/${ name }.map` )\n\t\t\tconst locale = file.parent().resolve( `-view.tree/${ name }.locale=en.json` )\n\t\t\t\n\t\t\tconst tree = $mol_tree.fromString( file.text() , file.path() )\n\t\t\tconst res = $mol_view_tree_compile( tree )\n\n\t\t\tscript.text( res.script )\n\t\t\t// sourceMap.text( res.map )\n\t\t\tlocale.text( JSON.stringify( res.locales , null , '\\t' ) )\n\t\t\t\t\n\t\t\treturn [ script , locale ]\n\t\t}\n\n\t\t@ $mol_mem_key\n\t\tcssTranspile( path : string ) {\n\n\t\t\tconst file = $mol_file.absolute( path )\n\t\t\tconst name = file.name()\n\t\t\tconst script = file.parent().resolve( `-css/${ name }.ts` )\n\t\t\t\t\t\t\n\t\t\tconst id = file.relate( this.root() )\n\t\t\tconst styles = file.text()\n\t\t\tconst code = 'namespace $ { $'+`mol_style_attach( ${ JSON.stringify( id ) },\\n ${ JSON.stringify( styles ) }\\n) }`\n\t\t\tscript.text( code )\n\t\t\t\n\t\t\treturn [ script ]\n\t\t}\n\n\t\t@ $mol_mem_key\n\t\tmods( { path , exclude } : { path : string , exclude? : string[] } ) {\n\n\t\t\tconst parent = $mol_file.absolute( path )\n\t\t\tconst mods : $mol_file[] = []\n\t\t\t\n\t\t\tparent.sub().forEach(\n\t\t\t\tchild => {\n\t\t\t\t\t\n\t\t\t\t\tconst name = child.name()\n\n\t\t\t\t\tif( !/^[a-z0-9]/i.test( name ) ) return false\n\t\t\t\t\tif( exclude && RegExp( '[.=](' + exclude.join( '|' ) + ')[.]' , 'i' ).test( name ) ) return false\n\n\t\t\t\t\t// if (! child.exists()) return false\n\t\t\t\t\t\n\t\t\t\t\tif( /(meta\\.tree)$/.test( name ) ) {\n\t\t\t\t\t\tmods.push( ... this.metaTreeTranspile( child.path() ) )\n\t\t\t\t\t} else if( /(view\\.tree)$/.test( name ) ) {\n\t\t\t\t\t\tmods.push( ... this.viewTreeTranspile( child.path() ) )\n\t\t\t\t\t} else if( /(\\.css)$/.test( name ) ) {\n\t\t\t\t\t\tmods.push( ... this.cssTranspile( child.path() ) )\n\t\t\t\t\t}\n\n\t\t\t\t\tmods.push( child )\n\t\t\t\t\t\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t)\n\t\t\t\n\t\t\t//mods.sort( ( a , b )=> a.name().length - b.name().length )\n\t\t\t\n\t\t\treturn mods\n\t\t}\n\t\t\n\t\t// @ $mol_mem_key\n\t\t// modsRecursive( { path , exclude } : { path : string , exclude? : string[] } ) : $mol_file[] {\n\t\t// \tvar mod = $mol_file.absolute( path )\n\t\t// \tswitch( mod.type() ) {\n\t\t// \t\tcase 'file' :\n\t\t// \t\t\treturn [ mod ]\n\t\t// \t\tcase 'dir' :\n\t\t// \t\t\tvar mods = [ mod ]\n\t\t// \t\t\tfor( var m of this.mods( { path , exclude } ) ) {\n\t\t// \t\t\t\tif( m.type() !== 'dir' ) continue\n\t\t// \t\t\t\tfor( var dep of this.modsRecursive( { path : m.path() , exclude } ) ) {\n\t\t// \t\t\t\t\tif( mods.indexOf( dep ) !== -1 ) continue\n\t\t// \t\t\t\t\tmods.push( dep )\n\t\t// \t\t\t\t}\n\t\t// \t\t\t}\n\t\t// \t\t\treturn mods\n\t\t// \t\tdefault :\n\t\t// \t\t\tthrow new Error( `Unsupported type \"${mod.type()}\" of \"${mod.relate()}\"` )\n\t\t// \t}\n\t\t// }\n\t\t\n\t\t@ $mol_mem_key\n\t\tsources( { path , exclude } : { path : string , exclude? : string[] } ) : $mol_file[] {\n\t\t\tconst mod = $mol_file.absolute( path )\n\t\t\tif ( ! mod.exists() ) return []\n\t\t\tswitch( mod.type() ) {\n\t\t\t\tcase 'file' :\n\t\t\t\t\treturn [ mod ]\n\t\t\t\tcase 'dir' :\n\t\t\t\t\treturn this.mods( { path , exclude } ).filter( mod => mod.type() === 'file' )\n\t\t\t\tdefault:\n\t\t\t\t\treturn []\n\t\t\t}\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tsourcesSorted( { path , exclude } : { path : string , exclude? : string[] } ) : $mol_file[] {\n\t\t\tconst mod = $mol_file.absolute( path )\n\t\t\tconst graph = new $mol_graph< void , { priority : number } >()\n\t\t\tconst sources = this.sources( { path , exclude } )\n\t\t\tfor( let src of sources ) {\n\t\t\t\tgraph.nodeEnsure( src.relate( this.root() ) )\n\t\t\t}\n\t\t\tfor( let src of sources ) {\n\t\t\t\tlet deps = this.srcDeps( src.path() )\n\t\t\t\tfor( let p in deps ) {\n\t\t\t\t\t\n\t\t\t\t\tvar names : string[]\n\t\t\t\t\tif( p[ 0 ] === '/' ) {\n\t\t\t\t\t\tnames = p.substring( 1 ).split( '/' )\n\t\t\t\t\t} else if( p[ 0 ] === '.' ) {\n\t\t\t\t\t\tnames = mod.resolve( p ).relate( this.root() ).split( '/' )\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnames = [ 'node_modules' , ... p.split( '/' ) ]\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tlet files = [ this.root() ]\n\t\t\t\t\tfor( let name of names ) {\n\t\t\t\t\t\tlet nextFiles : $mol_file[] = []\n\t\t\t\t\t\tfor( let file of files ) {\n\t\t\t\t\t\t\tlet validName = new RegExp( `^(${file.name()})?${name}(?![a-z0-9])` , 'i' )\n\t\t\t\t\t\t\tfor( let child of this.mods( { path : file.path() , exclude } ) ) {\n\t\t\t\t\t\t\t\tif( !child.name().match( validName ) ) continue\n\t\t\t\t\t\t\t\tnextFiles.push( child )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif( nextFiles.length === 0 ) break\n\t\t\t\t\t\tfiles = nextFiles\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tfor( let file of files ) {\n\t\t\t\t\t\tif( file === this.root() ) continue\n\n\t\t\t\t\t\tconst from = src.relate( this.root() )\n\t\t\t\t\t\tif(!( from in graph.nodes )) continue\n\t\t\t\t\t\n\t\t\t\t\t\tconst to = file.relate( this.root() )\n\t\t\t\t\t\tif(!( to in graph.nodes )) continue\n\t\t\t\t\t\n\t\t\t\t\t\tgraph.link( from , to , { priority : deps[ p ] } )\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t\tgraph.cut_cycles( edge => edge.priority )\n\t\t\t\n\t\t\tlet next = graph.sorted.map( name => this.root().resolve( name ) )\n\t\t\treturn next\n\t\t}\n\t\t\n\t\t\n\t\t@ $mol_mem_key\n\t\tsourcesAll( { path , exclude } : { path : string , exclude? : string[] } ) : $mol_file[] {\n\t\t\tconst sortedPaths = this.graph( { path , exclude } ).sorted\n\t\t\t\n\t\t\tconst sources = new Set< $mol_file >()\n\t\t\tsortedPaths.forEach( path => {\n\t\t\t\tconst mod = this.root().resolve( path )\n\t\t\t\tthis.sourcesSorted( { path : mod.path() , exclude } ).forEach( src => {\n\t\t\t\t\tsources.add( src )\n\t\t\t\t} )\n\t\t\t} )\n\t\t\t\n\t\t\treturn [ ... sources ]\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\ttsOptions() {\n\t\t\tconst rawOptions = JSON.parse( this.root().resolve( 'tsconfig.json' ).text() + '').compilerOptions\n\t\t\tconst res = $node.typescript.convertCompilerOptionsFromJson( rawOptions , \".\" , 'tsconfig.json' )\n\t\t\tif( res.errors.length ) throw res.errors\n\t\t\treturn res.options\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\ttsSource( { path , target } : { path : string , target : number } ) {\n\t\t\tconst content = $mol_file.absolute( path ).text()\n\t\t\treturn $node.typescript.createSourceFile( path , content , target )\n\t\t}\n\n\t\t@ $mol_mem_key\n\t\ttsPaths( { path , exclude , bundle } : { path : string , bundle : string , exclude : string[] } ) {\n\n\t\t\tconst sources = this.sourcesAll( { path , exclude } ).filter( src => /tsx?$/.test( src.ext() ) )\n\n\t\t\tif( sources.length && bundle === 'node' ) {\n\t\t\t\tconst types = [] as string[]\n\t\t\t\t\n\t\t\t\tfor( let dep of this.nodeDeps({ path , exclude }) ) {\n\t\t\t\t\ttypes.push( '\\t' + JSON.stringify( dep ) + ' : typeof import( ' + JSON.stringify( dep ) + ' )' )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconst node_types = $mol_file.absolute( path ).resolve( `-node/deps.d.ts` )\n\t\t\t\tnode_types.text( 'interface $node {\\n ' + types.join( '\\n' ) + '\\n}' )\n\t\t\t\tsources.push( node_types )\n\t\t\t}\n\n\t\t\treturn sources.map( src => src.path() )\n\t\t}\n\n\t\t@ $mol_mem_key\n\t\ttsHost( { path , exclude , bundle } : { path : string , bundle : string , exclude : string[] } ) {\n\t\t\t\n\t\t\tconst host = $node.typescript.createCompilerHost( this.tsOptions() )\n\t\t\t\n\t\t\thost.fileExists = ( path )=> $mol_file.relative( path ).exists()\n\t\t\thost.readFile = ( path )=> $mol_file.relative( path ).text()\n\t\t\thost.writeFile = ( path , text )=> {\n\t\t\t\tconst file = $mol_file.relative( path )\n\t\t\t\tfile.exists( true , $mol_mem_force_cache )\n\t\t\t\tfile.text( text , $mol_mem_force_cache )\n\t\t\t}\n\t\t\t\n\t\t\treturn host\n\t\t}\n\n\t\t@ $mol_mem_key\n\t\ttsTranspiler( { path , exclude , bundle } : { path : string , bundle : string , exclude : string[] } ) {\n\t\t\treturn $node.typescript.createProgram(\n\t\t\t\tthis.tsPaths({ path , exclude , bundle }) ,\n\t\t\t\tthis.tsOptions() ,\n\t\t\t\tthis.tsHost({ path , exclude , bundle }) ,\n\t\t\t)\n\t\t}\n\n\t\t@ $mol_mem_key\n\t\ttsTranspile( { path , exclude , bundle } : { path : string , bundle : string , exclude : string[] } ) {\n\t\t\tconst res = this.tsTranspiler({ path , exclude , bundle }).emit()\n\t\t\treturn res\n\t\t}\n\n\t\t@ $mol_mem_key\n\t\ttsService( { path , exclude , bundle } : { path : string , bundle : string , exclude : string[] } ) {\n\n\t\t\tconst paths = this.tsPaths({ path , exclude , bundle })\n\t\t\tif( !paths.length ) return null\n\n\t\t\tconst watchers = new Map< string , ( path : string , kind : number )=> void >()\n\t\t\tlet run = ()=> {}\n\n\t\t\tvar host = $node.typescript.createWatchCompilerHost(\n\n\t\t\t\tpaths ,\n\t\t\t\t\n\t\t\t\t{\n\t\t\t\t\t... this.tsOptions(),\n\t\t\t\t\tnoEmit : true,\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\t{\n\t\t\t\t\t... $node.typescript.sys ,\n\t\t\t\t\twriteFile : (path , data )=> {\n\t\t\t\t\t\treturn $mol_fail( new Error( 'Write forbidden' ) )\n\t\t\t\t\t},\n\t\t\t\t\tsetTimeout : ( cb : any )=> {\n\t\t\t\t\t\trun = cb\n\t\t\t\t\t} ,\n\t\t\t\t\twatchFile : (path:string, cb:(path:string,kind:number)=>any )=> {\n\t\t\t\t\t\twatchers.set( path , cb )\n\t\t\t\t\t\treturn { close(){ } }\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\t$node.typescript.createSemanticDiagnosticsBuilderProgram,\n\n\t\t\t\t( diagnostic )=> {\n\n\t\t\t\t\tif( diagnostic.file ) {\n\n\t\t\t\t\t\tconst error = new Error( $node.typescript.formatDiagnostic( diagnostic , {\n\t\t\t\t\t\t\tgetCurrentDirectory : ()=> this.root().path() ,\n\t\t\t\t\t\t\tgetCanonicalFileName : ( path : string )=> path.toLowerCase() ,\n\t\t\t\t\t\t\tgetNewLine : ()=> '\\n' ,\n\t\t\t\t\t\t}) )\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis.js_error( diagnostic.file.getSourceFile().fileName.replace( /\\.tsx?$/ , '.js' ) , error )\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.$.$mol_log3_fail({\n\t\t\t\t\t\t\tplace : `${this}.tsService()` ,\n\t\t\t\t\t\t\tmessage: String( diagnostic.messageText ) ,\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t} ,\n\n\t\t\t\t() => {} ,\n\t\t\t\t\n\t\t\t)\n\n\t\t\tconst service = $node.typescript.createWatchProgram( host )\n\n\t\t\tconst versions = {} as Record< string , number >\n\n\t\t\treturn {\n\t\t\t\trecheck: ()=> {\n\t\t\t\t\tfor( const path of paths ) {\n\t\t\t\t\t\tconst version = $node.fs.statSync( path ).mtime.valueOf()\n\t\t\t\t\t\tif( versions[ path ] && versions[ path ] !== version ) {\n\t\t\t\t\t\t\tthis.js_error(path.replace( /\\.tsx?$/ , '.js' ),null)\n\t\t\t\t\t\t\tconst watcher = watchers.get( path )\n\t\t\t\t\t\t\tif( watcher ) watcher( path , 2 )\n\t\t\t\t\t\t}\n\t\t\t\t\t\tversions[ path ] = version\n\t\t\t\t\t}\n\t\t\t\t\trun()\n\t\t\t\t},\n\t\t\t\tdestructor : ()=> service.close()\n\t\t\t}\n\n\t\t}\n\n\t\t@ $mol_mem_key\n\t\tjs_error( path : string , next = null as null | Error ) {\n\t\t\treturn next\n\t\t}\n\n\t\t@ $mol_mem_key\n\t\tjs_content( path : string ) {\n\n\t\t\tconst src = $mol_file.absolute( path )\n\n\t\t\tif( /\\.tsx?$/.test( src.name() ) ) {\n\t\t\t\n\t\t\t\tconst res = $node.typescript.transpileModule( src.text() , { compilerOptions : this.tsOptions() } )\n\t\t\t\t\n\t\t\t\tif( res.diagnostics?.length ) {\n\t\t\t\t\treturn $mol_fail( new Error( $node.typescript.formatDiagnostic( res.diagnostics[0] , {\n\t\t\t\t\t\tgetCurrentDirectory : ()=> this.root().path() ,\n\t\t\t\t\t\tgetCanonicalFileName : ( path : string )=> path.toLowerCase() ,\n\t\t\t\t\t\tgetNewLine : ()=> '\\n' ,\n\t\t\t\t\t}) ) )\n\t\t\t\t}\n\n\t\t\t\tconst map = JSON.parse( res.sourceMapText! ) as $mol_sourcemap_raw\n\t\t\t\tmap.file = src.relate()\n\t\t\t\tmap.sources = [ src.relate() ]\n\t\t\t\t\n\t\t\t\treturn {\n\t\t\t\t\ttext : res.outputText.replace( /^\\/\\/#\\ssourceMappingURL=[^\\n]*/mg , '//' + src.relate() )+'\\n',\n\t\t\t\t\tmap : map,\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst srcMap = src.parent().resolve( src.name() + '.map' );\n\t\t\t\t\n\t\t\t\treturn {\n\t\t\t\t\ttext : src.text().replace( /^\\/\\/#\\ssourceMappingURL=/mg , '//' )+'\\n',\n\t\t\t\t\tmap : srcMap.exists() ? JSON.parse( srcMap.text() ) as $mol_sourcemap_raw : undefined\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tsourcesJS( { path , exclude } : { path : string , exclude : string[] } ) : $mol_file[] {\n\n\t\t\tvar sources = this.sourcesAll( { path , exclude } )\n\t\t\t\n\t\t\tconst image_types = {\n\t\t\t\t'svg' : 'image/svg+xml' ,\n\t\t\t\t'png' : 'image/png' ,\n\t\t\t\t'jpg' : 'image/jpeg' ,\n\t\t\t\t'jpeg' : 'image/jpeg' ,\n\t\t\t\t'gif' : 'image/gif' ,\n\t\t\t\t'webp' : 'image/webp' ,\n\t\t\t}\n\n\t\t\tthis.tsTranspile({ path , exclude , bundle : 'web' })\n\n\t\t\tsources = sources.map(\n\t\t\t\tsrc => {\n\n\t\t\t\t\tconst ext = src.ext().replace( /^.*\\./ , '' )\n\n\t\t\t\t\tif( image_types[ ext ] ) {\n\n\t\t\t\t\t\tconst ext = src.ext()\n\n\t\t\t\t\t\tconst script = src.parent().resolve( `-image/${ src.name() }.js` )\n\t\t\t\t\t\tconst payload = $mol_base64_encode(src.buffer())\n\n\t\t\t\t\t\tconst path = src.relate( this.root() )\n\t\t\t\t\t\tconst uri = `data:${ image_types[ext] };base64,${ payload }`\n\t\t\t\t\t\tscript.text( `var $node = $node || {} ; $node[ ${ JSON.stringify( '/' + path ) } ] = ${ JSON.stringify( uri ) }\\n` )\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn script\n\t\t\t\t\t}\n\n\t\t\t\t\tif( /^tsx?$/.test( ext ) ) {\n\t\t\t\t\t\treturn src.parent().resolve( src.name().replace( /\\.tsx?$/ , '.js' ) )\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif( 'js' === ext ) {\n\t\t\t\t\t\treturn src\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t).filter( Boolean ) as $mol_file[]\n\t\t\t\n\t\t\treturn sources\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tsourcesDTS( { path , exclude } : { path : string , exclude? : string[] } ) : $mol_file[] {\n\t\t\t\n\t\t\tlet sources = this.sourcesAll( { path , exclude } )\n\t\t\t\n\t\t\tsources = sources.filter( src => /(tsx?)$/.test( src.ext() ) )\n\t\t\t\n\t\t\tsources = sources.map(\n\t\t\t\tsrc => src.parent().resolve( src.name().replace( /(\\.d)?\\.tsx?$/ , '.d.ts' ) )\n\t\t\t)\n\t\t\t\n\t\t\treturn sources\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tsourcesCSS( { path , exclude } : { path : string , exclude? : string[] } ) : $mol_file[] {\n\t\t\treturn this.sourcesAll( { path , exclude } ).filter( src => /(css)$/.test( src.ext() ) )\n\t\t}\n\t\t\n\t\tstatic dependors : { [ index : string ] : undefined | ( ( source : $mol_file )=> { [ index : string ] : number } ) } = {}\n\t\t\n\t\t@ $mol_mem_key\n\t\tsrcDeps( path : string ) {\n\t\t\tconst src = $mol_file.absolute( path )\n\t\t\t\n\t\t\tlet ext = src.ext()\n\t\t\tif( !ext ) return {}\n\t\t\t\n\t\t\tlet dependencies \n\t\t\twhile( !dependencies ) {\n\t\t\t\tdependencies = $mol_build.dependors[ ext ]\n\t\t\t\tif( dependencies ) break\n\t\t\t\tvar extShort = ext.replace( /^[^.]*\\./ , '' )\n\t\t\t\tif( ext === extShort ) break\n\t\t\t\text = extShort\n\t\t\t}\n\t\t\t\n\t\t\treturn dependencies ? dependencies( src ) : {}\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tmodDeps( { path , exclude } : { path : string , exclude? : string[] } ) {\n\t\t\tconst mod = $mol_file.absolute( path )\n\t\t\tconst depends : { [ index : string ] : number } = { '..' : Number.MIN_SAFE_INTEGER }\n\t\t\tfor( var src of this.sources( { path , exclude } ) ) {\n\t\t\t\t$mol_build_depsMerge( depends , this.srcDeps( src.path() ) )\n\t\t\t}\n\t\t\treturn depends\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tdependencies( { path , exclude } : { path : string , exclude? : string[] } ) {\n\t\t\tvar mod = $mol_file.absolute( path )\n\t\t\tif ( ! mod.exists() ) return {}\n\t\t\tswitch( mod.type() ) {\n\t\t\t\tcase 'file' :\n\t\t\t\t\treturn this.srcDeps( path )\n\t\t\t\tcase 'dir' :\n\t\t\t\t\treturn this.modDeps( { path , exclude } )\n\t\t\t\tdefault :\n\t\t\t\t\treturn {}\n\t\t\t}\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\t@ $mol_fiber.method\n\t\tmodEnsure( path : string ) {\n\n\t\t\tvar mod = $mol_file.absolute( path )\n\t\t\tif( mod === this.root() ) return false\n\n\t\t\tvar parent = mod.parent()\n\t\t\tthis.modEnsure( parent.path() )\n\t\t\t\n\t\t\tvar mapping = this.modMeta( parent.path() )\n\t\t\t\n\t\t\tif( mod.exists() ) {\n\t\t\t\tconst git_dir = mod.resolve( '.git' )\n\t\t\t\tif( mod.type() === 'dir' ) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif( git_dir.exists() && git_dir.type() === 'dir' ) {\n\t\t\t\t\t\t\t//$mol_exec( pack.path() , 'git' , '--no-pager' , 'fetch' )\n\t\t\t\t\t\t\t//process.stdout.write( $mol_exec( mod.path() , 'git' , '--no-pager' , 'log' , '--oneline' , 'HEAD..origin/master' ).stdout )\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfor( let repo of mapping.select( 'pack' , mod.name() , 'git' ).sub ) {\n\t\t\t\t\t\t\t\tthis.$.$mol_exec( mod.path() , 'git' , 'init' )\n\t\t\t\t\t\t\t\tthis.$.$mol_exec( mod.path() , 'git' , 'remote' , 'add' , '--track' , 'master' , 'origin' , repo.value )\n\t\t\t\t\t\t\t\tthis.$.$mol_exec( mod.path() , 'git' , 'pull' )\n\t\t\t\t\t\t\t\tmod.reset()\n\t\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch( error ) {\n\t\t\t\t\t\tthis.$.$mol_log3_fail({\n\t\t\t\t\t\t\tplace: `${this}.modEnsure()` ,\n\t\t\t\t\t\t\tpath ,\n\t\t\t\t\t\t\tmessage: error.message ,\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tfor( let repo of mapping.select( 'pack' , mod.name() , 'git' ).sub ) {\n\t\t\t\tthis.$.$mol_exec( this.root().path() , 'git' , 'clone' , repo.value , mod.path() )\n\t\t\t\tmod.reset()\n\t\t\t\treturn true\n\t\t\t}\n\t\t\t\n\t\t\tif( parent === this.root() ) {\n\t\t\t\tthrow new Error( `Root package \"${ mod.relate( this.root() ) }\" not found` )\n\t\t\t}\n\n\t\t\tif( parent.name() === 'node_modules' ) {\n\t\t\t\t$node[ mod.name() ] // force autoinstall through npm\n\t\t\t}\n\n\t\t\treturn false\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tmodMeta( path : string ) {\n\n\t\t\tconst decls = [] as $mol_tree[]\n\n\t\t\tconst pack = $mol_file.absolute( path )\n\t\t\tfor( const file of pack.sub() ) {\n\t\t\t\tif( !/\\.meta\\.tree$/.test( file.name() ) ) continue\n\t\t\t\tdecls.push( ... $mol_tree.fromString( file.text() , file.path() ).sub )\n\t\t\t}\n\t\t\t\n\t\t\treturn new $mol_tree({ sub : decls })\n\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tgraph( { path , exclude } : { path : string , exclude? : string[] } ) {\n\t\t\tlet graph = new $mol_graph< null , { priority : number } >()\n\t\t\tlet added : { [ path : string ] : boolean } = {}\n\t\t\t\n\t\t\tvar addMod = ( mod : $mol_file )=> {\n\t\t\t\tif( added[ mod.path() ] ) return\n\t\t\t\tadded[ mod.path() ] = true\n\t\t\t\t\n\t\t\t\tgraph.nodes[ mod.relate( this.root() ) ] = null\n\t\t\t\t\n\t\t\t\tconst checkDep = ( p : string )=> {\n\n\t\t\t\t\tconst isFile = /\\.\\w+$/.test( p )\n\t\t\t\t\t\n\t\t\t\t\tvar dep = ( p[ 0 ] === '/' )\n\t\t\t\t\t? this.root().resolve( p + ( isFile ? '' : '/' + p.replace( /.*\\// , '' ) ) )\n\t\t\t\t\t: ( p[ 0 ] === '.' )\n\t\t\t\t\t? mod.resolve( p )\n\t\t\t\t\t: this.root().resolve( 'node_modules' ).resolve( './' + p )\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthis.modEnsure( dep.path() )\n\t\t\t\t\t} catch( error ) {\n\t\t\t\t\t\terror.message = `${ error.message }\\nDependency \"${ dep.relate( this.root() ) }\" from \"${ mod.relate( this.root() ) }\" `\n\t\t\t\t\t\t$mol_fail_hidden(error)\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\twhile( !dep.exists() ) dep = dep.parent()\n\t\t\t\t\t\n\t\t\t\t\tif( dep.type() === 'dir' ) {\n\t\t\t\t\t\tlet index = dep.resolve( 'index.js' )\n\t\t\t\t\t\tif( index.exists() ) dep = index\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t//if( dep.type() === 'file' ) dep = dep.parent()\n\t\t\t\t\tif( mod === dep ) return\n\t\t\t\t\tif( dep === this.root() ) return\n\t\t\t\t\t\n\t\t\t\t\tconst from = mod.relate( this.root() )\n\t\t\t\t\tconst to = dep.relate( this.root() )\n\t\t\t\t\tconst edge = graph.edgesOut[ from ] && graph.edgesOut[ from ][ to ]\n\t\t\t\t\tif( !edge || ( deps[ p ] > edge.priority ) ) {\n\t\t\t\t\t\tgraph.link( from , to , { priority : deps[ p ] } )\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\taddMod( dep )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tlet deps = this.dependencies( { path : mod.path() , exclude } )\n\t\t\t\tfor( let p in deps ) {\n\t\t\t\t\tcheckDep( p )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tthis.modEnsure( path )\n\n\t\t\taddMod( $mol_file.absolute( path ) )\n\t\t\t\n\t\t\tgraph.cut_cycles( edge => edge.priority )\n\n\t\t\treturn graph\n\t\t}\n\n\t\tbundleAll( { path } : { path : string } ) {\n\n\t\t\tthis.bundle({ path , bundle : 'index.html' })\n\t\t\tthis.bundle({ path , bundle : 'test.html' })\n\n\t\t\tthis.bundle({ path , bundle : 'web.deps.json' })\n\t\t\tthis.bundle({ path , bundle : 'web.css' })\n\t\t\tthis.bundle({ path , bundle : 'web.js' })\n\t\t\tthis.bundle({ path , bundle : 'web.test.js' })\n\t\t\tthis.bundle({ path , bundle : 'web.test.html' })\n\t\t\tthis.bundle({ path , bundle : 'web.d.ts' })\n\t\t\tthis.bundle({ path , bundle : 'web.view.tree' })\n\t\t\tthis.bundle({ path , bundle : 'web.locale=en.json' })\n\n\t\t\tthis.bundle({ path , bundle : 'node.deps.json' })\n\t\t\tthis.bundle({ path , bundle : 'node.js' })\n\t\t\tthis.bundle({ path , bundle : 'node.test.js' })\n\t\t\tthis.bundle({ path , bundle : 'node.d.ts' })\n\t\t\tthis.bundle({ path , bundle : 'node.view.tree' })\n\t\t\tthis.bundle({ path , bundle : 'node.locale=en.json' })\n\n\t\t\tthis.bundle({ path , bundle : 'package.json' })\n\n\t\t\tthis.bundleFiles( { path , exclude : [ 'node' ] } )\n\t\t\tthis.bundleCordova( { path , exclude : [ 'node' ] } )\n\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tbundle( { path , bundle = '' } : { path : string , bundle? : string } ) {\n\t\t\t\n\t\t\tbundle = bundle && bundle.replace( /\\.map$/ , '' )\n\t\t\t\n\t\t\tvar envsDef = [ 'web' , 'node' ]\n\t\t\tvar envs = bundle ? [] as string[] : envsDef.slice()\n\t\t\tvar stages = [ 'test' , 'dev' ]\n\t\t\tvar moduleTargets = ['', 'esm']\n\t\t\tif( bundle ) {\n\t\t\t\t\n\t\t\t\tvar [ bundle , tags , type , locale ] = /^(.*?)(?:\\.(test\\.js|test\\.html|js|css|deps\\.json|locale=(\\w+)\\.json))?$/.exec(\n\t\t\t\t\tbundle\n\t\t\t\t)!\n\t\t\t\t\n\t\t\t\ttags.split( '.' ).forEach(\n\t\t\t\t\ttag => {\n\t\t\t\t\t\tif( envsDef.indexOf( tag ) !== -1 ) envs = [ tag ]\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t\t\n\t\t\tvar res : $mol_file[] = []\n\t\t\t\n\t\t\tenvs.forEach(\n\t\t\t\tenv => {\n\t\t\t\t\tvar exclude = envsDef.filter( e => e !== env ).concat( stages )\n\t\t\t\t\t\n\t\t\t\t\tif( !type || type === 'deps.json' ) {\n\t\t\t\t\t\tres = res.concat( this.bundleDepsJSON( { path , exclude , bundle : env } ) )\n\t\t\t\t\t}\n\t\t\t\t\tif( !type || type === 'css' ) {\n\t\t\t\t\t\tres = res.concat( this.bundleCSS( { path , exclude , bundle : env } ) )\n\t\t\t\t\t}\n\t\t\t\t\tif( !type || type === 'js' ) {\n\t\t\t\t\t\tmoduleTargets.forEach(\n\t\t\t\t\t\t\tmoduleTarget => {\n\t\t\t\t\t\t\t\tres = res.concat( this.bundleJS( { path , exclude , bundle : env, moduleTarget } ) )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\tif( !type || type === 'test.js' ) {\n\t\t\t\t\t\tres = res.concat( this.bundleTestJS( { path , exclude , bundle : env } ) )\n\t\t\t\t\t}\n\t\t\t\t\tif( !type || type === 'd.ts' ) {\n\t\t\t\t\t\tres = res.concat( this.bundleDTS( { path , exclude , bundle : env } ) )\n\t\t\t\t\t}\n\t\t\t\t\tif( !type || type === 'view.tree' ) {\n\t\t\t\t\t\tres = res.concat( this.bundleViewTree( { path , exclude , bundle : env } ) )\n\t\t\t\t\t}\n\t\t\t\t\tif( !type || /^locale=(\\w+).json$/.test( type ) ) {\n\t\t\t\t\t\tres = res.concat(\n\t\t\t\t\t\t\tthis.bundleLocale(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tpath ,\n\t\t\t\t\t\t\t\t\texclude ,\n\t\t\t\t\t\t\t\t\tbundle : env\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\t\t\t\n\t\t\tif( !bundle || bundle === 'package.json' ) {\n\t\t\t\tres = res.concat( this.bundlePackageJSON( { path , exclude : [ 'web' ] } ) )\n\t\t\t}\n\t\t\t\n\t\t\tif( !bundle || bundle === 'index.html' ) {\n\t\t\t\tres = res.concat( this.bundleIndexHtml( { path } ) )\n\t\t\t}\n\t\t\t\n\t\t\tif( !bundle || bundle === 'test.html' ) {\n\t\t\t\tres = res.concat( this.bundleTestHtml( { path } ) )\n\t\t\t}\n\n\t\t\tif( !bundle || /\\//.test( bundle ) ) {\n\t\t\t\tres = res.concat( this.bundleFiles( { path , exclude : [ 'node' ] } ) )\n\t\t\t}\n\t\t\t\n\t\t\treturn res\n\t\t}\n\t\t\n\t\tlogBundle( target : $mol_file , duration : number ) {\n\n\t\t\tconst path = target.relate( this.root() )\n\t\t\t\n\t\t\tthis.$.$mol_log3_done({\n\t\t\t\tplace: this ,\n\t\t\t\tduration: `${duration}ms` ,\n\t\t\t\tmessage: `Built` , \n\t\t\t\tpath ,\n\t\t\t})\n\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tbundleJS( { path , exclude , bundle , moduleTarget } : { path : string , exclude : string[] , bundle : string, moduleTarget? : string } ) : $mol_file[] {\n\t\t\tconst start = Date.now()\n\t\t\tvar pack = $mol_file.absolute( path )\n\t\t\tvar mt = moduleTarget ? `.${moduleTarget}` : ''\n\t\t\tvar target = pack.resolve( `-/${bundle}${mt}.js` )\n\t\t\tvar targetMap = pack.resolve( `-/${bundle}${mt}.js.map` )\n\t\t\t\n\t\t\tvar sources = this.sourcesJS( { path , exclude } )\n\t\t\tif( sources.length === 0 ) return []\n\t\t\t\n\t\t\tvar concater = new $mol_sourcemap_builder( target.name(), ';')\n\n\t\t\tif( bundle === 'node' ) {\n\t\t\t\tconcater.add( 'require'+'( \"source-map-support\" ).install(); var exports = void 0;\\n' )\n\t\t\t\tconcater.add( \"process.on( 'unhandledRejection' , up => { throw up } )\" )\n\t\t\t} else {\n\t\t\t\tconcater.add( 'function require'+'( path ){ return $node[ path ] }' )\n\t\t\t}\n\n\t\t\tconst errors = [] as Error[]\n\t\t\tsources.forEach(\n\t\t\t\t( src )=> {\n\t\t\t\t\tif( bundle === 'node' ) {\n\t\t\t\t\t\tif( /node_modules\\//.test( src.relate( this.root() ) ) ) {\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst content = this.js_content( src.path() )\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst isCommonJs = /module\\.exports|\\bexports\\.\\w+\\s*=/.test( content.text )\n\t\t\t\t\t\n\t\t\t\t\t\tif( isCommonJs ) {\n\t\t\t\t\t\t\tconcater.add( `\\nvar $node = $node || {}\\nvoid function( module ) { var exports = module.${''}exports = this; function require( id ) { return $node[ id.replace( /^.\\\\// , \"` + src.parent().relate( this.root().resolve( 'node_modules' ) ) + `/\" ) ] }; \\n`, '-' )\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconcater.add( content.text , src.relate( target.parent() ) , content.map )\n\t\t\t\t\t\t\n\t\t\t\t\t\tif( isCommonJs ) {\n\t\t\t\t\t\t\tconst idFull = src.relate( this.root().resolve( 'node_modules' ) )\n\t\t\t\t\t\t\tconst idShort = idFull.replace( /\\/index\\.js$/ , '' ).replace( /\\.js$/ , '' )\n\t\t\t\t\t\t\tconcater.add( `\\n$${''}node[ \"${ idShort }\" ] = $${''}node[ \"${ idFull }\" ] = module.${''}exports }.call( {} , {} )\\n`, '-' )\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} catch( error ) {\n\t\t\t\t\t\terrors.push( error )\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\t\t\tif( moduleTarget === 'esm' ) {\n\t\t\t\tconcater.add( 'export default $', '-' )\n\t\t\t}\n\t\t\ttarget.text( concater.content + '\\n//# sourceMappingURL=' + targetMap.relate( target.parent() )+'\\n' )\n\t\t\ttargetMap.text( concater.toString() )\n\t\t\t\n\t\t\tthis.logBundle( target , Date.now() - start )\n\n\t\t\tif( errors.length ) $mol_fail_hidden( new $mol_error_mix( `Build fail ${path}`, ...errors ) )\n\t\t\t\n\t\t\treturn [ target , targetMap ]\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tbundleTestJS( { path , exclude , bundle } : { path : string , exclude : string[] , bundle : string } ) : $mol_file[] {\n\t\t\tconst start = Date.now()\n\t\t\tvar pack = $mol_file.absolute( path )\n\t\t\t\n\t\t\tvar root = this.root()\n\t\t\tvar target = pack.resolve( `-/${bundle}.test.js` )\n\t\t\tvar targetMap = pack.resolve( `-/${bundle}.test.js.map` )\n\t\t\t\n\t\t\tvar concater = new $mol_sourcemap_builder( target.name(), ';')\n\t\t\t\n\t\t\tvar exclude_ext = exclude.filter( ex => ex !== 'test' && ex !== 'dev' )\n\t\t\tvar sources = this.sourcesJS( { path , exclude : exclude_ext } )\n\t\t\tvar sourcesNoTest = this.sourcesJS( { path , exclude } )\n\t\t\tvar sourcesTest = sources.filter( src => sourcesNoTest.indexOf( src ) === -1 )\n\t\t\tif( bundle === 'node' ) {\n\t\t\t\tconcater.add( 'require'+'( \"source-map-support\" ).install()\\n' )\n\t\t\t\tconcater.add( \"process.on( 'unhandledRejection' , up => { throw up } )\" )\n\t\t\t\tsourcesTest = [ ... sourcesNoTest , ... sourcesTest ]\n\t\t\t} else {\n\t\t\t\tconcater.add( 'function require'+'( path ){ return $node[ path ] }' )\n\t\t\t}\n\t\t\tif( sources.length === 0 ) return []\n\t\t\t\n\t\t\tthis.tsService({ path , exclude : exclude_ext , bundle })?.recheck()\n\t\t\t\n\t\t\tconst errors = [] as Error[]\n\n\t\t\tfor( const src of sources ) {\n\t\t\t\tsrc.text()\n\t\t\t\tconst error = this.js_error( src.path() )\n\t\t\t\tif( !error ) continue\n\t\t\t\terrors.push( error )\n\t\t\t}\n\t\t\t\n\t\t\tsourcesTest.forEach(\n\t\t\t\t( src )=> {\n\t\t\t\t\tif( bundle === 'node' ) {\n\t\t\t\t\t\tif( /node_modules\\//.test( src.relate( root ) ) ) {\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst content = this.js_content( src.path() )\n\t\t\t\t\t\tconcater.add( content.text, src.relate( target.parent() ), content.map)\n\t\t\t\t\t} catch( error ) {\n\t\t\t\t\t\terrors.push( error )\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\t\t\t\n\t\t\ttarget.text( concater.content + '\\n//# sourceMappingURL=' + targetMap.relate( target.parent() )+'\\n' )\n\t\t\ttargetMap.text( concater.toString() )\n\t\t\t\n\t\t\tthis.logBundle( target , Date.now() - start )\n\t\t\t\n\t\t\tif( errors.length ) $mol_fail_hidden( new $mol_error_mix( `Build fail ${path}`, ...errors ) )\n\n\t\t\tif( bundle === 'node' ) {\n\t\t\t\tthis.$.$mol_exec( this.root().path() , 'node' , target.path() ).stdout.toString()\n\t\t\t}\n\t\t\t\n\t\t\treturn [ target , targetMap ]\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tbundleTestHtml( { path } : { path : string } ) : $mol_file[] {\n\t\t\t\n\t\t\tconst start = Date.now()\n\t\t\t\n\t\t\tconst pack = $mol_file.absolute( path )\n\t\t\tconst source = pack.resolve( 'index.html' )\n\t\t\tconst target = pack.resolve( `-/test.html` )\n\n\t\t\tlet content = source.exists()\n\t\t\t\t? source.text()\n\t\t\t\t: `<!doctype html><meta charset=\"utf-8\" /><body><script src=\"web.js\" charset=\"utf-8\"></script>`\n\t\t\t\n\t\t\tcontent = content.replace(\n\t\t\t\t/(<\\/body>|$)/ , `\n\t\t\t\t<script src=\"/mol/build/client/client.js\" charset=\"utf-8\"></script>\n\t\t\t\t<script>\n\t\t\t\t\tsetTimeout( ()=> {\n\t\t\t\t\t\tdocument.head.appendChild( document.createElement( 'script' ) ).src = 'web.test.js'\n\t\t\t\t\t},250)\n\t\t\t\t</script>\n\t\t\t\t$1`,\n\t\t\t)\n\t\t\t\n\t\t\ttarget.text( content )\n\t\t\t\n\t\t\tthis.logBundle( target , Date.now() - start )\n\t\t\t\n\t\t\treturn [ target ]\n\n\t\t}\n\n\t\t@ $mol_mem_key\n\t\tbundleDTS( { path , exclude , bundle } : { path : string , exclude? : string[] , bundle : string } ) : $mol_file[] {\n\t\t\tconst start = Date.now()\n\t\t\tvar pack = $mol_file.absolute( path )\n\t\t\t\n\t\t\tvar target = pack.resolve( `-/${bundle}.d.ts` )\n\t\t\t\n\t\t\tvar sources = this.sourcesDTS( { path , exclude } )\n\t\t\tif( sources.length === 0 ) return []\n\t\t\t\n\t\t\tvar concater = new $mol_sourcemap_builder( target.name() )\n\t\t\t\n\t\t\tsources.forEach(\n\t\t\t\tfunction( src ) {\n\t\t\t\t\tif( ! src.exists() || ! src.text() ) return\n\t\t\t\t\tconcater.add( src.text(), src.relate( target.parent() ) )\n\t\t\t\t}\n\t\t\t)\n\t\t\t\n\t\t\ttarget.text( concater.content )\n\t\t\t\n\t\t\tthis.logBundle( target , Date.now() - start )\n\t\t\t\n\t\t\treturn [ target ]\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tbundleViewTree( { path , exclude , bundle } : { path : string , exclude? : string[] , bundle : string } ) : $mol_file[] {\n\t\t\tconst start = Date.now()\n\t\t\tvar pack = $mol_file.absolute( path )\n\t\t\t\n\t\t\tvar target = pack.resolve( `-/${bundle}.view.tree` )\n\t\t\t\n\t\t\tvar sources = this.sourcesAll({ path , exclude })\n\t\t\t.filter( src => /view.tree$/.test( src.ext() ) )\n\t\t\t\n\t\t\tif( sources.length === 0 ) return []\n\t\t\t\n\t\t\ttarget.text( sources.map( src => src.text() ).join( '\\n' ) )\n\t\t\t\n\t\t\tthis.logBundle( target , Date.now() - start )\n\t\t\t\n\t\t\treturn [ target ]\n\t\t}\n\n\t\t@ $mol_mem_key\n\t\tnodeDeps( { path , exclude } : { path : string , exclude : string[] } ) : string[] {\n\t\t\t\n\t\t\tvar res = new Set<string>()\n\t\t\tvar sources = this.sourcesAll( { path , exclude } )\n\t\t\t\n\t\t\tfor( let src of sources ) {\n\t\t\t\tlet deps = this.srcDeps( src.path() )\n\t\t\t\tfor( let dep in deps ) {\n\t\t\t\t\tif( !/^\\/node(?:_modules)?\\//.test( dep ) ) continue\n\t\t\t\t\tlet mod = dep.replace( /^\\/node(?:_modules)?\\// , '' ).replace( /\\/.*/g , '' )\n\t\t\t\t\tres.add( mod )\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn [ ... res ]\n\n\t\t}\n\n\t\t@ $mol_mem_key\n\t\tbundlePackageJSON( { path , exclude } : { path : string , exclude : string[] } ) : $mol_file[] {\n\t\t\tconst start = Date.now()\n\t\t\tvar pack = $mol_file.absolute( path )\n\t\t\t\n\t\t\tconst source = pack.resolve( `package.json` )\n\t\t\tconst target = pack.resolve( `-/package.json` )\n\t\t\t\n\t\t\texclude = exclude.filter( ex => ex !== 'test' && ex !== 'dev' )\n\t\t\tvar sources = this.sourcesAll( { path , exclude } )\n\t\t\t\n\t\t\tlet name = pack.relate( this.root() ).replace( /\\//g , '_' )\n\t\t\t\n\t\t\tlet json = {\n\t\t\t\tname ,\n\t\t\t\tversion : '0.0.0' ,\n\t\t\t\tmain : 'node.js' ,\n\t\t\t\tmodule : 'node.esm.js',\n\t\t\t\tbrowser : 'web.js',\n\t\t\t\ttypes : 'web.d.ts',\n\t\t\t\tdependencies : <{ [ key : string ] : string }>{}\n\t\t\t}\n\n\t\t\tif( source.exists() ) {\n\t\t\t\tObject.assign( json , JSON.parse( source.text() ) )\n\t\t\t}\n\n\t\t\tlet version = json.version.split('.')\n\t\t\tname = json.name || name\n\t\t\t\n\t\t\ttry {\n\t\t\t\tversion[2] = this.$.$mol_exec( '' , 'npm' , 'view' , name , 'version' ).stdout.toString().trim().split('.')[2]\n\t\t\t} catch { }\n\n\t\t\tversion[2] = String( Number( version[2] ) + 1 )\n\n\t\t\tjson.version = version.join( '.' )\n\n\t\t\tjson.dependencies = {}\n\t\t\t\n\t\t\tfor( let dep of this.nodeDeps({ path , exclude }) ) {\n\t\t\t\tif( require('module').builtinModules.includes(dep) ) continue\n\t\t\t\tjson.dependencies[ dep ] = `*`\n\t\t\t}\n\t\t\t\n\t\t\ttarget.text( JSON.stringify( json , null , '  ' ) )\n\t\t\t\n\t\t\tthis.logBundle( target , Date.now() - start )\n\t\t\t\n\t\t\treturn [ target ]\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tbundleIndexHtml( { path , exclude } : { path : string , exclude? : string[] } ) : $mol_file[] {\n\n\t\t\tconst pack = $mol_file.absolute( path )\n\t\t\t\n\t\t\tconst targets : $mol_file[] = []\n\n\t\t\tconst start = Date.now()\n\t\t\tconst html = pack.resolve( 'index.html' )\n\n\t\t\tif ( html.exists() ) {\n\t\t\t\tconst html_target = pack.resolve( '-/index.html' )\n\t\t\t\thtml_target.text( html.text() )\n\t\t\t\ttargets.push( html_target )\n\t\t\t\tthis.logBundle( html_target , Date.now() - start )\t\n\t\t\t}\n\t\t\t\n\t\t\treturn targets\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tbundleFiles( { path , exclude } : { path : string , exclude? : string[] } ) : $mol_file[] {\n\t\t\tconst root = this.root()\n\t\t\tconst pack = $mol_file.absolute( path )\n\t\t\t\n\t\t\tvar sources = this.sourcesAll( { path , exclude } )\n\t\t\t.filter( src => /meta.tree$/.test( src.ext() ) )\n\t\t\t\n\t\t\tconst targets : $mol_file[] = []\n\n\t\t\tsources.forEach( source => {\n\t\t\t\tconst tree = $mol_tree.fromString( source.text() , source.path() )\n\t\t\t\t\n\t\t\t\ttree.select( 'deploy' ).sub.forEach( deploy => {\n\t\t\t\t\tconst start = Date.now()\n\t\t\t\t\tconst file = root.resolve( deploy.value.replace( /^\\// , '' ) )\n\t\t\t\t\tif ( ! file.exists() ) return\n\t\t\t\t\tconst target = pack.resolve( `-/${ file.relate( root ) }` )\n\t\t\t\t\ttarget.buffer( file.buffer() )\n\t\t\t\t\ttargets.push( target )\n\t\t\t\t\tthis.logBundle( target , Date.now() - start )\n\t\t\t\t} )\n\t\t\t\t\n\t\t\t} )\n\t\t\t\n\t\t\treturn targets\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tbundleCordova( { path , exclude } : { path : string , exclude? : string[] } ) : $mol_file[] {\n\t\t\tconst start = Date.now()\n\t\t\tconst pack = $mol_file.absolute( path )\n\t\t\tconst cordova = pack.resolve( '-cordova' )\n\t\t\t\n\t\t\tconst config = pack.resolve( 'config.xml' )\n\t\t\tif( !config.exists() ) return []\n\t\t\t\n\t\t\tconst config_target = cordova.resolve( 'config.xml' )\n\t\t\tconfig_target.text( config.text() )\n\t\t\t\n\t\t\tconst html = pack.resolve( 'index.html' )\n\n\t\t\tconst targets = [ config_target ]\n\n\t\t\tif( html.exists() ) {\n\t\t\t\tconst html_target = cordova.resolve( 'www/index.html' )\n\t\t\t\thtml_target.text( html.text() )\n\t\t\t\ttargets.push(html_target)\n\t\t\t}\n\t\t\t\n\t\t\tconst sources = pack.resolve( '-' ).find().filter( src => src.type() === 'file' )\n\n\t\t\tfor (const source of sources) {\n\t\t\t\tconst target = cordova.resolve( `www/${ source.relate( pack ) }` )\n\t\t\t\ttarget.text( source.text() )\n\t\t\t\ttargets.push(target)\n\t\t\t}\n\t\t\t\n\t\t\tthis.logBundle( cordova , Date.now() - start )\n\t\t\t\n\t\t\treturn targets\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tbundleCSS( { path , exclude , bundle } : { path : string , exclude? : string[] , bundle : string } ) : $mol_file[] {\n\t\t\tif( bundle === 'node' ) return []\n\n\t\t\tconst start = Date.now()\n\t\t\tvar pack = $mol_file.absolute( path )\n\t\t\tvar sources = [] as $mol_file[] // this.sourcesCSS( { path , exclude } )\n\t\t\t\n\t\t\tvar target = pack.resolve( `-/${bundle}.css` )\n\t\t\tvar targetMap = pack.resolve( `-/${bundle}.css.map` )\n\t\t\t\n\t\t\t// var root : any = null //$node['postcss'].root({})\n\t\t\t// sources.forEach(\n\t\t\t// \tsrc => {\n\t\t\t// \t\tvar root2 = $node['postcss'].parse( src.content() , { from : src.path() } )\n\t\t\t// \t\troot = root ? root.append( root2 ) : root2\n\t\t\t// \t}\n\t\t\t// )\n\t\t\t\n\t\t\t// var processor = $node['postcss']([\n\t\t\t// \t$node[ 'postcss-custom-properties' ]({\n\t\t\t// \t\tpreserve : true ,\n\t\t\t// \t}) ,\n\t\t\t// \t$node[ 'postcss-color-function' ]() ,\n\t\t\t// ])\n\t\t\t// var result = processor.process( root , { to : target.relate() , map : { inline : false } } )\n\n\t\t\tconst result = {\n\t\t\t\tcss : '/* CSS compiles into js bundle now! */',\n\t\t\t\tmap : '/* CSS compiles into js bundle now! */',\n\t\t\t}\n\t\t\t\n\t\t\ttarget.text( result.css )\n\t\t\ttargetMap.text( JSON.stringify( result.map , null , '\\t' ) )\n\t\t\t\n\t\t\tthis.logBundle( target , Date.now() - start )\n\t\t\t\n\t\t\treturn [ target , targetMap ]\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tbundleLocale( { path , exclude , bundle } : { path : string , exclude? : string[] , bundle : string } ) : $mol_file[] {\n\t\t\tconst pack = $mol_file.absolute( path )\n\t\t\t\n\t\t\tconst sources = this.sourcesAll( { path , exclude } ).filter( src => /(locale=(\\w+)\\.json)$/.test( src.name() ) )\n\t\t\tif( !sources.length ) return []\n\t\t\t\n\t\t\tconst locales = {} as { [ key : string ] : { [ key : string ] : string } }\n\t\t\t\n\t\t\tsources.forEach(\n\t\t\t\tsrc => {\n\t\t\t\t\tconst [ ext , lang ] = /locale=(\\w+)\\.json$/.exec( src.name() )!\n\t\t\t\t\t\n\t\t\t\t\tif( !locales[ lang ] ) locales[ lang ] = {}\n\t\t\t\t\t\n\t\t\t\t\tconst loc = JSON.parse( src.text() )\n\t\t\t\t\tfor( let key in loc ) {\n\t\t\t\t\t\tlocales[ lang ][ key ] = loc[ key ]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\n\t\t\tconst targets = Object.keys( locales ).map( lang => {\n\t\t\t\tconst start = Date.now()\n\t\t\t\tconst target = pack.resolve( `-/${bundle}.locale=${ lang }.json` )\n\t\t\t\t\n\t\t\t\tconst locale = locales[ lang ]\n\n\t\t\t\tif( lang !== 'en' && locales['en'] ) {\n\t\t\t\t\t\n\t\t\t\t\tfor( let key in locale ) {\n\t\t\t\t\t\tif( key in locales[ 'en' ] ) continue\n\t\t\t\t\t\tdelete locale[ key ]\n\t\t\t\t\t\tthis.$.$mol_log3_warn({\n\t\t\t\t\t\t\tplace: `${this}.buildLocale()`,\n\t\t\t\t\t\t\tmessage: `Excess locale key`,\n\t\t\t\t\t\t\thint: 'May be you forgot to remove this key?',\n\t\t\t\t\t\t\tlang,\n\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconst locale_sorted = {}\n\n\t\t\t\tfor( let key of Object.keys( locale ).sort() ) {\n\t\t\t\t\tlocale_sorted[ key ] = locale[ key ]\n\t\t\t\t}\n\n\t\t\t\ttarget.text( JSON.stringify( locale_sorted , null , '\\t' ) )\n\t\t\t\t\n\t\t\t\tthis.logBundle( target , Date.now() - start )\n\t\t\t\t\n\t\t\t\treturn target\n\t\t\t} )\n\t\t\t\n\t\t\treturn targets\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tbundleDepsJSON( { path , exclude , bundle } : { path : string , exclude? : string[] , bundle : string } ) : $mol_file[] {\n\t\t\tconst start = Date.now()\n\t\t\tconst pack = $mol_file.absolute( path )\n\t\t\t\n\t\t\tconst list = this.sourcesAll( { path , exclude } )\n\t\t\tif( !list.length ) return []\n\n\t\t\tconst origs = list.filter( src => !/\\/-/.test( src.path() ) )\n\t\t\t\n\t\t\tconst sloc = {} as Record< string , number >\n\t\t\tfor( const src of origs ) {\n\t\t\t\tconst ext = src.name().replace( /^.*\\./ , '' )\n\t\t\t\tconst count = src.text().trim().split( /[\\n\\r]\\s*/ ).length\n\t\t\t\tsloc[ ext ] = ( sloc[ ext ] || 0 ) + count\n\t\t\t}\n\t\t\t\n\t\t\tconst graph = this.graph( { path , exclude } )\n\t\t\t\n\t\t\tconst deps = {} as Record<string, Record<string, number>>\n\t\t\tfor( let dep in graph.nodes ) {\n\t\t\t\tdeps[ dep ] = this.dependencies( { path : this.root().resolve( dep ).path() , exclude } )\n\t\t\t}\n\t\t\t\n\t\t\tconst data = {\n\t\t\t\tfiles : list.map( src => src.relate( this.root() ) ) ,\n\t\t\t\tmods : graph.sorted ,\n\t\t\t\tedgesIn : graph.edgesIn ,\n\t\t\t\tedgesOut : graph.edgesOut ,\n\t\t\t\tsloc ,\n\t\t\t\tdeps\n\t\t\t} as const\n\t\t\t\n\t\t\tconst target = pack.resolve( `-/${bundle}.deps.json` )\n\t\t\ttarget.text( JSON.stringify( data ) )\n\t\t\t\n\t\t\tthis.logBundle( target , Date.now() - start )\n\t\t\t\n\t\t\treturn [ target ]\n\t\t}\n\t}\n\t\n\tfunction $mol_build_depsMerge(\n\t\ttarget : { [ index : string ] : number } ,\n\t\tsource : { [ index : string ] : number }\n\t) : { [ index : string ] : number } {\n\t\tfor( var path in source ) {\n\t\t\tif( target[ path ] >= source[ path ] ) continue\n\t\t\ttarget[ path ] = source[ path ]\n\t\t}\n\t\treturn target\n\t}\n\t\n\t$mol_build.dependors[ 'js' ] = source => {\n\t\tvar depends : { [ index : string ] : number } = {}\n\t\t\n\t\tvar lines = String( source.text() )\n\t\t.replace( /\\/\\*[^]*?\\*\\//g , '' ) // drop block comments\n\t\t.replace( /\\/\\/.*$/gm , '' ) // drop inline comments\n\t\t.split( '\\n' )\n\t\t\n\t\tlines.forEach(\n\t\t\tfunction( line ) {\n\t\t\t\tvar indent = /^([\\s\\t]*)/.exec( line )!\n\t\t\t\tvar priority = -indent[ 0 ].replace( /\\t/g , '    ' ).length / 4\n\t\t\t\t\n\t\t\t\tline.replace(\n\t\t\t\t\t/require\\(\\s*['\"](.*?)['\"]\\s*\\)/ig , ( str , path )=> {\n\t\t\t\t\t\tpath = path.replace( /(\\/[^\\/.]+)$/ , '$1.js' ).replace( /\\/$/, '/index.js' )\n\t\t\t\t\t\tif( path[0] === '.' ) path = '../' + path\n\t\t\t\t\t\t$mol_build_depsMerge( depends , { [ path ] : priority } )\n\t\t\t\t\t\treturn str\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t)\n\t\t\n\t\treturn depends\n\t}\n\t\n\t$mol_build.dependors[ 'ts' ] = $mol_build.dependors[ 'tsx' ] = $mol_build.dependors[ 'jam.js' ] = source => {\n\t\tvar depends : { [ index : string ] : number } = {}\n\t\t\n\t\tvar lines = String( source.text() )\n\t\t.replace( /\\/\\*(?!\\*)[\\s\\S]*?\\*\\//g , '' ) // drop block comments except doc-comments\n\t\t.replace( /\\/\\/.*$/gm , '' ) // drop inline comments\n\t\t.split( '\\n' )\n\t\t\n\t\tlines.forEach(\n\t\t\tfunction( line ) {\n\t\t\t\tvar indent = /^([\\s\\t]*)/.exec( line )!\n\t\t\t\tvar priority = -indent[ 0 ].replace( /\\t/g , '    ' ).length / 4\n\t\t\t\t\n\t\t\t\tline.replace(\n\t\t\t\t\t/\\$([a-z0-9]{2,})(?:((?:[._A-Z0-9][a-z0-9]+)+)|\\[\\s*['\"]([^'\"]+?)['\"]\\s*\\])?/g , ( str , pack , path , name )=> {\n\t\t\t\t\t\tif( path ) path = '/' + pack + path.replace( /(?=[A-Z])/g , '_' ).toLowerCase().replace( /[_.\\[\\]'\"]+/g , '/' )\n\t\t\t\t\t\tif( name ) name = '/' + pack + '/' + name\n\t\t\t\t\t\tpack = '/' + pack\n\t\t\t\t\t\t$mol_build_depsMerge( depends , { [ path || name || pack ] : priority } )\n\t\t\t\t\t\treturn str\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tline.replace(\n\t\t\t\t\t/require\\(\\s*['\"](.*?)['\"]\\s*\\)/ig , ( str , path )=> {\n\t\t\t\t\t\t$mol_build_depsMerge( depends , { [ path ] : priority } )\n\t\t\t\t\t\treturn str\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t)\n\t\t\n\t\treturn depends\n\t}\n\t\n\t$mol_build.dependors[ 'view.ts' ] = source => {\n\t\tvar treeName = './' + source.name().replace( /ts$/ , 'tree' )\n\t\tvar depends : { [ index : string ] : number } = { [ treeName ] : 0 }\n\t\t$mol_build_depsMerge( depends , $mol_build.dependors[ 'ts' ]!( source ) )\n\t\treturn depends\n\t}\n\t\n\t$mol_build.dependors[ 'node.ts' ] = $mol_build.dependors[ 'web.ts' ] = source => {\n\t\tvar common = './' + source.name().replace( /\\.(node|web)\\.ts$/ , '.ts' )\n\t\tvar depends : { [ index : string ] : number } = { [ common ] : 0 }\n\t\t$mol_build_depsMerge( depends , $mol_build.dependors[ 'ts' ]!( source ) )\n\t\treturn depends\n\t}\n\t\n\t$mol_build.dependors[ 'view.css' ] = source => {\n\t\tvar treeName = './' + source.name().replace( /css$/ , 'tree' )\n\t\tvar depends : { [ index : string ] : number } = { [ treeName ] : 0 }\n\t\t$mol_build_depsMerge( depends , $mol_build.dependors[ 'css' ]!( source ) )\n\t\treturn depends\n\t}\n\t\n\t$mol_build.dependors[ 'css' ] = source => {\n\n\t\tvar depends : { [ index : string ] : number } = {\n\t\t\t'/mol/style/attach': 0,\n\t\t}\n\t\t\n\t\tvar lines = String( source.text() )\n\t\t.replace( /\\/\\*[^]*?\\*\\//g , '' ) // drop block comments\n\t\t.replace( /\\/\\/.*$/gm , '' ) // drop inline comments\n\t\t.split( '\\n' )\n\t\t\n\t\tlines.forEach(\n\t\t\tfunction( line ) {\n\t\t\t\tvar indent = /^([\\s\\t]*)/.exec( line )!\n\t\t\t\tvar priority = -indent[ 0 ].replace( /\\t/g , '    ' ).length / 4\n\t\t\t\t\n\t\t\t\tline.replace(\n\t\t\t\t\t/(?:--|[\\[\\.#])([a-z][a-z0-9]+(?:[-_][a-z0-9]+)+)/ig , ( str , name )=> {\n\t\t\t\t\t\t$mol_build_depsMerge( depends , { [ '/' + name.replace( /[._-]/g , '/' ) ] : priority } )\n\t\t\t\t\t\treturn str\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t)\n\n\t\treturn depends\n\t}\n\t\n\t$mol_build.dependors[ 'meta.tree' ] = source => {\n\t\tconst depends : { [ index : string ] : number } = {}\n\t\t\n\t\tconst tree = $mol_tree.fromString( source.text() , source.path() )\n\t\t\n\t\ttree.select( 'require' ).sub.forEach( leaf => {\n\t\t\tdepends[ leaf.value ] = 0\n\t\t} )\n\t\t\n\t\ttree.select( 'include' ).sub.forEach( leaf => {\n\t\t\tdepends[ leaf.value ] = -9000\n\t\t} )\n\t\t\n\t\treturn depends\n\t}\n\t\n\t$mol_build.dependors[ 'view.tree' ] = source => {\n\t\treturn {\n\t\t\t[`/${ source.parent().relate() }/-view.tree/${ source.name() }.ts`]: 0,\n\t\t}\n\t}\n\t\n}\n","namespace $ {\n\t\n\texport class $mol_server extends $mol_object {\n\t\t\n\t\t@ $mol_mem\n\t\texpress() {\n\t\t\tvar express = $node['express']()\n\t\t\t\n\t\t\tthis.expressHandlers().forEach( plugin => express.use( plugin ) )\n\t\t\t\n\t\t\treturn express\n\t\t}\n\n\t\t@ $mol_mem\n\t\thttp() {\n\n\t\t\tconst server = $node.http.createServer( this.express() )\n\n\t\t\t$node['portastic'].find(\n\t\t\t\t{\n\t\t\t\t\tmin : this.port() ,\n\t\t\t\t\tmax : this.port() + 1000 ,\n\t\t\t\t\tretrieve : 1\n\t\t\t\t}\n\t\t\t).then(\n\t\t\t\t( ports : number[] ) => {\n\t\t\t\t\tserver.listen( ports[ 0 ] )\n\t\t\t\t\tthis.$.$mol_log3_done({\n\t\t\t\t\t\tplace: `${ this }` ,\n\t\t\t\t\t\tmessage: `Started` ,\n\t\t\t\t\t\tlocation: `http://127.0.0.1:${ ports[0] }/`\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t)\n\n\t\t\treturn server\n\n\t\t}\n\n\t\t@ $mol_mem\n\t\tsocket() {\n\n\t\t\tconst socket = new $node.ws.Server({\n\t\t\t\tserver : this.http() ,\n\t\t\t\tperMessageDeflate: {\n\t\t\t\t\tzlibDeflateOptions: {\n\t\t\t\t\t\tchunkSize: 1024,\n\t\t\t\t\t\tmemLevel: 7,\n\t\t\t\t\t\tlevel: 3\n\t\t\t\t\t},\n\t\t\t\t\tzlibInflateOptions: {\n\t\t\t\t\t\tchunkSize: 10 * 1024\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t})\n\n//\t\t\tsocket.on( 'connection' , line => {\n//\t\t\t\tline.on( 'message' , message => line.send( message ) )\n//\t\t\t} )\n\n\t\t\treturn socket\n\n\t\t}\n\n\t\texpressHandlers() : any[] {\n\t\t\treturn [\n\t\t\t\tthis.expressCompressor() ,\n\t\t\t\tthis.expressBodier() ,\n\t\t\t\tthis.expressGenerator() ,\n\t\t\t\tthis.expressIndex() ,\n\t\t\t\tthis.expressFiler() ,\n\t\t\t\tthis.expressDirector() ,\n\t\t\t]\n\t\t}\n\t\t\n\t\texpressCompressor() {\n\t\t\treturn $node['compression']() as unknown\n\t\t}\n\t\t\n\t\texpressBodier() {\n\t\t\treturn $node[ 'body-parser' ].json(\n\t\t\t\t{\n\t\t\t\t\tlimit : this.bodyLimit()\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t\t\n\t\texpressFiler() {\n\t\t\treturn $node.express.static(\n\t\t\t\t$node.path.resolve( this.rootPublic() ) ,{\n\t\t\t\t\tmaxAge : this.cacheTime()\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t\t\n\t\texpressDirector() {\n\t\t\treturn $node['serve-index']( this.rootPublic() , { icons : true } ) as unknown\n\t\t}\n\n\t\texpressIndex() {\n\t\t\treturn (\n\t\t\t\treq : typeof $node.express.request ,\n\t\t\t\tres : typeof $node.express.response ,\n\t\t\t\tnext : () => void\n\t\t\t) => next()\n\t\t}\n\t\t\n\t\texpressGenerator() {\n\t\t\treturn ( req : any , res : any , next : () => void )=> next()\n\t\t}\n\t\t\n\t\tbodyLimit() {\n\t\t\treturn '1mb'\n\t\t}\n\t\t\n\t\tcacheTime() {\n\t\t\treturn 1000 * 60 * 60 * 24 * 365 * 1000\n\t\t}\n\t\t\n\t\tport() {\n\t\t\treturn 80\n\t\t}\n\t\t\n\t\trootPublic() {\n\t\t\treturn '.'\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\n\tconst a_stack = [] as any[]\n\tconst b_stack = [] as any[]\n\n\tlet cache = null as null | WeakMap< any , WeakMap< any , boolean > >\n\n\texport function $mol_compare_deep< Value >( a : Value , b : Value ) : boolean {\n\n\t\tif( Object.is( a , b ) ) return true\n\n\t\tconst a_type = typeof a\n\t\tconst b_type = typeof b\n\n\t\tif( a_type !== b_type ) return false\n\n\t\tif( a_type === 'function' ) return String( a ) === String( b )\n\t\tif( a_type !== 'object' ) return false\n\n\t\tif( !a || !b ) return false\n\n\t\tif( a instanceof Error ) return false\n\t\tif( a['constructor'] !== b['constructor'] ) return false\n\n\t\tif( a instanceof RegExp ) return Object.is( String( a ) , String( b ) )\n\n\t\tconst ref = a_stack.indexOf( a )\n\t\t\n\t\tif( ref >= 0 ) {\n\t\t\treturn Object.is( b_stack[ ref ] , b )\n\t\t}\n\n\t\tif( !cache ) cache = new WeakMap\n\n\t\tlet a_cache = cache.get( a )\n\t\tif( a_cache ) {\n\n\t\t\tconst b_cache = a_cache.get( b )\n\t\t\tif( typeof b_cache === 'boolean' ) return b_cache\n\n\t\t} else {\n\n\t\t\ta_cache = new WeakMap< any , boolean >()\n\t\t\tcache.set( a , a_cache )\n\n\t\t}\n\n\t\ta_stack.push( a )\n\t\tb_stack.push( b )\n\n\t\tlet result! : boolean\n\n\t\ttry {\n\n\t\t\tif( a[ Symbol.iterator ] ) {\n\t\t\t\t\n\t\t\t\tconst a_iter = a[ Symbol.iterator ]()\n\t\t\t\tconst b_iter = b[ Symbol.iterator ]()\n\t\n\t\t\t\twhile( true ) {\n\n\t\t\t\t\tconst a_next = a_iter.next()\n\t\t\t\t\tconst b_next = b_iter.next()\n\n\t\t\t\t\tif( a_next.done !== a_next.done ) return result = false\n\t\t\t\t\tif( a_next.done ) break\n\n\t\t\t\t\tif( !$mol_compare_deep( a_next.value , b_next.value ) ) return result = false\n\n\t\t\t\t}\n\n\t\t\t\treturn result = true\n\n\t\t\t}\n\n\t\t\tlet count = 0\n\n\t\t\tfor( let key in a ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\tif( !$mol_compare_deep( a[key] , b[key] ) ) return result = false\n\t\t\t\t\n\t\t\t\t} catch( error ) {\n\n\t\t\t\t\t$mol_fail_hidden( new $mol_error_mix( `Failed ${ JSON.stringify( key ) } fields comparison of ${a} and ${b}` , error ) )\n\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t++ count\n\n\t\t\t}\n\t\n\t\t\tfor( let key in b ) {\n\n\t\t\t\t--count\n\t\t\t\t\n\t\t\t\tif( count < 0 ) return result = false\n\t\t\t\t\n\t\t\t}\n\t\n\t\t\tconst a_val = a['valueOf']()\n\t\t\tif( Object.is( a_val , a ) ) return result = true\n\t\t\t\n\t\t\tconst b_val = b['valueOf']()\n\t\t\tif( !Object.is( a_val , b_val ) ) return result = false\n\n\t\t\treturn result = true\n\n\t\t} finally {\n\t\t\t\n\t\t\ta_stack.pop()\n\t\t\tb_stack.pop()\n\n\t\t\tif( a_stack.length === 0 ) {\n\t\t\t\tcache = null\n\t\t\t} else {\n\t\t\t\ta_cache.set( b , result )\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n","namespace $ {\n\t\n\texport class $mol_build_server extends $mol_server {\n\t\t\n\t\texpressGenerator() {\n\t\t\treturn $mol_fiber_root( (\n\t\t\t\treq : typeof $node.express.request ,\n\t\t\t\tres : typeof $node.express.response ,\n\t\t\t\tnext : () => any\n\t\t\t)=> {\n\n\t\t\t\ttry {\n\n\t\t\t\t\treturn $mol_fiber_unlimit( ()=> this.generate( req.url ) && Promise.resolve().then( next ) )\n\t\t\t\t\n\t\t\t\t} catch( error ) {\n\n\t\t\t\t\tif( typeof error.then === 'function' ) $mol_fail_hidden( error )\n\t\t\t\t\t\n\t\t\t\t\tif( $mol_fail_catch( error ) ) {\n\t\t\t\t\t\tthis.$.$mol_log3_fail({\n\t\t\t\t\t\t\tplace: `${this}.expressGenerator()`,\n\t\t\t\t\t\t\turi: req.path,\n\t\t\t\t\t\t\tmessage: error.message,\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif( req.url.match( /\\.js$/ ) ) {\n\n\t\t\t\t\t\tconst script = ( error as Error ).message.split( '\\n\\n' ).map( msg => {\n\t\t\t\t\t\t\treturn `console.error( ${ JSON.stringify( msg ) } )`\n\t\t\t\t\t\t} ).join( '\\n' )\n\t\t\t\t\t\t\n\t\t\t\t\t\tres.send( script ).end()\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tres.status(500).send( error.message ).end()\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t} )\n\t\t}\n\t\t\n\t\tbuild() : $mol_build {\n\t\t\treturn $mol_fail( new Error( 'Not implemented' ) )\n\t\t}\n\n\t\t@ $mol_mem_key\n\t\tgenerate( url : string ) {\n\n\t\t\tconst matched = url.match( /^(.*)\\/-\\/(\\w+(?:.\\w+)+)$/ )\n\t\t\tif( !matched ) return <$mol_file[]>[]\n\t\t\t\n\t\t\tconst build = this.build()\n\t\t\t\n\t\t\tconst [ , rawpath , bundle ] = matched\n\t\t\tconst mod = build.root().resolve( rawpath )\n\n\t\t\tif( bundle === 'web.css' ) {\n\t\t\t\tthis.$.$mol_log3_warn({\n\t\t\t\t\tplace: `${this}.generate()`,\n\t\t\t\t\tmessage: 'CSS compiles into JS bundle now',\n\t\t\t\t\thint: 'Remove link to web.css',\n\t\t\t\t})\n\t\t\t}\n\t\t\t\n\t\t\tconst path = mod.path()\n\n\t\t\treturn build.bundle( { path , bundle } )\n\t\t\t\n\t\t}\n\t\t\n\t\texpressIndex() {\n\t\t\treturn (\n\t\t\t\treq : typeof $node.express.request ,\n\t\t\t\tres : typeof $node.express.response ,\n\t\t\t\tnext : () => void\n\t\t\t) => {\n\t\t\t\tconst match =  req.url.match( /(.*[^\\-]\\/)([\\?#].*)?$/ )\n\t\t\t\tif (! match) return next()\n\n\t\t\t\tconst file = $mol_file.absolute(this.rootPublic())\n\t\t\t\t\t.resolve(`${req.path}index.html`)\n\n\t\t\t\tif (! file.exists()) return next()\n\n\t\t\t\tres.redirect(301, `${match[1]}-/test.html${match[2] ?? ''}`)\n\t\t\t}\n\t\t}\n\t\t\n\t\tport() {\n\t\t\treturn 9080\n\t\t}\n\n\t\t@ $mol_mem\n\t\tstart() {\n\n\t\t\treturn this.socket().on( 'connection' , ( line , req )=> {\n\t\t\t\t\n\t\t\t\tconst path = req.url!.replace( /\\/-.*/ , '' ).substring( 1 )\n\n\t\t\t\tconst build = this.build()\n\t\t\t\tconst bundle = build.root().resolve( path )\n\n\t\t\t\tthis.$.$mol_log3_rise({\n\t\t\t\t\tplace: this ,\n\t\t\t\t\tmessage: `Connect` ,\n\t\t\t\t\tpath ,\n\t\t\t\t})\n\n\t\t\t\tconst autorun = $mol_atom2_autorun( ()=> {\n\n\t\t\t\t\ttry {\n\t\t\n\t\t\t\t\t\tconst sources = build.sourcesAll({ path: bundle.path() , exclude : [ 'node' ] })\n\t\t\t\t\t\tfor( const src of sources ) src.buffer()\n\t\t\n\t\t\t\t\t} catch( error ) {\n\n\t\t\t\t\t\tif( $mol_compare_deep( autorun.error , error ) ) return true\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif( !$mol_atom2_value( ()=> autorun.get() ) ) return true\n\n\t\t\t\t\tthis.$.$mol_log3_rise({\n\t\t\t\t\t\tplace: `${this}`,\n\t\t\t\t\t\tmessage: `$mol_build_obsolete`,\n\t\t\t\t\t\tpath\n\t\t\t\t\t})\n\t\t\t\t\t\t\n\t\t\t\t\tline.send( '$mol_build_obsolete' )\n\n\t\t\t\t\treturn true\n\t\t\n\t\t\t\t} )\n\n\t\t\t\tline.on( 'close' , ()=> autorun.destructor() )\n\n\t\t\t} )\n\t\t\t\n\t\t}\n\t\t\n\t}\n\n}\n","namespace $ {\n\n\texport class $mol_plugin extends $mol_view {\n\n\t\t@ $mol_mem\n\t\tdom_node( next? : Element ) {\n\n\t\t\tconst node = next || $mol_owning_get( this , $mol_view )!.dom_node()\n\n\t\t\t$mol_dom_render_attributes( node , this.attr_static() )\n\n\t\t\tconst events = this.event()\n\t\t\tfor( let event_name in events ) {\n\t\t\t\tnode.addEventListener(\n\t\t\t\t\tevent_name ,\n\t\t\t\t\t$mol_fiber_root( events[ event_name ] ) ,\n\t\t\t\t\t{ passive : false } as any ,\n\t\t\t\t)\n\t\t\t}\n\n\t\t\treturn node\n\t\t}\n\n\t\tattr_static() : { [ key : string ] : string|number|boolean } {\n\t\t\treturn {}\n\t\t}\n\n\t\tevent() : { [ key : string ] : ( event : Event )=> void } {\n\t\t\treturn {}\n\t\t}\n\t\t\n\t\trender() {\n\t\t\tthis.dom_node_actual()\n\t\t}\n\t\t\n\t}\n\n}\n"]}